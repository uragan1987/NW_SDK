BehaviorContext dump 11-20-2021:

=====================================================================================================================================
[17:10:39] m_methods count: 6
[000] 14019D230 "double TimePointToSeconds(AZ::u64);" 
[001] 14019CEB0 "double TimePointToMilliseconds(AZ::u64);" 
[002] 140414B50 "EntityId MakeEntityId();" 
[003] 1443B4CB0 "const char* GetJointFromAliasCrC(EntityId&, Crc32);" 
[004] 1443B4BF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetJointFromAlias(EntityId&, const char*);" 
[005] 14019CF40 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> TimePointToString(AZ::u64);" 
 
=====================================================================================================================================
[17:10:39] m_properties count: 1389
[0000] float FloatEpsilon = 0.000000; (0x14019D1B0)
[0001] AZ::Uuid CylinderShapeComponentTypeId = B0C6AA97-E754-4E33-8D32-33E267DB622F; (0x141947020)
[0002] AZ::Uuid BoxShapeComponentTypeId = 5EDF4B9E-0D3D-40B8-8C91-5142BCFC30A6; (0x141946F20)
[0003] AZ::Uuid SphereShapeComponentTypeId = E24CBFF0-2531-4F8D-A8AB-47AF4D54BCD2; (0x141946F50)
[0004] int eMotionParamID_AimHorzNavAngle = 0; (0x14019D270)
[0005] int eMotionParamID_AimHorzNavSpeed = 0; (0x14019D050)
[0006] int eMotionParamID_BlendWeight4 = 0; (0x14019D330)
[0007] int eMotionParamID_TravelDist = 0; (0x14019CF00)
[0008] int eMotionParamID_TurnAngle = 0; (0x14019D060)
[0009] int eMotionParamID_TravelAngle = 0; (0x14019CEA0)
[0010] AZ::Uuid RigidPhysicsComponentTypeId = BF2ED241-6364-4D78-8008-498EF2A2659C; (0x141947040)
[0011] int eMovieEvent_BeyondEnd = 0; (0x14019D350)
[0012] int eMovieEvent_Updated = 0; (0x14019CF10)
[0013] int eMovieEvent_Aborted = 0; (0x14019CEA0)
[0014] int eMovieEvent_Stopped = 0; (0x140190B20)
[0015] int eMovieEvent_Started = 0; (0x14018FB20)
[0016] int eUiParticleInitialDirectionType_RelativeToEmitAngle = 0; (0x14018FB20)
[0017] int eUiParticleCoordinateType_Polar = 0; (0x140190B20)
[0018] int eUiParticleCoordinateType_Cartesian = 0; (0x14018FB20)
[0019] int eUiEmitShape_Point = 0; (0x14018FB20)
[0020] int eUiLayoutGridStartingDirection_HorizontalOrder = 0; (0x14018FB20)
[0021] int eUiFlipbookAnimationLoopType_PingPong = 0; (0x14019CEA0)
[0022] int eUiScrollerOrientation_Horizontal = 0; (0x14018FB20)
[0023] int eUiScrollBoxScrollBarVisibility_AutoHide = 0; (0x140190B20)
[0024] int eUiScrollBoxScrollBarVisibility_AlwaysShow = 0; (0x14018FB20)
[0025] int eUiScrollBoxSnapMode_Grid = 0; (0x14019CEA0)
[0026] int eUiScrollBoxSnapMode_None = 0; (0x14018FB20)
[0027] int eUiDropState_Normal = 0; (0x14018FB20)
[0028] int eUiDragState_Invalid = 0; (0x14019CEA0)
[0029] int eUiTextCaseSetting_Lower = 0; (0x140190B20)
[0030] int eUiTextSet_SetLocalized = 0; (0x14019CEA0)
[0031] int eUiTextSet_SetAsIs = 0; (0x14018FB20)
[0032] int eUiTextShrinkToFit_WidthOnly = 0; (0x14019CEA0)
[0033] int eUiTextShrinkToFit_Uniform = 0; (0x140190B20)
[0034] int eUiTextWrapTextSetting_WrapSplitWords = 0; (0x14019CEA0)
[0035] int eUiTextWrapTextSetting_Wrap = 0; (0x140190B20)
[0036] int eUiTextOverflowMode_Ellipsis = 0; (0x14019CEA0)
[0037] int eUiImageSequenceImageType_Stretched = 0; (0x14018FB20)
[0038] int eUiFillEdgeOrigin_Top = 0; (0x140190B20)
[0039] int eUiFillEdgeOrigin_Left = 0; (0x14018FB20)
[0040] int eUiFillCornerOrigin_BottomLeft = 0; (0x14019CF10)
[0041] int eUiFillCornerOrigin_TopRight = 0; (0x140190B20)
[0042] int eUiFillCornerOrigin_TopLeft = 0; (0x14018FB20)
[0043] int eUiSpriteType_SpriteAsset = 0; (0x14018FB20)
[0044] int eUiImageType_StretchedToFit = 0; (0x14019D060)
[0045] int eUiImageType_Tiled = 0; (0x14019CF10)
[0046] int eUiImageType_Fixed = 0; (0x14019CEA0)
[0047] int eUiImageType_Sliced = 0; (0x140190B20)
[0048] int eUiRecompute_TransformOnly = 0; (0x140190B20)
[0049] int eUiAnimationEvent_Aborted = 0; (0x14019CEA0)
[0050] int eUiAnimationEvent_Stopped = 0; (0x140190B20)
[0051] int eUiNavigationMode_Custom = 0; (0x140190B20)
[0052] int eUiInteractableState_Disabled = 0; (0x14019CF10)
[0053] int eUiInteractableState_Pressed = 0; (0x14019CEA0)
[0054] int eUiHAlign_Right = 0; (0x14019CEA0)
[0055] int eUiVerticalOrder_BottomToTop = 0; (0x140190B20)
[0056] int eUiHorizontalOrder_RightToLeft = 0; (0x140190B20)
[0057] int eUiHorizontalOrder_LeftToRight = 0; (0x14018FB20)
[0058] int ScriptedEntityTweenerEasingType_InOut = 0; (0x14019CEA0)
[0059] int ScriptedEntityTweenerEasingMethod_Bounce = 0; (0x14019D330)
[0060] int ScriptedEntityTweenerEasingMethod_Back = 0; (0x14019D360)
[0061] int eUiVerticalOrder_TopToBottom = 0; (0x14018FB20)
[0062] int ScriptedEntityTweenerEasingMethod_Elastic = 0; (0x14019D2F0)
[0063] int ScriptedEntityTweenerEasingMethod_Expo = 0; (0x14019D350)
[0064] int eUiVAlign_Top = 0; (0x14018FB20)
[0065] int ScriptedEntityTweenerEasingMethod_Sine = 0; (0x14019CF00)
[0066] int ScriptedEntityTweenerEasingMethod_Quart = 0; (0x14019CF10)
[0067] int ScriptedEntityTweenerEasingMethod_Cubic = 0; (0x14019CEA0)
[0068] int ScriptedEntityTweenerEasingMethod_Linear = 0; (0x14018FB20)
[0069] int ORStructure_Gate2 = 0; (0x14019CD90)
[0070] int ORStructure_DefenseStructure2 = 0; (0x14019CF10)
[0071] int ORStructure_Armory = 0; (0x14018FB20)
[0072] int OutpostRush_StructureStatusMaskRuin = 0; (0x14019D060)
[0073] int OutpostRush_CapturePointStatusMask = 0; (0x142BCA960)
[0074] int OutpostRush_CapturePointStatusBitsPerField = 0; (0x14019D2F0)
[0075] int eUiTooltipDisplayAutoPositionMode_OffsetFromMouse = 0; (0x14018FB20)
[0076] int OutpostRush_SummonCountMask = 0; (0x1411F1BB0)
[0077] int OutpostRush_CaptureCountMask = 0; (0x1411F1BB0)
[0078] int OutpostRush_CaptureCountBitsPerTeam = 0; (0x1409DE6C0)
[0079] int OutpostRush_ScoreMask = 0; (0x1411F1BB0)
[0080] int eGameModeParticipantStatus_DeathsDoorFlag = 0; (0x14019D2F0)
[0081] int eGameModeParticipantStatus_DeadFlag = 0; (0x14019D060)
[0082] int eGameModeParticipantStatus_DeathsDoor = 0; (0x14019CF10)
[0083] AZ::Uuid StaticPhysicsComponentTypeId = 95D89791-6397-41BC-AAC5-95282C8AD9D4; (0x141946F00)
[0084] int eGameModeParticipantStatus_Active = 0; (0x14018FB20)
[0085] int eP2PTradeFailure_OtherEconomyLocked = 0; (0x141847B20)
[0086] int eP2PTradeFailure_EconomyLocked = 0; (0x1409DE6E0)
[0087] int ShapeChangeReasons_ShapeChanged = 0; (0x140190B20)
[0088] int eP2PTradeFailure_MaxCoinExceeded = 0; (0x1409DE700)
[0089] int eP2PTradeFailure_TradeCanceled = 0; (0x1409DE6C0)
[0090] int eP2PTradeFailure_FailedToRemoveItemsOrCoin = 0; (0x1409DE720)
[0091] int eP2PTradeFailure_NotCoordinator = 0; (0x140D4BEF0)
[0092] int eP2PTradeFailure_BothPlayersNotConfirmed = 0; (0x14019D270)
[0093] int eP2PTradeFailure_TradeStateMismatch = 0; (0x14019D050)
[0094] int eP2PTradeFailure_ConfirmedTooSoon = 0; (0x14019D330)
[0095] int eP2PTradeFailure_BothPlayersNotLockedIn = 0; (0x14019D360)
[0096] int eP2PTradeFailure_TradeAlreadyConfirmed = 0; (0x14019D350)
[0097] int eP2PTradeFailure_InvalidCoinAmount = 0; (0x14019CF00)
[0098] int eP2PTradeFailure_MaxItemsExceeded = 0; (0x14019D060)
[0099] int eP2PTradeFailure_PlayerRefMismatch = 0; (0x14019CEA0)
[0100] int eGender_Female = 0; (0x140190B20)
[0101] int eXpEventType_HousingPointDecrease = 0; (0x14019D330)
[0102] int eXpEventType_HousingPointIncrease = 0; (0x14019D360)
[0103] int eXpEventType_Tokens = 0; (0x14019D2F0)
[0104] int eXpEventType_Reputation = 0; (0x14019CD90)
[0105] int eXpEventType_Azoth = 0; (0x14019D350)
[0106] int eXpEventType_PlayerDamage = 0; (0x14019CF00)
[0107] int eXpEventType_Tradeskill = 0; (0x14019D060)
[0108] int eXpEventType_Currency = 0; (0x14019CEA0)
[0109] int eListEntryStatus_VisibleSelected = 0; (0x14019CF10)
[0110] int eListEntryStatus_VisibleAvailable = 0; (0x140190B20)
[0111] unsigned int INVALID_PARTICLE_ID = 0; (0x14018FB20)
[0112] int EmitterNoFollow = 0; (0x14019CEA0)
[0113] int eUiTextShrinkToFit_None = 0; (0x14018FB20)
[0114] int EmitterFollow_IgnoreRotation = 0; (0x140190B20)
[0115] int eWaterFlagIndex_Salty = 0; (0x14019CF10)
[0116] int eWaterFlagIndex_Fresh = 0; (0x14019CEA0)
[0117] int ORTutorialEvent_Summoning_NoStone = 0; (0x1409DE6F0)
[0118] int ORTutorialEvent_Summoning_FindStone = 0; (0x1409DE6C0)
[0119] int ORTutorialEvent_Summoning_Reminder = 0; (0x1409DE6D0)
[0120] int ORTutorialEvent_Armory_Purpose = 0; (0x14019D050)
[0121] int ORTutorialEvent_Outpost_Contribute = 0; (0x14019D330)
[0122] int ORTutorialEvent_Outpost_CommandPost = 0; (0x14019D360)
[0123] int ORTutorialEvent_Outpost_SiegeWeapons = 0; (0x14019D2F0)
[0124] int ShapeChangeReasons_TransformChanged = 0; (0x14018FB20)
[0125] int ORTutorialEvent_Rules_Portal = 0; (0x14019CF10)
[0126] int ORTutorialEvent_Rules_Score = 0; (0x14019CEA0)
[0127] int ORTutorialEvent_Rules_Capture = 0; (0x140190B20)
[0128] int eAccessibilityTextOptions_Bigger = 0; (0x140190B20)
[0129] int eAccessibilityTextOptions_Regular = 0; (0x14018FB20)
[0130] int eWindowMode_FullscreenWindowed = 0; (0x14019CEA0)
[0131] int eWindowMode_Windowed = 0; (0x140190B20)
[0132] int eCMSDataType_Count = 0; (0x14019CF10)
[0133] int eCMSDataType_WorldWarning = 0; (0x140190B20)
[0134] int eUiNavigationMode_None = 0; (0x14019CEA0)
[0135] int eCMSDataType_Worlds = 0; (0x14018FB20)
[0136] int eTerritoryLandmarkType_FastTravelPoint = 0; (0x141C97420)
[0137] int eTerritoryLandmarkType_OutpostRushSignUp = 0; (0x142F4B9A0)
[0138] int eTerritoryLandmarkType_CampRespawn = 0; (0x140C4CA40)
[0139] int eTerritoryLandmarkType_InnRespawn = 0; (0x1409DE6E0)
[0140] int eTerritoryLandmarkType_TradingPost = 0; (0x140D4BEF0)
[0141] int eTerritoryLandmarkType_CommunityGoalProvider = 0; (0x14019D2F0)
[0142] int eTerritoryLandmarkType_FactionMissionProvider = 0; (0x14019CD90)
[0143] int eTerritoryLandmarkType_TerritoryPlanningBoard = 0; (0x14019D350)
[0144] int eP2PTradeFailure_TradeRequirementsNotMet = 0; (0x14019D2F0)
[0145] int eTerritoryLandmarkType_WarBoard = 0; (0x14019CF00)
[0146] int eP2PTradeFailure_PlayersOutOfRange = 0; (0x1409DE6F0)
[0147] int eTerritoryLandmarkType_Claim = 0; (0x14019D060)
[0148] AZ::Uuid CapsuleShapeComponentTypeId = 967EC13D-364D-4696-AB5C-C00CC05A2305; (0x141946EF0)
[0149] int eTerritoryLandmarkType_WarCamp = 0; (0x14019CF10)
[0150] int eTerritoryLandmarkType_Fort = 0; (0x14019CEA0)
[0151] int eTerritoryLandmarkType_Outpost = 0; (0x142F4B960)
[0152] int eTerritoryLandmarkType_Invalid = 0; (0x14018FB20)
[0153] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_PRECACHE = 0; (0x14019D330)
[0154] int eUiImageType_StretchedToFill = 0; (0x14019CF00)
[0155] int eUiFillCornerOrigin_BottomRight = 0; (0x14019CEA0)
[0156] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_STATIC_WORLD = 0; (0x14019D2F0)
[0157] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_CHARACTERS = 0; (0x14019CD90)
[0158] int eGameModeParticipantStatus_ActiveFlag = 0; (0x140190B20)
[0159] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_OBJECTS = 0; (0x14019D350)
[0160] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START = 0; (0x14019D060)
[0161] int ESYSTEM_GLOBAL_STATE_RUNNING = 0; (0x14019CEA0)
[0162] int ESYSTEM_GLOBAL_STATE_UNKNOWN = 0; (0x14018FB20)
[0163] int ePeriodicRewardsFrequency_Daily = 0; (0x14018FB20)
[0164] int eUiDropState_Valid = 0; (0x140190B20)
[0165] int StealthLevel_NotHidden = 0; (0x14018FB20)
[0166] int eFactionControlCaptureStatus_Contested = 0; (0x140190B20)
[0167] int eFactionControlCaptureStatus_Uncontested = 0; (0x14018FB20)
[0168] int eSettlementProgressionState_Cancelled = 0; (0x14019CF10)
[0169] int eSettlementProgressionState_Expired = 0; (0x14019CEA0)
[0170] int eSettlementProgressionState_Completed = 0; (0x140190B20)
[0171] int eSettlementProgressionState_None = 0; (0x1404D1F00)
[0172] int eSettlementProgressionCategory_HornUpgrade = 0; (0x1409DE6C0)
[0173] int eSettlementProgressionCategory_RepeaterUpgrade = 0; (0x1409DE6D0)
[0174] int eSettlementProgressionCategory_FireBarrelUpgrade = 0; (0x1409DE720)
[0175] int eSettlementProgressionCategory_Event = 0; (0x1409DE6E0)
[0176] int eSettlementProgressionCategory_Church = 0; (0x14019D330)
[0177] int eSettlementProgressionCategory_FortHardPoints = 0; (0x14019D270)
[0178] int eSettlementProgressionCategory_Tanning = 0; (0x14019D2F0)
[0179] int eSettlementProgressionCategory_Carpentry = 0; (0x14019CF00)
[0180] int StealthLevel_PartiallyHidden = 0; (0x140190B20)
[0181] int eListEntryStatus_Hidden = 0; (0x14018FB20)
[0182] int eSettlementProgressionCategory_Outfitting = 0; (0x14019CEA0)
[0183] int eSettlementProgressionCategory_Engineering = 0; (0x140190B20)
[0184] int eSettlementProgressionCategory_None = 0; (0x1404D1F00)
[0185] int eInteractAdditionalType_DungeonEnter = 0; (0x14019CD90)
[0186] int eInteractAdditionalType_HousingEnter = 0; (0x14019D350)
[0187] int eInteractAdditionalType_Container = 0; (0x14019D060)
[0188] int eInteractAdditionalType_Bank = 0; (0x14019CF10)
[0189] int eInteractAdditionalType_None = 0; (0x14018FB20)
[0190] int eConversationResponseType_PvPFlag_NotInASanctuary = 0; (0x14019CF00)
[0191] int eConversationResponseType_PvPFlag_NotInAFaction = 0; (0x14019D060)
[0192] int eTerritoryLandmarkType_GovernorsDesk = 0; (0x14019D360)
[0193] int eConversationResponseType_PvPFlag_IsInGroup = 0; (0x14019CEA0)
[0194] int eConversationResponseType_InProgress = 0; (0x14019CD90)
[0195] int eConversationResponseType_CompletionAvailable = 0; (0x14019D350)
[0196] int eConversationResponseType_Completion = 0; (0x14019CF00)
[0197] int eConversationResponseType_Acceptance = 0; (0x14019D060)
[0198] int eUiImageSequenceImageType_Fixed = 0; (0x140190B20)
[0199] int eConversationResponseType_Proposal = 0; (0x14019CF10)
[0200] int eConversationResponseType_Topic = 0; (0x14019CEA0)
[0201] int ORTutorialEvent_Outpost_Gates = 0; (0x14019D350)
[0202] int eConversationResponseType_Default = 0; (0x140190B20)
[0203] int eConversationOptionType_EventStore = 0; (0x140D4BEF0)
[0204] int eConversationOptionType_ContinueDialogue = 0; (0x14019CD90)
[0205] int eConversationOptionType_OpenInn = 0; (0x14019D330)
[0206] int eConversationOptionType_OpenCommunityBoard = 0; (0x14019D360)
[0207] int eConversationOptionType_ChooseFaction = 0; (0x14019D050)
[0208] int eConversationOptionType_CompleteObjective = 0; (0x14019CF00)
[0209] int eConversationOptionType_ObjectiveDetails = 0; (0x14019CF10)
[0210] int eConversationOptionType_ConversationTopic = 0; (0x14019CEA0)
[0211] int eConversationOptionType_Invalid = 0; (0x14018FB20)
[0212] int eMissionGoalType_Expedition_Loot = 0; (0x1409DE710)
[0213] int eRewardTypePlayerTitle = 0; (0x14019D2F0)
[0214] int eRewardTypeGuildBackgroundColor = 0; (0x14019D350)
[0215] int eTerritoryLandmarkType_GlobalStorage = 0; (0x14019D270)
[0216] int eRewardTypeGuildCrest = 0; (0x14019D060)
[0217] int eRewardTypeItemDye = 0; (0x14019CF10)
[0218] int eRewardTypeEmote = 0; (0x140190B20)
[0219] int eRewardTypeInvalid = 0; (0x14018FB20)
[0220] int UIError_banned_max = 0; (0x143EB7C10)
[0221] int eStoreTabBundles = 0; (0x14019D330)
[0222] int eStoreTabGuildCrestsAndColors = 0; (0x14019D360)
[0223] int eStoreTabToolSkins = 0; (0x14019CD90)
[0224] int eInteractAdditionalType_ApplyResource = 0; (0x14019CEA0)
[0225] int eUiTextWrapTextSetting_NoWrap = 0; (0x14018FB20)
[0226] int eStoreTabWeaponSkins = 0; (0x14019CF00)
[0227] int eUiFillType_RadialCorner = 0; (0x14019CF10)
[0228] int eStoreTabArmorSkins = 0; (0x14019D060)
[0229] int eGameEventContributionLevel_Low = 0; (0x140190B20)
[0230] int eDungeonActivateResponse_Success = 0; (0x14018FB20)
[0231] int eObjectiveType_POI = 0; (0x14019CEA0)
[0232] int eStoreTabConsumables = 0; (0x14019CEA0)
[0233] int eTaxOrFee_RefiningFee = 0; (0x14019D060)
[0234] int eStoreTabFeaturedDeals = 0; (0x140190B20)
[0235] int eEntitlementTransactionType_DebitEntitlements = 0; (0x14019D060)
[0236] int eTerritoryLandmarkType_Settlement = 0; (0x140190B20)
[0237] int eEntitlementTransactionType_SteamMTXRefund = 0; (0x140190B20)
[0238] int eUiNavigationMode_Automatic = 0; (0x14018FB20)
[0239] int ePerkType_Inherent = 0; (0x14019CEA0)
[0240] int eLoadingScreenIds_LEVEL5 = 0; (0x14019CD90)
[0241] int eConversationOptionType_AcceptObjective = 0; (0x14019D060)
[0242] int eEntitlementTransactionType_SteamMTXPurchase = 0; (0x14018FB20)
[0243] int eLoadingScreenIds_LEVEL2 = 0; (0x14019D060)
[0244] int eFishingWaterType_SaltWater_Shallow = 0; (0x14019CF00)
[0245] int eLoadingScreenIds_GAME_START = 0; (0x14018FB20)
[0246] int eSocialChattingState_None = 0; (0x14018FB20)
[0247] int eAmmoType_None = 0; (0x14018FB20)
[0248] int ePaperDollSlotTypes_Invalid = 0; (0x140FE9BE0)
[0249] int eFishingState_FishBiteWindowOpen = 0; (0x14019D360)
[0250] int ePaperDollSlotTypes_Dressing = 0; (0x143EB8100)
[0251] int ePaperDollSlotTypes_OffHandOption1 = 0; (0x141C97420)
[0252] int ePaperDollSlotTypes_MainHandOption2 = 0; (0x142F4B9A0)
[0253] int eBuildableState_Upgrade = 0; (0x14019CD90)
[0254] int eTerritoryBonus_GainStorage = 0; (0x14019CF10)
[0255] int eGameModeQueueEligibilityReason_Ineligible_Conflicting_Event = 0; (0x14019D2F0)
[0256] int eContractFailureReason_CoinTransferalDisabled = 0; (0x14019D330)
[0257] int eRewardTypeEntitlement = 0; (0x14019D270)
[0258] int eBuildingLocationStatus_INVALID_WAR_DEFENDERS_ONLY = 0; (0x144694950)
[0259] int eContractServiceFailureReason_Invalid_Request = 0; (0x14019CF10)
[0260] int ePaperDollSlotTypes_QuickSlot5 = 0; (0x1409DE700)
[0261] int UIError_aoi_character_creation_failed = 0; (0x143EB7E90)
[0262] int eRewardTypeFictionalCurrency = 0; (0x14019D050)
[0263] int ePaperDollSlotTypes_QuickSlot4 = 0; (0x1409DE6F0)
[0264] int eLoadingScreenIds_DEATH = 0; (0x14019D2F0)
[0265] int ePaperDollSlotTypes_QuickSlot1 = 0; (0x1409DE720)
[0266] int ePoiLevels_MinorPoi = 0; (0x14018FB20)
[0267] int eRecipeMode_CraftBlueprint = 0; (0x140190B20)
[0268] int eUiFillType_Radial = 0; (0x14019CEA0)
[0269] int ePaperDollSlotTypes_Cartridge = 0; (0x140D4BEF0)
[0270] int UIError_aoi_afk_kicked = 0; (0x143EB7EA0)
[0271] int eNotificationPriority_VeryLow = 0; (0x14018FB20)
[0272] int ePaperDollSlotTypes_TwoHand = 0; (0x14019D050)
[0273] int ePaperDollSlotTypes_OffHand = 0; (0x14019D330)
[0274] int ePaperDollSlotTypes_Paint = 0; (0x14019D2F0)
[0275] int eContractFailureReason_InsufficientItems = 0; (0x14019CF10)
[0276] int ePaperDollSlotTypes_Token = 0; (0x14019D350)
[0277] int ePaperDollSlotTypes_Amulet = 0; (0x14019CF00)
[0278] int ePaperDollSlotTypes_Feet = 0; (0x14019D060)
[0279] int ePaperDollSlotTypes_Head = 0; (0x14018FB20)
[0280] int ePaperDollSlotTypes_Legs = 0; (0x14019CF10)
[0281] int eHeatEventType_ReportCheating = 0; (0x14019D050)
[0282] int eItemDragContext_Container = 0; (0x14019CF10)
[0283] int eUiImageType_Stretched = 0; (0x14018FB20)
[0284] int eItemContainerSync_DroppedOnDeath = 0; (0x1409DE6D0)
[0285] int eContractEventOpenFilter_Closed = 0; (0x14019CEA0)
[0286] int eRewardTypeMisc = 0; (0x14019D330)
[0287] int StealthLevel_MostlyHidden = 0; (0x14019CEA0)
[0288] int eItemContainerSync_FishingBaitReturned = 0; (0x141C97420)
[0289] int eSubArmyInviteStatus_Declined = 0; (0x14019CEA0)
[0290] int eBuildingLocationStatus_INVALID_BLUEPRINT_NOT_KNOWN = 0; (0x1403B6070)
[0291] int eContractCountThreshold_Less_25 = 0; (0x14019CEA0)
[0292] int eItemContainerSync_Fishing = 0; (0x142F4B9A0)
[0293] int UIError_kicked_easyanticheat = 0; (0x140648200)
[0294] int eItemContainerSync_Debug = 0; (0x14019D360)
[0295] int eBuildableState_Complete = 0; (0x14019CF00)
[0296] int eItemContainerSync_StructureDemolish = 0; (0x14019D2F0)
[0297] int eAbilityIndex3 = 0; (0x14019CEA0)
[0298] int ePeriodicRewardsFrequency_Weekly = 0; (0x140190B20)
[0299] int eItemContainerSync_StructurePickup = 0; (0x14019CD90)
[0300] int eTerritoryUpgradeType_WeakenInvasion = 0; (0x14019CF00)
[0301] int eHousingDecorationResult_TotalHousingItemLimitReached = 0; (0x14019D360)
[0302] int eItemContainerSync_ItemEquipped = 0; (0x14019D060)
[0303] int ePingType_Move = 0; (0x14019CEA0)
[0304] int UIError_banned_cheating = 0; (0x143EB8270)
[0305] int eItemContainerSync_ItemCreated = 0; (0x14019CF10)
[0306] int eBuildingLocationStatus_INVALID_BAD_TERRAIN = 0; (0x14019D2F0)
[0307] int eItemContainerSync_ItemRemoved = 0; (0x14019CEA0)
[0308] int eItemContainerSync_ItemGathered = 0; (0x140190B20)
[0309] int eCMSDataType_MarketingTiles = 0; (0x14019CEA0)
[0310] int eItemContainerSync_ItemAdded = 0; (0x14018FB20)
[0311] int eTerritoryBonus_Invalid = 0; (0x14018FB20)
[0312] int eEquipLoad_Normal = 0; (0x140190B20)
[0313] int eLoadingScreenIds_LEVEL1 = 0; (0x14019CF10)
[0314] int eItemContainerSync_Num = 0; (0x141947010)
[0315] int eEquipLoad_Fast = 0; (0x14018FB20)
[0316] int eVoiceChatInputMode_Always_On = 0; (0x140190B20)
[0317] int eVoiceChatInputMode_Push_To_Talk_Toggle = 0; (0x14019CEA0)
[0318] int eVoiceChatInputMode_Push_To_Talk = 0; (0x14018FB20)
[0319] int eVoiceChatMode_Disabled = 0; (0x14019CEA0)
[0320] int eVoiceChatMode_Only_2d = 0; (0x140190B20)
[0321] int ePaperDollSlotTypes_Mining = 0; (0x143EB7DB0)
[0322] int eUiHAlign_Center = 0; (0x140190B20)
[0323] int eVoiceChatMode_Enabled = 0; (0x14018FB20)
[0324] int eDungeonActivateResponse_NotEnoughMembers = 0; (0x140190B20)
[0325] int eMissionGoalType_Poach = 0; (0x1409DE6F0)
[0326] int eExitGameDestination_MainMenu = 0; (0x140190B20)
[0327] int UIError_login_world_maintenence = 0; (0x14019CF10)
[0328] int eFriendRequestType_Remove = 0; (0x14019D060)
[0329] int eFriendRequestType_Invite = 0; (0x140190B20)
[0330] int eWarNotificationType_Ended = 0; (0x14019CF10)
[0331] int eCanDeclareWarReturnResult_InsufficientContribution = 0; (0x1409DE6F0)
[0332] int eCanDeclareWarReturnResult_WarDisabled = 0; (0x1409DE6C0)
[0333] int eCanDeclareWarReturnResult_FailNoConflictState = 0; (0x1409DE720)
[0334] int ePaperdollSlotAlias_ActiveOffHandWeapon = 0; (0x143EB8260)
[0335] int eFactionControlBufType_Azoth_FastTravel_Distance_Reduction = 0; (0x14019CF00)
[0336] int eContractType_Buy = 0; (0x14018FB20)
[0337] int ORStructure_CommandPost = 0; (0x140190B20)
[0338] int eCanDeclareWarReturnResult_FailPastSiegeWindow = 0; (0x14019D270)
[0339] int eCanDeclareWarReturnResult_FailBeforeSiegeWindow = 0; (0x14019D050)
[0340] int eCanDeclareWarReturnResult_FailDefenderNoTerritory = 0; (0x14019D330)
[0341] int eContractSortBy_ItemName = 0; (0x14018FB20)
[0342] int eUiImageSequenceImageType_StretchedToFit = 0; (0x14019CEA0)
[0343] int eRewardTypeService = 0; (0x140D4BEF0)
[0344] int eObjectiveTaskState_Active = 0; (0x140190B20)
[0345] int eCanDeclareWarReturnResult_FailAlreadyInLottery = 0; (0x14019CF00)
[0346] int eCanDeclareWarReturnResult_FailAlreadyAtWar = 0; (0x14019D060)
[0347] int eContractFailureReason_OutpostStorageFull = 0; (0x14019D060)
[0348] int eCanDeclareWarReturnResult_NotInAGuild = 0; (0x14019CEA0)
[0349] int eHeatEventType_ReportSpam = 0; (0x1409DE720)
[0350] int eContractServiceFailureReason_Server_Error = 0; (0x14019CF00)
[0351] int eWarPhase_Resolution = 0; (0x14019D060)
[0352] int eFortSpawnId_CapturePoint_C = 0; (0x14019CF10)
[0353] int eUiFlipbookAnimationFramerateUnits_FPS = 0; (0x14018FB20)
[0354] int eFriendRequestType_Reject = 0; (0x14019CF10)
[0355] int eWarPhase_Complete = 0; (0x14019CF10)
[0356] int ePingSource_Group2 = 0; (0x14019CEA0)
[0357] int eWarPhase_Conquest = 0; (0x14019CEA0)
[0358] int eCanDeclareWarReturnResult_FailNoPrivilege = 0; (0x140D4BEF0)
[0359] int eGuildMasterActiveResult_StillActive = 0; (0x140190B20)
[0360] int ePaperDollSlotTypes_BagSlot1 = 0; (0x143EB8110)
[0361] int eGuildCreationFailureResponse_BadWords = 0; (0x14019D350)
[0362] int eItemDragContext_Quickslot = 0; (0x14019CEA0)
[0363] int eGuildCreationFailureResponse_Unknown = 0; (0x14019D060)
[0364] int eHousingDecorationMode_Move = 0; (0x14019CEA0)
[0365] int ePaperDollSlotTypes_QuickSlot6 = 0; (0x1409DE710)
[0366] int eGuildCreationFailureResponse_Throttled = 0; (0x140190B20)
[0367] int eGuildCreationFailureResponse_AlreadyInGuild = 0; (0x14018FB20)
[0368] int ePaperDollSlotTypes_QuickSlot2 = 0; (0x1409DE6D0)
[0369] int ePronounType_Female = 0; (0x14019CEA0)
[0370] int eHeatEventType_MessageTooBig = 0; (0x14019D350)
[0371] int ePronounType_None = 0; (0x14018FB20)
[0372] int eRewardTypeGuildForegroundColor = 0; (0x14019CF00)
[0373] int eHeatEventType_AuthorizationFailure = 0; (0x14018FB20)
[0374] int eTitleType_Account = 0; (0x14019CEA0)
[0375] int eTitleType_Character = 0; (0x140190B20)
[0376] int eStructureSize_Invalid = 0; (0x14018FB20)
[0377] int eGuildTreasuryResponse_WithdrawCappedByDailyLimit = 0; (0x14019CD90)
[0378] int eGuildTreasuryResponse_NotEnoughTreasuryFunds = 0; (0x14019CF00)
[0379] int eGuildTreasuryResponse_NotEnoughPlayerFunds = 0; (0x14019D060)
[0380] int eGlobalStorageAllowTransactionType_AllowGiveAndTake = 0; (0x14018FB20)
[0381] int eContractCompletionReason_Expired = 0; (0x14019D060)
[0382] int UIError_aoi_character_registry_failure = 0; (0x1404D1B50)
[0383] int eItemContainerSync_OpenRewardChest = 0; (0x143EB7E90)
[0384] int eSocialViewSimple = 0; (0x14018FB20)
[0385] int eConversationResponseType_Invalid = 0; (0x14018FB20)
[0386] int AudioObstructionType_Ignore = 0; (0x14018FB20)
[0387] int eSocialOrderClaimsDesc = 0; (0x14019CD90)
[0388] int eGuildCreationFailureResponse_InvalidGuildName = 0; (0x14019CEA0)
[0389] int eGlobalStorageAllowTransactionType_AllowTakeWithTaxFee = 0; (0x140190B20)
[0390] int eWindowMode_Fullscreen = 0; (0x14018FB20)
[0391] int eSocialOrderMembersDesc = 0; (0x14019CF00)
[0392] int eInteractionUIActions_UseQuickslot3 = 0; (0x14019D2F0)
[0393] int eGuildMasterActiveResult_Expired_CharacterDeleted = 0; (0x14019CEA0)
[0394] int eContractEventOpenFilter_Open = 0; (0x140190B20)
[0395] int eSocialOrderMembersAsc = 0; (0x14019D060)
[0396] int eSocialOrderDescending = 0; (0x140190B20)
[0397] int eBuildingLocationStatus_INVALID_WAR_ATTACKERS_RESTRICTED = 0; (0x144694970)
[0398] int eSocialOrderAscending = 0; (0x14018FB20)
[0399] int eGuildPrivilegeId_WarRaid_Build_Defensive_Structure = 0; (0x143EB8110)
[0400] int eLoadingScreenIds_LEVEL4 = 0; (0x14019D350)
[0401] int eCanPurchasePlotReturnResults_PlotFull = 0; (0x14019CEA0)
[0402] int eUiDragState_Normal = 0; (0x14018FB20)
[0403] int eGuildPrivilegeId_Territory_Management = 0; (0x141C97420)
[0404] int eGuildPrivilegeId_Treasury_Deposit = 0; (0x1409DE700)
[0405] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_PREPARE = 0; (0x14019CF10)
[0406] int eGuildPrivilegeId_Structure_Deposit = 0; (0x141847B20)
[0407] int ePerkType_Invalid = 0; (0x14019CF10)
[0408] int eGuildPrivilegeId_Structure_Withdraw = 0; (0x1409DE6E0)
[0409] int eUiEmitShape_Quad = 0; (0x14019CEA0)
[0410] int eCanDeclareWarReturnResult_InvasionScheduled = 0; (0x1409DE6D0)
[0411] int eUiInteractableState_Hover = 0; (0x140190B20)
[0412] int eGuildPrivilegeId_Structure_Cancel = 0; (0x142F4B9A0)
[0413] int eItemDragContext_TradeScreen = 0; (0x14019D060)
[0414] int eGuildPrivilegeId_Structure_Demolish = 0; (0x1409DE6F0)
[0415] float FloatEpsilonSq = 0.000000; (0x14019D120)
[0416] int eGuildPrivilegeId_Structure_Seal = 0; (0x1409DE6D0)
[0417] int eGuildPrivilegeId_Structure_Move = 0; (0x1409DE720)
[0418] int eGuildTreasuryResponse_Success = 0; (0x14019D360)
[0419] int eGuildPrivilegeId_Structure_Use = 0; (0x140D4BEF0)
[0420] int eGameEventType_Crafting = 0; (0x140190B20)
[0421] int eGuildPrivilegeId_Structure_Build = 0; (0x14019D270)
[0422] int UIError_kicked_abuse = 0; (0x14019D180)
[0423] int DarknessThreshold_High = 0; (0x14019CF10)
[0424] int ePaperDollSlotTypes_Chest = 0; (0x140190B20)
[0425] int ePingType_Contextual = 0; (0x14018FB20)
[0426] int eGuildPrivilegeId_MOTD_Set = 0; (0x14019D2F0)
[0427] int eStoreTabInvalid = 0; (0x14018FB20)
[0428] int eGuildPrivilegeId_OfficerNote_Edit = 0; (0x14019D050)
[0429] int eGuildPrivilegeId_OfficerChat_Speak = 0; (0x14019CD90)
[0430] int eSocialChattingState_Voip = 0; (0x14019CEA0)
[0431] int eGuildPrivilegeId_OfficerChat_Listen = 0; (0x14019D350)
[0432] int eMissionGoalType_Creative = 0; (0x14019CF10)
[0433] int eGuildPrivilegeId_Chat_Speak = 0; (0x14019CF00)
[0434] int eRaidSetupRequestFailureReason_WaitingForInviteResponse = 0; (0x1409DE710)
[0435] int eStoreTabHousingItems = 0; (0x14019D350)
[0436] int eRaidSetupRequestFailureReason_NoMoreManualSelectionsAllowed = 0; (0x1409DE700)
[0437] int eFactionType_None = 0; (0x14018FB20)
[0438] int eCanPurchasePlotReturnResults_AtMaxHousePerTerritory = 0; (0x14019D350)
[0439] int eRaidSetupRequestFailureReason_UnexpectedPlayer = 0; (0x1409DE6F0)
[0440] int eCanDeclareWarReturnResult_FailNoFaction = 0; (0x14019D2F0)
[0441] int eRaidSetupRequestFailureReason_InvalidGroup = 0; (0x1409DE6D0)
[0442] int eRaidSetupRequestFailureReason_InvalidPlayerInRoster = 0; (0x1409DE720)
[0443] int eSocialRequestFailureReasonTimeout = 0; (0x14018FB20)
[0444] int eEncounterStatus_Failed = 0; (0x14019D060)
[0445] int eRaidSetupRequestFailureReason_InGuildButNotPermitted = 0; (0x14019D270)
[0446] int eEntitlementTransactionType_CreditEntitlements = 0; (0x14019CF10)
[0447] int eRaidSetupRequestFailureReason_Banned = 0; (0x14019D050)
[0448] int eRaidSetupRequestFailureReason_NotInFaction = 0; (0x14019D360)
[0449] int eSubArmyInviteStatus_Pending = 0; (0x14018FB20)
[0450] int eTerritoryUpgradeType_WarPrep = 0; (0x14019D060)
[0451] int eRaidSetupRequestFailureReason_RemoteSignupNotAllowed = 0; (0x14019D2F0)
[0452] int eWarPhase_War = 0; (0x140190B20)
[0453] int UIError_banned_hacking = 0; (0x1423D8830)
[0454] int eRaidSetupRequestFailureReason_ConquestTimeOverlaps = 0; (0x14019CD90)
[0455] int eRaidSetupRequestFailureReason_SignupFull = 0; (0x14019CF00)
[0456] int eGuildPrivilegeId_Treasury_Set_Daily_Limit = 0; (0x143EB7E90)
[0457] int eRaidSetupRequestFailureReason_SignupInvalidFaction = 0; (0x14019D060)
[0458] int eRaidSetupRequestFailureReason_SignupToOpposingSide = 0; (0x14019CF10)
[0459] int UIError_login_invalid_ticket = 0; (0x14019D350)
[0460] int eSocialViewDetailed = 0; (0x140190B20)
[0461] int eRaidSide_Defender = 0; (0x14019CEA0)
[0462] int eSiegeWeaponType_Explosive = 0; (0x14019CEA0)
[0463] int eFortSpawnId_Gate_C = 0; (0x14019CD90)
[0464] int eHousingDecorationResult_InvalidItem = 0; (0x14019CF10)
[0465] int eSocialOrderNameDesc = 0; (0x14019CF10)
[0466] int eTaxOrFee_TradingTax = 0; (0x14019CEA0)
[0467] int eRaidSide_Attacker = 0; (0x140190B20)
[0468] int eGuildPrivilegeId_Structure_Assign = 0; (0x1409DE6C0)
[0469] int eAmbientDataType_EntitySource = 0; (0x14019CEA0)
[0470] int eRaidSetupRequestFailureReason_InvalidSide = 0; (0x14019CEA0)
[0471] int eRaidSide_None = 0; (0x14018FB20)
[0472] int eGroupMemberRemovedReason_Disconnected = 0; (0x14019CEA0)
[0473] int eFactionControlBufType_Rewards_Expedition_Modifier = 0; (0x1409DE6D0)
[0474] int eGroupMemberRemovedReason_Left = 0; (0x14018FB20)
[0475] int eGuildMasterActiveResult_Expired_CharacterOfflineTooLong = 0; (0x14019CF10)
[0476] int eFactionType_Faction3 = 0; (0x14019CF10)
[0477] int eRaidPermission_Assistant = 0; (0x140190B20)
[0478] int ORTutorialEvent_Summoning_Creature = 0; (0x1409DE700)
[0479] int eXpEventType_PlayerXp = 0; (0x140190B20)
[0480] int eHousingDecorationResult_Success = 0; (0x14018FB20)
[0481] int UIError_banned_disruptive = 0; (0x143EB7C00)
[0482] int eWarNotificationType_Declared = 0; (0x140190B20)
[0483] int eRaidPermission_Normal = 0; (0x14018FB20)
[0484] int eContractCompletionReason_Canceled = 0; (0x14019CF10)
[0485] int ePreRaidStatus_WarEnded = 0; (0x14019D060)
[0486] int eItemClass_Axe2H = 0; (0x143EB8700)
[0487] int eChatMessageType_Whisper = 0; (0x14019D050)
[0488] int eStoreTabCampSkins = 0; (0x14019D2F0)
[0489] int eItemClass_Magic = 0; (0x142409760)
[0490] int eTemporaryAffiliationRelationship_Neutral = 0; (0x14018FB20)
[0491] int eItemClass_Melee = 0; (0x143EB8590)
[0492] int eItemClass_UI_BasicFood = 0; (0x143EB8630)
[0493] int eItemContainerType_GlobalStorage = 0; (0x14019CF10)
[0494] int eItemClass_UI_Stonecutting = 0; (0x143EB7D40)
[0495] int eItemClass_UI_Smelting = 0; (0x143EB7BD0)
[0496] int eGuildPrivilegeId_WarRaid_Manage = 0; (0x143EB82C0)
[0497] int eUiTextOverflowMode_OverflowText = 0; (0x14018FB20)
[0498] int eItemClass_UI_Refining = 0; (0x143EB8620)
[0499] int eContractCountThreshold_None = 0; (0x14018FB20)
[0500] int eFortSpawnId_Gate_A = 0; (0x14019CF00)
[0501] int eChatMessageType_GroupAlert = 0; (0x1409DE6C0)
[0502] int ePaperDollSlotTypes_BagSlot2 = 0; (0x141947010)
[0503] int eItemClass_UI_Dye = 0; (0x143EB86C0)
[0504] int ORTutorialEvent_Boss_Near = 0; (0x14019CF00)
[0505] int eItemClass_UI_Bait = 0; (0x143EB8740)
[0506] int eContractSortBy_GearScore = 0; (0x14019D2F0)
[0507] int eAudioSetupType_Headphones = 0; (0x140190B20)
[0508] int eItemClass_UI_OutpostRush = 0; (0x142415090)
[0509] int eIngredientType_Invalid = 0; (0x14018FB20)
[0510] int eContractParticipantType_Guild = 0; (0x140190B20)
[0511] int ePaperDollSlotTypes_Cutting = 0; (0x143EB7B10)
[0512] int eItemClass_UI_Furniture = 0; (0x143EB8320)
[0513] int eUiVAlign_Bottom = 0; (0x14019CEA0)
[0514] int eItemClass_UI_Leatherworking = 0; (0x143EB8040)
[0515] int eItemClass_UI_Quest = 0; (0x1406481F0)
[0516] int eChatMessageType_Group_Announce = 0; (0x14019D2F0)
[0517] int eValidStringResponse_Valid = 0; (0x14018FB20)
[0518] int eIngredientType_Currency = 0; (0x14019CEA0)
[0519] int ePingType_Someone = 0; (0x14019D350)
[0520] int eChatMessageType_Area = 0; (0x14018FB20)
[0521] int eItemClass_UI_Cooking = 0; (0x143EB84B0)
[0522] int eDungeonActivateResponse_NotEnoughMembersInProximity = 0; (0x14019CEA0)
[0523] int eSocialOrderNameAsc = 0; (0x14019CEA0)
[0524] int UIError_login_create_character_rate_limited = 0; (0x1409DE720)
[0525] int eItemClass_UI_RepairKit = 0; (0x143EB7AC0)
[0526] int eContractFailureReason_InvalidDuration = 0; (0x1409DE720)
[0527] int ePingSource_Group5 = 0; (0x14019CF00)
[0528] int eSocialChattingState_Text = 0; (0x140190B20)
[0529] int eItemClass_UI_Lore = 0; (0x143EB7B00)
[0530] int ePaperDollSlotTypes_MainHandOption3 = 0; (0x143EB7E90)
[0531] int eMissionGoalType_Fish = 0; (0x14019D360)
[0532] int eItemClass_UI_Material = 0; (0x14177EE00)
[0533] int DungeonInstanceState_Queued = 0; (0x14019CEA0)
[0534] int eUiHAlign_Left = 0; (0x14018FB20)
[0535] int eItemClass_SiegeWarAttackersOnly = 0; (0x143EB7F70)
[0536] int eFishingState_CastStart = 0; (0x14019D060)
[0537] int eMissionGoalType_Gather = 0; (0x140190B20)
[0538] int eItemClass_SiegeWarAttackersPlacementRestricted = 0; (0x143EB7AF0)
[0539] int eItemClass_Spear = 0; (0x143EB8530)
[0540] int eItemClass_SiegeWarOnly = 0; (0x14019D180)
[0541] int eItemClass_PerkResource = 0; (0x143EB8330)
[0542] int eItemClass_UI_TradeSkillFood = 0; (0x14245E570)
[0543] int eItemClass_LifeStaff = 0; (0x143EB8570)
[0544] int eChatMessageType_Guild = 0; (0x14019CF10)
[0545] int eItemClass_FuelCurrency = 0; (0x143EB7D10)
[0546] int eRaidPermission_Leader = 0; (0x14019CEA0)
[0547] int eTerritoryUpgradeType_Fortress = 0; (0x140190B20)
[0548] int eGroupsRequestErrors_AlreadyGrouped = 0; (0x14019D360)
[0549] int eConversationOptionType_RefreshConversation = 0; (0x14019D350)
[0550] int eMotionParamID_DesiredFacing = 0; (0x140D4BEF0)
[0551] int eMissionGoalType_Mine = 0; (0x14019D330)
[0552] int eP2PTradeFailure_None = 0; (0x14018FB20)
[0553] int eUiInteractableState_Normal = 0; (0x14018FB20)
[0554] int eValidStringResponse_TooShort = 0; (0x140190B20)
[0555] int eItemClass_FuelIncense = 0; (0x143EB7C70)
[0556] int eContractSortBy_Price = 0; (0x140190B20)
[0557] int eItemClass_FishingPole = 0; (0x1409DE700)
[0558] int eItemClass_UI_Consumable = 0; (0x143EB80D0)
[0559] int eGroupVoteKickError_AlreadyVoted = 0; (0x14019CD90)
[0560] int eMissionGoalType_Expedition_Raid = 0; (0x1409DE700)
[0561] int eItemClass_Storage = 0; (0x143EB84E0)
[0562] int TradeskillType_Mining = 0; (0x140D4BEF0)
[0563] int eGuildCreationFailureResponse_NotInFaction = 0; (0x14019CF10)
[0564] int eItemClass_FuelAnimal = 0; (0x143EB8580)
[0565] int eFortSpawnId_Gate_D = 0; (0x14019D2F0)
[0566] int OtherGuildsSortOption_NameAscending = 0; (0x14018FB20)
[0567] int eItemClass_FuelTorch = 0; (0x140FE9BE0)
[0568] int ePaperdollSlotAlias_ActiveWeapon = 0; (0x143EB80B0)
[0569] int eCanFastTravelToSettlementResults_InWar = 0; (0x14019D360)
[0570] int eItemClass_FuelWater = 0; (0x143EB80B0)
[0571] int eItemClass_FuelOuthouse = 0; (0x143EB7BC0)
[0572] int eGroupVoteKickError_TooFrequent = 0; (0x14019CF00)
[0573] int eMetaAchievementType_TODO = 0; (0x143EB84E0)
[0574] int eGroupsInviteRemovedReason_TimedOut = 0; (0x14019CF00)
[0575] int eGuildTreasuryResponse_DoesNotHavePrivilege = 0; (0x14019CF10)
[0576] int eAmbientDataType_GroundCover = 0; (0x14018FB20)
[0577] int eItemClass_UI_Augments = 0; (0x143EB7C10)
[0578] int AudioObstructionType_MultiRay = 0; (0x14019CEA0)
[0579] int eMotionParamID_StopLeg = 0; (0x14019D350)
[0580] int eItemClass_FuelCharcoal = 0; (0x143EB7DB0)
[0581] int eGuildPrivilegeId_Member_Remove = 0; (0x140190B20)
[0582] int eLoadingScreenIds_INTRO = 0; (0x140190B20)
[0583] int eItemClass_FuelWood = 0; (0x143EB8100)
[0584] int eHeatEventType_MalformedMessage = 0; (0x14019CF00)
[0585] int eItemClass_FuelSacrifice = 0; (0x143EB8020)
[0586] int eCanDeclareWarReturnResult_FailNoPlayerComponent = 0; (0x14019D350)
[0587] int eContractFailureReason_AlreadyResolved = 0; (0x1409DE6D0)
[0588] int UIError_kicked = 0; (0x143EB7D10)
[0589] int ePaperDollSlotTypes_OffHandOption3 = 0; (0x143EB82C0)
[0590] int eItemContainerType_Container = 0; (0x140190B20)
[0591] int eSettlementProgressionState_Active = 0; (0x14018FB20)
[0592] int eItemClass_WeaponOil = 0; (0x143EB7B10)
[0593] int eGuildPrivilegeId_Member_Invite = 0; (0x14018FB20)
[0594] int eChatMessageType_Emote = 0; (0x14019D350)
[0595] int ePopupButtons_OK = 0; (0x14018FB20)
[0596] int eItemContainerType_Paperdoll = 0; (0x14019CEA0)
[0597] int eUiFillEdgeOrigin_Bottom = 0; (0x14019CF10)
[0598] int eItemClass_Bait = 0; (0x143EB7C80)
[0599] int ESYSTEM_GLOBAL_STATE_INIT = 0; (0x140190B20)
[0600] int eItemClass_Bow = 0; (0x143EB80F0)
[0601] int eSiegeWeaponType_Ballista = 0; (0x14018FB20)
[0602] int eSocialRequestFailureReasonThrottled = 0; (0x140190B20)
[0603] int OutpostRush_StructureStatusShiftPerStructures = 0; (0x14019CF10)
[0604] int eMissionGoalType_Espionage = 0; (0x1409DE720)
[0605] int eItemClass_UI_CraftingModifiers = 0; (0x143EB80E0)
[0606] int eAmmoType_Shot = 0; (0x140190B20)
[0607] int eAudioObstructionType_SingleRay = 0; (0x140190B20)
[0608] int ePopupResult_ForceClosed = 0; (0x14019CF10)
[0609] int eUiEmitShape_Circle = 0; (0x140190B20)
[0610] int ePaperDollSlotTypes_Ring = 0; (0x14019CD90)
[0611] int eGroupVoteKickError_NotInProgress = 0; (0x14019CF10)
[0612] int ORTutorialEvent_Armory_AboutEssence = 0; (0x14019D270)
[0613] int eAudioObstructionType_None = 0; (0x14019CF00)
[0614] int eItemClass_Ranged = 0; (0x143EB87E0)
[0615] int eUiScrollerOrientation_Vertical = 0; (0x140190B20)
[0616] int eExitGameDestination_Desktop = 0; (0x14018FB20)
[0617] int ePingType_Defend = 0; (0x14019D060)
[0618] int eForwardType_Solo = 0; (0x140190B20)
[0619] int eChatMessageType_Help = 0; (0x1409DE6D0)
[0620] int eTerritoryUpgradeType_AlwaysAvailable = 0; (0x14019D350)
[0621] int eGroupsInviteRemovedReason_Withdrawn = 0; (0x14019D360)
[0622] int ePaperDollSlotTypes_OffHandOption2 = 0; (0x1404D1B50)
[0623] int eItemClass_EquippableBridle = 0; (0x140C4CA40)
[0624] int Player = 0; (0x140190B20)
[0625] int eItemClass_UI_Armor = 0; (0x143EB85D0)
[0626] int eGenericInviteEnd_Insufficient_Participants = 0; (0x14019D350)
[0627] int eBuildingLocationStatus_INVALID_LOS_FAILED = 0; (0x144694830)
[0628] int eItemClass_UI_Alchemy = 0; (0x14183C730)
[0629] int AudioPreloadComponentLoadType_Manual = 0; (0x140190B20)
[0630] int OtherGuildsSortOption_MembersDescending = 0; (0x14019CF10)
[0631] int eGenericInviteEnd_Participant_FastTravel_Channeling = 0; (0x14019CF00)
[0632] int eContractFailureReason_InventoryFull = 0; (0x14019D360)
[0633] int eAudioObstructionType_MultiRay = 0; (0x14019CEA0)
[0634] int eSocialRequestFailureReasonUsingBadWords = 0; (0x14019CF10)
[0635] int eSubArmyViewType_Subscribers = 0; (0x140190B20)
[0636] int eGroupSize_Small = 0; (0x140190B20)
[0637] int eAudioObstructionType_ScatterRayLarge = 0; (0x14019D060)
[0638] int eItemClass_EquippableOffHand = 0; (0x14019D330)
[0639] int eSettlementProgressionCategory_Alchemy = 0; (0x14019D060)
[0640] int eItemClass_Potion = 0; (0x143EB7EA0)
[0641] int eGroupsRequestErrors_InSameGroup = 0; (0x14019D330)
[0642] int eRaidSetupRequestFailureReason_GroupFull = 0; (0x1409DE6C0)
[0643] int eItemClass_SiegeWarDefendersOnly = 0; (0x143EB8640)
[0644] int eFactionControlBufType_NumBuffs = 0; (0x1409DE6C0)
[0645] int eSettlementProgressionCategory_Cooking = 0; (0x14019CF10)
[0646] int eCanDeclareWarReturnResult_Success = 0; (0x14018FB20)
[0647] int eBuildableState_Ghost = 0; (0x14019CF10)
[0648] int eGenericInviteEligibility_Failed_GameMode = 0; (0x14019CF10)
[0649] int eItemClass_FuelAnimalFat = 0; (0x143EB8170)
[0650] int eItemClass_Blueprint = 0; (0x1404D1B50)
[0651] int TradeskillType_WildernessSurvival = 0; (0x1409DE6C0)
[0652] int eActivityType_Invalid = 0; (0x14018FB20)
[0653] int eGenericInviteEligibility_Success = 0; (0x14018FB20)
[0654] int eGenericInviteEligibility_Failed_Offline = 0; (0x140190B20)
[0655] int eP2PTradeFailure_CannotReceiveItems = 0; (0x14019CD90)
[0656] int eInteractionUIActions_UseQuickslot1 = 0; (0x14019D350)
[0657] int eItemClass_UI_Ammo = 0; (0x14190C610)
[0658] int eEntitlementTransactionType_ExchangeEntitlements = 0; (0x14019CF00)
[0659] int eCanDeclareWarReturnResult_FailNoDefendingGuildId = 0; (0x140190B20)
[0660] int eAudioObstructionType_Ignore = 0; (0x14018FB20)
[0661] int ePronounType_Neutral = 0; (0x14019CF10)
[0662] int eItemClass_UI_AttributeFood = 0; (0x143EB7FD0)
[0663] int eEquipLoad_Overburdened = 0; (0x14019CF10)
[0664] int eItemClass_SkinningKnife = 0; (0x141847B20)
[0665] int eGenericInviteEligibility_Failed_Sanctuary = 0; (0x14019CD90)
[0666] int eRaidSetupRequestFailureReason_AlreadySignedUp = 0; (0x14019D350)
[0667] int eItemClass_DecrementDurabilityOnUnsheathed = 0; (0x143EB8260)
[0668] int eTemporaryAffiliationRelationship_Enemy = 0; (0x14019CEA0)
[0669] int eItemClass_EquippableFeet = 0; (0x14019CD90)
[0670] int eItemClass_UI_TuningOrbs = 0; (0x143EB7C20)
[0671] int eFishingState_Unequipped = 0; (0x140190B20)
[0672] int eItemClass_PvPOnly = 0; (0x143EB8270)
[0673] int UIError_login_discarded_ticket = 0; (0x14019CD90)
[0674] int ePreRaidStatus_Unselected = 0; (0x140190B20)
[0675] int eItemClass_UI_Weaving = 0; (0x143EB8360)
[0676] int OtherGuildsSortOption_ClaimsDescending = 0; (0x14019CF00)
[0677] int eTitleType_Invalid = 0; (0x14018FB20)
[0678] int eChatMessageType_Faction = 0; (0x1409DE6F0)
[0679] int eSettlementProgressionCategory_FortGates = 0; (0x14019D050)
[0680] int eAudioObstructionType_ScatterRaySmall = 0; (0x14019CF10)
[0681] int ePopupResult_Error = 0; (0x1404D1F00)
[0682] int ePingType_NeedHelp = 0; (0x14019D360)
[0683] int eFriendRequestType_Accept = 0; (0x14019CEA0)
[0684] int eItemContainerSync_ContainerTransfer = 0; (0x14019D350)
[0685] EntityId SystemEntityId = 0x0; (0x14019CD80)
[0686] int eRaidSetupRequestFailureReason_NotPermitted = 0; (0x140D4BEF0)
[0687] int eGenericInviteEligibility_Failed_Level = 0; (0x14019D2F0)
[0688] int DoorMovementDirection_close = 0; (0x140190B20)
[0689] int eGuildPrivilegeId_OfficerNote_See = 0; (0x14019D330)
[0690] int eUiFlipbookAnimationFramerateUnits_SecondsPerFrame = 0; (0x140190B20)
[0691] int eGenericInviteEligibility_Failed_PendingInvite = 0; (0x14019D350)
[0692] int eSubArmyViewType_Public = 0; (0x14018FB20)
[0693] int eItemClass_Resource = 0; (0x143EB8520)
[0694] int eItemContainerSync_LockStateChanged = 0; (0x1404D1B50)
[0695] int eCanDeclareWarReturnResult_FailNoCurrency = 0; (0x14019CD90)
[0696] int eMotionParamID_TravelSpeed = 0; (0x14018FB20)
[0697] int eItemClass_EquippableMainHand = 0; (0x14019D360)
[0698] int eGenericInviteEligibility_Failed_Dead = 0; (0x14019D060)
[0699] int eGenericInviteEligibility_Failed_Blocked = 0; (0x14019CEA0)
[0700] int eFactionControlCaptureStatus_MaxStatus = 0; (0x14019CEA0)
[0701] int eEntitlementTransactionType_ExchangeEntitlementsPurchase = 0; (0x14019CEA0)
[0702] int eItemClass_EquippableTool = 0; (0x1409DE720)
[0703] int eCanDeclareWarReturnResult_FailSameFaction = 0; (0x14019D360)
[0704] int ePopupButtons_YesNo = 0; (0x140190B20)
[0705] int eLoadingScreenIds_MAIN_MENU = 0; (0x14019CEA0)
[0706] int eItemClass_EquippableHead = 0; (0x14019CF10)
[0707] int eGenericInviteEnd_Participant_Blocked = 0; (0x14019D060)
[0708] int eLoadingScreenIds_LEVEL3 = 0; (0x14019CF00)
[0709] int eFactionControlBufType_Azoth_FastTravel_GeneralCost_Reduction = 0; (0x14019CF10)
[0710] int eConversationState_UnavailableObjective = 0; (0x14019CEA0)
[0711] int eItemDragContext_Paperdoll = 0; (0x140190B20)
[0712] int eItemClass_OutpostRushOnly = 0; (0x1423D8830)
[0713] int ENameValidationState_Valid = 0; (0x140190B20)
[0714] int UIError_connection_aoi_timeout = 0; (0x143EB8580)
[0715] int UIError_connection_rep_registration_timeout = 0; (0x143EB84E0)
[0716] int eUiImageSequenceImageType_StretchedToFill = 0; (0x14019CF10)
[0717] int eContractCountThreshold_Less_500 = 0; (0x14019CF00)
[0718] int ScriptedEntityTweenerEasingMethod_Quint = 0; (0x14019D060)
[0719] int eGenericInviteEligibility_Failed_Faction = 0; (0x14019D360)
[0720] int eContractEventOpenFilter_All = 0; (0x14018FB20)
[0721] int eObjectiveType_Event = 0; (0x1409DE6D0)
[0722] int eGenericInviteEligibility_Failed_Event = 0; (0x14019CF00)
[0723] int eGenericInviteEligibility_Failed_FastTravelChanneling = 0; (0x14019D270)
[0724] int eEncounterStatus_Uninitialized = 0; (0x14018FB20)
[0725] int eItemClass_Leather = 0; (0x143EB82D0)
[0726] int eGuildPrivilegeId_Declare_War = 0; (0x140D4BEE0)
[0727] int eChatMessageType_System = 0; (0x14019D270)
[0728] int eItemClass_UI_Woodworking = 0; (0x143EB87C0)
[0729] int ePaperDollSlotTypes_AzothStaff = 0; (0x143EB7BC0)
[0730] int eGenericInviteEligibility_Failed_Distance = 0; (0x14019D330)
[0731] int eUiVAlign_Center = 0; (0x140190B20)
[0732] int eItemClass_EquippableToken = 0; (0x14019D270)
[0733] int eActivityType_GameMode = 0; (0x140190B20)
[0734] int eItemClass_Shield = 0; (0x143EB7C60)
[0735] int ePaperDollSlotTypes_Chopping = 0; (0x143EB7EA0)
[0736] int eSubArmyInviteStatus_Unknown = 0; (0x14019D060)
[0737] int eGameEventType_None = 0; (0x14018FB20)
[0738] int eGenericInviteEligibility_Failed_System = 0; (0x14019D050)
[0739] int eUiSpriteType_RenderTarget = 0; (0x140190B20)
[0740] int eGroupsRequestErrors_SenderOffline = 0; (0x14019CD90)
[0741] int eGroupsRequestErrors_ReceiverOffline = 0; (0x14019D350)
[0742] int eGuildPrivilegeId_Note_Edit = 0; (0x14019D360)
[0743] int eSocialOrderClaimsAsc = 0; (0x14019D350)
[0744] int eTerritoryLogType_Upkeep = 0; (0x14018FB20)
[0745] int eItemClass_UI_Weapon = 0; (0x143EB7C00)
[0746] int eItemClass_Pickaxe = 0; (0x1409DE710)
[0747] int eGroupsInviteRemovedReason_InvalidFaction = 0; (0x14019CF10)
[0748] int ePaperDollSlotTypes_QuickSlot3 = 0; (0x1409DE6C0)
[0749] int eAmbientDataType_TractType = 0; (0x140190B20)
[0750] int eCanPurchasePlotReturnResults_NeedsCoin = 0; (0x14019CF00)
[0751] int eMissionGoalType_Expedition_Special = 0; (0x1409DE6E0)
[0752] int ScriptedEntityTweenerEasingType_In = 0; (0x14018FB20)
[0753] int eGenericInviteEnd_Eligibility_Failed = 0; (0x140190B20)
[0754] int eUiFillEdgeOrigin_Right = 0; (0x14019CEA0)
[0755] int eItemClass_Gem = 0; (0x143EB82C0)
[0756] int eItemClass_Armor = 0; (0x143EB85C0)
[0757] int eValidStringResponse_BadWords = 0; (0x14019D060)
[0758] int ORStructure_DefenseStructure4 = 0; (0x14019CF00)
[0759] int eTaxOrFee_CraftingFee = 0; (0x14019CF10)
[0760] int eSiegeWeaponType_Horn = 0; (0x14019D060)
[0761] int eItemClass_EquippableSaddle = 0; (0x140D4BEE0)
[0762] int eRewardTypeItemSkin = 0; (0x14019CEA0)
[0763] int eForwardType_Group = 0; (0x14019CEA0)
[0764] int eGenericInviteEnd_Success = 0; (0x14018FB20)
[0765] int eAbilityIndex1 = 0; (0x14018FB20)
[0766] int eCanSetFactionResults_InAWar = 0; (0x14019D350)
[0767] int eItemClass_Special = 0; (0x143EB7E90)
[0768] int eRewardTypeHousingItem = 0; (0x14019CD90)
[0769] int eGenericInviteEnd_Cancelled = 0; (0x14019CF10)
[0770] int ePopupResult_Cancel = 0; (0x14019D060)
[0771] int eGenericInviteEnd_System_Error = 0; (0x14019CEA0)
[0772] int ePaperDollSlotTypes_Arrow = 0; (0x14019D270)
[0773] int TradeskillType_Engineering = 0; (0x14019D350)
[0774] int eItemClass_Hammer2H = 0; (0x143EB8730)
[0775] int ePopupButtons_Cancel = 0; (0x14019CEA0)
[0776] int UIError_login_failed_to_create_character = 0; (0x140D4BEF0)
[0777] int eItemClass_InvasionOnly = 0; (0x143EB8870)
[0778] int ePaperDollSlotTypes_Num = 0; (0x143EB80B0)
[0779] int eItemContainerSync_ItemUnequipped = 0; (0x14019CF00)
[0780] int ORTutorialEvent_Rules_Win = 0; (0x14018FB20)
[0781] int ePopupResult_No = 0; (0x14019CEA0)
[0782] int eHeatEventType_PlayerMovesThroughObjects = 0; (0x14019D2F0)
[0783] int ePopupResult_OK = 0; (0x14018FB20)
[0784] int CharacterAttributeType_Constitution = 0; (0x14018FB20)
[0785] int eFactionControlBufType_Azoth_Crafting_Effectiveness_Modifer = 0; (0x14019D350)
[0786] int ePronounType_NUM_PRONOUN_TYPES = 0; (0x14019D060)
[0787] int eItemClass_UI_JewelCrafting = 0; (0x14135F5B0)
[0788] int DungeonInstanceState_Entered = 0; (0x14019D060)
[0789] int ePopupResult_Yes = 0; (0x140190B20)
[0790] int eUiScrollBoxScrollBarVisibility_AutoHideAndResizeViewport = 0; (0x14019CEA0)
[0791] int eIngredientType_Item = 0; (0x140190B20)
[0792] int eItemClass_Sword = 0; (0x142409740)
[0793] int eGroupsRequestErrors_GroupFull = 0; (0x1409DE720)
[0794] int eItemClass_Musket = 0; (0x143EB7CF0)
[0795] int eItemClass_EquippableLegs = 0; (0x14019D350)
[0796] int eItemClass_Consumable = 0; (0x140190B20)
[0797] int TradeskillType_None = 0; (0x1404D1F00)
[0798] int eObjectiveDifficulty_None = 0; (0x14018FB20)
[0799] int eItemClass_RepairKit = 0; (0x143EB8110)
[0800] int UIError_kicked_duplicate_session = 0; (0x143EB7C70)
[0801] int eItemClass_Equippable = 0; (0x14019CEA0)
[0802] int eItemClass_FoodForHorse = 0; (0x140FD0E40)
[0803] int UIError_banned_leaking = 0; (0x14190C610)
[0804] int eGroupsInviteRemovedReason_GroupFull = 0; (0x14019CD90)
[0805] int eItemClass_EquippableChest = 0; (0x14019D060)
[0806] int eCanSetFactionResults_Success = 0; (0x14018FB20)
[0807] int eUiRecompute_RectAndTransform = 0; (0x14019CF10)
[0808] int eItemClass_EquippableHands = 0; (0x14019CF00)
[0809] int eChatMessageType_Guild_Announce = 0; (0x14019CF00)
[0810] int eFortSpawnId_Gate_E = 0; (0x14019D360)
[0811] int eItemClass_EquippableTwoHand = 0; (0x14019D2F0)
[0812] int eRaidSetupRequestFailureReason_InvasionLevelRequiremenetNotMet = 0; (0x14019D330)
[0813] int eItemClass_EquippableAmulet = 0; (0x14019D050)
[0814] int eItemClass_Ammo = 0; (0x142F4B9A0)
[0815] int eItemClass_EquippableBackpack = 0; (0x1409DE6D0)
[0816] int eGuildPrivilegeId_Treasury_Withdraw_Unlimited = 0; (0x141947010)
[0817] int eFishingState_FishNibbleWindowOpen = 0; (0x14019D2F0)
[0818] int eItemClass_EquippableRing = 0; (0x140D4BEF0)
[0819] int eFactionControlBufType_Rewards_FactionMission_Modifier = 0; (0x14019D050)
[0820] int eObjectiveType_MainStoryQuest = 0; (0x140D4BEF0)
[0821] int EmitterFollow = 0; (0x14018FB20)
[0822] int TradeskillType_Logging = 0; (0x1409DE720)
[0823] int eGameEventType_Gathering = 0; (0x14019CEA0)
[0824] int OutpostRush_SummonCountBitsPerTeam = 0; (0x1409DE6C0)
[0825] int eAmmoType_Arrow = 0; (0x14019CEA0)
[0826] int UIError_banned_abusive = 0; (0x143EB8640)
[0827] int eItemClass_UI_Tools = 0; (0x143EB7FE0)
[0828] int eGroupsInviteRemovedReason_Rejected = 0; (0x140190B20)
[0829] int eTerritoryBonus_GainFactionRep = 0; (0x14019CF00)
[0830] int eConversationState_HasObjective = 0; (0x140190B20)
[0831] int eConversationState_HasFactionMissions = 0; (0x14019CF10)
[0832] int eObjectiveType_Dungeon = 0; (0x14019D050)
[0833] int eItemClass_EquippablePaint = 0; (0x1409DE6C0)
[0834] int DungeonInstanceState_Finished = 0; (0x14019CF00)
[0835] int eFishingState_FishingEnded = 0; (0x1409DE710)
[0836] int eDayPhase_Dawn = 0; (0x140190B20)
[0837] int eItemClass_Crafting = 0; (0x141C97420)
[0838] int eItemClass_FireStaff = 0; (0x143EB87D0)
[0839] int eStoreTabServices = 0; (0x14019D050)
[0840] int eItemClass_CraftingKit = 0; (0x1403B6070)
[0841] int eAbilityIndex2 = 0; (0x140190B20)
[0842] int eFishingState_ApplyingBait = 0; (0x14019CF10)
[0843] int eRaidSetupRequestFailureReason_PlayerNotSignedUp = 0; (0x1409DE6E0)
[0844] int TradeskillType_Stonecutting = 0; (0x14019D050)
[0845] int eNotificationPriority_High = 0; (0x1406481F0)
[0846] int eItemClass_Tool = 0; (0x14257BF30)
[0847] int eItemClass_Hatchet = 0; (0x143205170)
[0848] int eItemClass_Sickle = 0; (0x1409DE6E0)
[0849] int eGameModeQueueEligibilityReason_Eligible = 0; (0x14018FB20)
[0850] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_COMPLETE = 0; (0x140D4BEF0)
[0851] int eItemClass_Bag = 0; (0x14019D040)
[0852] int ePaperDollSlotTypes_GatherableHand = 0; (0x14019D360)
[0853] int eListEntryStatus_VisibleUnavailable = 0; (0x14019CEA0)
[0854] int eItemClass_LootContainer = 0; (0x14257BF00)
[0855] int DungeonInstanceState_NoDungeon = 0; (0x14018FB20)
[0856] int eTerritoryUpgradeType_Settlement = 0; (0x14019CEA0)
[0857] int eItemClass_Jewelry = 0; (0x143EB8030)
[0858] int ePingType_NeedRevive = 0; (0x14019D050)
[0859] int eItemClass_Plate = 0; (0x14063E590)
[0860] int eGroupsRequestErrors_GroupNotAvailable = 0; (0x14019D2F0)
[0861] int UIError_banned_botting = 0; (0x143EB8870)
[0862] int ScriptedEntityTweenerEasingType_Out = 0; (0x140190B20)
[0863] int eStructureSize_Medium = 0; (0x14019CEA0)
[0864] int eItemClass_Cloth = 0; (0x143EB80C0)
[0865] int eContractType_Bounty = 0; (0x14019D060)
[0866] int eItemClass_Dye = 0; (0x141947010)
[0867] int eValidStringResponse_InvalidCharacters = 0; (0x14019CF10)
[0868] int eContractType_Courier = 0; (0x14019CEA0)
[0869] int eChatMessageTypeState_Muted = 0; (0x14019CEA0)
[0870] int eP2PTradeFailure_InvalidItems = 0; (0x14019CF10)
[0871] int eMotionParamID_BlendWeight = 0; (0x14019CD90)
[0872] int eChatMessageType_Raid = 0; (0x14019D360)
[0873] int eIngredientType_CategoryAny = 0; (0x14019CF10)
[0874] int ePaperDollSlotTypes_BagSlot3 = 0; (0x1403B6070)
[0875] int eRewardTypeInventoryItem = 0; (0x14019D360)
[0876] int eIngredientType_CategoryOnly = 0; (0x14019D060)
[0877] int eGroupVoteKickError_InProgress = 0; (0x14019CEA0)
[0878] int ePaperDollSlotTypes_Hands = 0; (0x14019CEA0)
[0879] int eInteractAdditionalType_Repair = 0; (0x140190B20)
[0880] int eItemContainerType_None = 0; (0x14018FB20)
[0881] int ePreRaidStatus_PermissionDemoted = 0; (0x14019CF10)
[0882] int ePronounType_Male = 0; (0x140190B20)
[0883] int eFriendRequestType_Invalid = 0; (0x14018FB20)
[0884] int OtherGuildsSortOption_NameDescending = 0; (0x140190B20)
[0885] int OtherGuildsSortOption_MembersAscending = 0; (0x14019CEA0)
[0886] AZ::Uuid EditorTransformComponentTypeId = 27F1E1A1-8D9D-4C3B-BD3A-AFB9762449C0; (0x140541A10)
[0887] int eGroupsRequestErrors_InSameRaid = 0; (0x14019D050)
[0888] int OtherGuildsSortOption_ClaimsAscending = 0; (0x14019D060)
[0889] int TradeskillType_Armoring = 0; (0x140190B20)
[0890] int Guild = 0; (0x14018FB20)
[0891] int eGameEventType_Invasion = 0; (0x14019D060)
[0892] int NoOwnership = 0; (0x14019CEA0)
[0893] int ENameValidationState_Invalid = 0; (0x14018FB20)
[0894] int eStoreTabEmotes = 0; (0x14019CF10)
[0895] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_TEXTURES = 0; (0x14019D050)
[0896] int eGuildPrivilegeId_Farm_PlantSeed = 0; (0x140C4CA40)
[0897] int ENameValidationState_Validating = 0; (0x14019CEA0)
[0898] int CharacterAttributeType_Focus = 0; (0x140190B20)
[0899] int eObjectiveOrder_Difficulty = 0; (0x14018FB20)
[0900] int eConversationOptionType_OpenFactionBoard = 0; (0x14019D2F0)
[0901] int eFishingState_CastEnd = 0; (0x14019CF00)
[0902] int CharacterAttributeType_Strength = 0; (0x14019CEA0)
[0903] int CharacterAttributeType_Dexterity = 0; (0x14019CF10)
[0904] int eCanFastTravelToSettlementResults_IsDead = 0; (0x14019CF00)
[0905] int eFishingState_Failed_CastHitLand = 0; (0x140D4BEF0)
[0906] int CharacterAttributeType_Intelligence = 0; (0x14019D060)
[0907] int eEncounterStatus_NotStarted = 0; (0x140190B20)
[0908] int TradeskillType_Weaponsmithing = 0; (0x14018FB20)
[0909] int TradeskillType_Furnishing = 0; (0x14019CF00)
[0910] int ORTutorialEvent_Outpost_Ward = 0; (0x14019CD90)
[0911] int TradeskillType_Jewelcrafting = 0; (0x14019CEA0)
[0912] int eGuildPrivilegeId_Treasury_Withdraw = 0; (0x1409DE710)
[0913] int TradeskillType_Arcana = 0; (0x14019CF10)
[0914] int TradeskillType_Cooking = 0; (0x14019D060)
[0915] int eContractStatus_Completed = 0; (0x14019CF10)
[0916] int eValidStringResponse_MultipleSpaces = 0; (0x14019CF00)
[0917] int TradeskillType_Smelting = 0; (0x14019CD90)
[0918] int TradeskillType_Woodworking = 0; (0x14019D2F0)
[0919] int TradeskillType_Leatherworking = 0; (0x14019D360)
[0920] int ePaperDollSlotTypes_MainHandOption1 = 0; (0x140C4CA40)
[0921] int eCanFastTravelToSettlementResults_InEncounter = 0; (0x14019D2F0)
[0922] int TradeskillType_Weaving = 0; (0x14019D330)
[0923] int eObjectiveType_WeeklyChallenge = 0; (0x1409DE6F0)
[0924] int eChatMessageType_Raid_Announce = 0; (0x14019D330)
[0925] int eContractServiceFailureReason_Conflict = 0; (0x14019D060)
[0926] int eSetGuildMemberRankFailureReasonNoConsul = 0; (0x14018FB20)
[0927] int eDayPhase_Day = 0; (0x14019CEA0)
[0928] int TradeskillType_Skinning = 0; (0x14019D270)
[0929] int eGuildTreasuryResponse_GuildMemberDataNotFound = 0; (0x14019CEA0)
[0930] int TradeskillType_Harvesting = 0; (0x1409DE6D0)
[0931] int ORStructure_DefenseStructure3 = 0; (0x14019D060)
[0932] int eGuildPrivilegeId_Territory_Demolish = 0; (0x142F4B960)
[0933] int TradeskillType_Fishing = 0; (0x1409DE6F0)
[0934] int eRecipeMode_Repair = 0; (0x14019CEA0)
[0935] int TradeskillType_AzothStaff = 0; (0x1409DE700)
[0936] int eCanDeclareWarReturnResult_FailOwnGuild = 0; (0x14019CF10)
[0937] int ePaperDollSlotTypes_Fishing = 0; (0x143EB8020)
[0938] int eGuildPrivilegeId_Member_Promote = 0; (0x14019CEA0)
[0939] int eTerritoryUpgradeType_Event = 0; (0x14019CD90)
[0940] int eGroupsInviteRemovedReason_Failed = 0; (0x14019D2F0)
[0941] int eGuildPrivilegeId_Territory_Taxation = 0; (0x1404D1B50)
[0942] int DungeonInstanceState_WaitingEntry = 0; (0x14019CF10)
[0943] int eGuildPrivilegeId_Member_Demote = 0; (0x14019CF10)
[0944] int eContractFailureReason_Throttled = 0; (0x14019CD90)
[0945] int eValidStringResponse_TooLong = 0; (0x14019CEA0)
[0946] int eWarPhase_PreWar = 0; (0x14018FB20)
[0947] int eSettlementProgressionCategory_BallistaUpgrade = 0; (0x140D4BEF0)
[0948] int eChatMessageTypeState_Alert = 0; (0x14018FB20)
[0949] int eWarNotificationType_Extended = 0; (0x14019CEA0)
[0950] int eBuildingLocationStatus_INVALID_HAS_OBSTRUCTION = 0; (0x14019D060)
[0951] int eHeatEventType_WhitelistViolation = 0; (0x1409DE700)
[0952] int eChatMessageTypeState_Feed = 0; (0x140190B20)
[0953] int UIError_login_no_worlds = 0; (0x1409DE6F0)
[0954] int eHeatEventType_InputValidationFailed = 0; (0x14019CF10)
[0955] int eChatMessageType_Area_Announce = 0; (0x140190B20)
[0956] int eContractFailureReason_UnableToResolve = 0; (0x1409DE6C0)
[0957] int eChatMessageType_Global = 0; (0x14019CEA0)
[0958] int eBuildableState_Plot = 0; (0x14019CEA0)
[0959] int eWarNotificationType_Invalid = 0; (0x14018FB20)
[0960] int eChatMessageType_Guild_Officer = 0; (0x14019D060)
[0961] int eMissionGoalType_Courier = 0; (0x14019CEA0)
[0962] int eChatMessageType_Group = 0; (0x14019CD90)
[0963] int eChatMessageType_Recruitment = 0; (0x1409DE720)
[0964] int eGroupSize_Medium = 0; (0x14019CEA0)
[0965] int eStructureSize_Large = 0; (0x14019CF10)
[0966] int eGroupsInviteRemovedReason_Accepted = 0; (0x14018FB20)
[0967] int eGroupsInviteRemovedReason_RejectedStreamerModeBlock = 0; (0x14019CEA0)
[0968] int eItemDragContext_Inventory = 0; (0x14018FB20)
[0969] int UIError_NumErrors = 0; (0x143EB7B00)
[0970] int eGuildPrivilegeId_Chat_Listen = 0; (0x14019D060)
[0971] int eGroupsInviteRemovedReason_JoinedOtherGroup = 0; (0x14019D060)
[0972] int eGroupsInviteRemovedReason_PlayerDisconnected = 0; (0x14019D350)
[0973] int eSettlementProgressionCategory_ExplosiveUpgrade = 0; (0x1409DE6F0)
[0974] int eGuildTreasuryResponse_GuildDataNotFound = 0; (0x140190B20)
[0975] int eBuildingLocationStatus_VALID_LOCATION = 0; (0x14018FB20)
[0976] int ORStructure_DefenseStructure1 = 0; (0x14019CEA0)
[0977] int eGroupsInviteRemovedReason_UnavailableFTUE = 0; (0x14019D330)
[0978] int eUiFillType_None = 0; (0x14018FB20)
[0979] int eGroupsRequestErrors_UnknownError = 0; (0x14019CEA0)
[0980] int ORStructure_ProtectionWard = 0; (0x14019D2F0)
[0981] int eGroupsRequestErrors_MaxInvitesSent = 0; (0x14019CF10)
[0982] int eBuildableState_Ruin = 0; (0x14019D350)
[0983] int eTerritoryLandmarkType_InnInteract = 0; (0x141847B20)
[0984] int eGroupVoteKickError_InvalidTarget = 0; (0x14019D350)
[0985] int eGroupsRequestErrors_AlreadyInvited = 0; (0x14019D060)
[0986] int eGroupsRequestErrors_InvalidInvite = 0; (0x14019CF00)
[0987] int eGroupsRequestErrors_MaxGroupSize = 0; (0x14019D270)
[0988] int eRaidSetupRequestFailureReason_None = 0; (0x14018FB20)
[0989] AZ::Uuid SpawnerComponentTypeId = 8022A627-FA7D-4516-A155-657A0927A3CA; (0x141946F10)
[0990] int eRewardTypeCampSkin = 0; (0x1409DE720)
[0991] int eUiTextCaseSetting_Normal = 0; (0x14018FB20)
[0992] int eGroupVoteKickError_Kicked = 0; (0x14018FB20)
[0993] int eGroupVoteKickError_NotKicked = 0; (0x140190B20)
[0994] int eEquipLoad_Slow = 0; (0x14019CEA0)
[0995] int eGroupVoteKickError_ReceiverOffline = 0; (0x14019CF10)
[0996] int eGroupVoteKickError_TimedOut = 0; (0x14019D060)
[0997] int eInteractionUIActions_Invalid = 0; (0x14018FB20)
[0998] int ePreRaidStatus_Selected = 0; (0x14018FB20)
[0999] int eGuildTreasuryResponse_DepositCappedByTreasuryMax = 0; (0x14019D350)
[1000] int ePreRaidStatus_PermissionPromoted = 0; (0x14019CEA0)
[1001] int eGroupMemberRemovedReason_Kicked = 0; (0x140190B20)
[1002] int UIError_aoi_no_spawn_points = 0; (0x141947010)
[1003] int eMotionParamID_BlendWeight3 = 0; (0x14019D360)
[1004] int eAbilityIndex_Num = 0; (0x14019CF10)
[1005] int eFactionType_Faction1 = 0; (0x140190B20)
[1006] int eGlobalStorageAllowTransactionType_AllowNone = 0; (0x14019CEA0)
[1007] int UIError_aoi_no_ghost_client = 0; (0x143EB8110)
[1008] int UIError_banned_offensive_companyName = 0; (0x143EB80E0)
[1009] int eUiScrollBoxSnapMode_Children = 0; (0x140190B20)
[1010] int eFactionType_Faction2 = 0; (0x14019CEA0)
[1011] int eFactionType_Any = 0; (0x14019D060)
[1012] int ePvpFlag_Off = 0; (0x14018FB20)
[1013] int ePvpFlag_Pending = 0; (0x140190B20)
[1014] int ePvpFlag_On = 0; (0x14019CEA0)
[1015] int eHeatEventType_ReportGriefing = 0; (0x14019D270)
[1016] int eContractEventRoleFilter_Completer = 0; (0x14019CF10)
[1017] int eCanSetFactionResults_InACompany = 0; (0x140190B20)
[1018] int eCanFastTravelToSettlementResults_Success = 0; (0x14018FB20)
[1019] int eMotionParamID_BlendWeight2 = 0; (0x14019D2F0)
[1020] int ePingSource_Group3 = 0; (0x14019CF10)
[1021] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_ENTITIES = 0; (0x14019D360)
[1022] int eCanSetFactionResults_NotInASanctuary = 0; (0x14019CEA0)
[1023] int eCanPurchasePlotReturnResults_AtMaxHomesOwned = 0; (0x14019CF10)
[1024] int eCanSetFactionResults_AlreadyInAFaction = 0; (0x14019CF10)
[1025] int eGameEventType_OutpostRush = 0; (0x14019CF00)
[1026] int eCanSetFactionResults_FailLevelRequirement = 0; (0x14019D060)
[1027] int eCanSetFactionResults_OnCooldown = 0; (0x14019CF00)
[1028] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_END = 0; (0x14019D270)
[1029] int eCanSetFactionResults_InsufficientAzoth = 0; (0x14019CD90)
[1030] int eCanSetFactionResults_FlaggedForPvp = 0; (0x14019D2F0)
[1031] int eCanSetFactionResults_FactionHasMostTerritory = 0; (0x14019D360)
[1032] int eMissionGoalType_Loot = 0; (0x14019CD90)
[1033] int eHeatEventType_DebugCommandsEnabled = 0; (0x140190B20)
[1034] int eUiRecompute_RectOnly = 0; (0x14018FB20)
[1035] int eHeatEventType_TooManyItems = 0; (0x14019CEA0)
[1036] int eHeatEventType_LocalTesting = 0; (0x14019D060)
[1037] int ScriptedEntityTweenerEasingMethod_Circ = 0; (0x14019CD90)
[1038] int eHeatEventType_PlayerAchievedImpossibleLevel = 0; (0x14019CD90)
[1039] int eContractCompletionReason_Failed = 0; (0x14019CEA0)
[1040] int eObjectiveOrder_Territory = 0; (0x14019CF10)
[1041] int eHeatEventType_PlayerMovesTooFast = 0; (0x14019D360)
[1042] int eHeatEventType_ReportAbusiveChat = 0; (0x14019D330)
[1043] int eHeatEventType_ReportOffensiveName = 0; (0x140D4BEF0)
[1044] int eHeatEventType_SpoofingDetected = 0; (0x1409DE6C0)
[1045] int eHeatEventType_TooManyMessages = 0; (0x1409DE6F0)
[1046] int eGameModeQueueEligibilityReason_Ineligible_Group = 0; (0x140190B20)
[1047] int eCanSelectPvpMissionResults_Success = 0; (0x14018FB20)
[1048] int eHeatEventType_ReportOffensiveGuildName = 0; (0x1409DE710)
[1049] int ePingType_Caution = 0; (0x14019CF00)
[1050] int eHeatEventType_PlayerImmediatelyGathersSameResource = 0; (0x1409DE6E0)
[1051] int eHeatEventType_ReportCoinSelling = 0; (0x141847B20)
[1052] int eHeatEventType_ReportBotBehavior = 0; (0x142F4B960)
[1053] int eGroupSize_Solo = 0; (0x14018FB20)
[1054] int eObjectiveType_Journey = 0; (0x14019D060)
[1055] int eSubArmyViewType_Followers = 0; (0x14019CEA0)
[1056] int eSubArmyViewType_SubscribersAndFollowers = 0; (0x14019CF10)
[1057] int eContractFailureReason_FailedToCreateTransaction = 0; (0x14019D270)
[1058] int eSubArmyViewType_Unknown = 0; (0x14019D060)
[1059] int eSubArmyInviteStatus_Accepted = 0; (0x140190B20)
[1060] int eBuildingLocationStatus_INVALID_LOCATION_OUT_OF_WORLD_BOUNDS = 0; (0x144694A50)
[1061] int eSubArmyInviteStatus_SignupsFull = 0; (0x14019CF10)
[1062] int eXpEventType_None = 0; (0x14018FB20)
[1063] int eContractType_Sell = 0; (0x140190B20)
[1064] int eHousingDecorationResult_InvalidPosition = 0; (0x14019D060)
[1065] int eContractType_Assassination = 0; (0x14019CF10)
[1066] int eDungeonActivateResponse_NumResponses = 0; (0x14019D060)
[1067] int eUiRecompute_RectAndTransformForced = 0; (0x14019CF00)
[1068] int eContractType_Mercenary = 0; (0x14019CF00)
[1069] int eContractTypeCount = 0; (0x14019D350)
[1070] int UIError_connection_spawn_point_timeout = 0; (0x140FE9BE0)
[1071] int eContractParticipantType_Character = 0; (0x14018FB20)
[1072] int eCanFastTravelToSettlementResults_InvalidStartingTerritoryId = 0; (0x14019CEA0)
[1073] int eContractStatus_Available = 0; (0x14018FB20)
[1074] int eInteractionUIActions_UseQuickslot4 = 0; (0x14019D360)
[1075] int eSettlementProgressionCategory_Weaving = 0; (0x14019CD90)
[1076] int eContractStatus_Unavailable = 0; (0x140190B20)
[1077] int StealthLevel_FullyHidden = 0; (0x14019CF10)
[1078] int eContractStatus_Accepted = 0; (0x14019CEA0)
[1079] int eContractStatus_Resolved = 0; (0x14019D060)
[1080] int eContractCountThreshold_Less_50 = 0; (0x14019CF10)
[1081] int eContractEventRoleFilter_All = 0; (0x14018FB20)
[1082] int eContractEventRoleFilter_Creator = 0; (0x140190B20)
[1083] int eHousingDecorationResult_HousingItemIdExceeded = 0; (0x14019D350)
[1084] int eContractEventRoleFilter_Acceptor = 0; (0x14019CEA0)
[1085] int eConversationState_NoObjective = 0; (0x14018FB20)
[1086] int eContractServiceFailureReason_Timeout = 0; (0x14018FB20)
[1087] int eContractServiceFailureReason_FailedFileIO = 0; (0x140190B20)
[1088] int UIError_login_world_list_failed = 0; (0x1409DE6C0)
[1089] int eContractServiceFailureReason_Failed_Send = 0; (0x14019CEA0)
[1090] int eConversationOptionType_Leave = 0; (0x140190B20)
[1091] int eContractSortBy_Quantity = 0; (0x14019CEA0)
[1092] int eContractSortBy_ExpiresIn = 0; (0x14019CF10)
[1093] int eContractSortBy_Location = 0; (0x14019D060)
[1094] int eUiFlipbookAnimationLoopType_None = 0; (0x14018FB20)
[1095] int eContractSortBy_Rarity = 0; (0x14019CF00)
[1096] int eContractSortBy_Craftsmanship = 0; (0x14019D350)
[1097] AZ::Uuid TransformComponentTypeId = 22B10178-39B6-4C12-BB37-77DB45FDD3B6; (0x140541A80)
[1098] int UIError_connection_ingame_timeout = 0; (0x143EB8520)
[1099] int eContractSortBy_Tier = 0; (0x14019CD90)
[1100] int eContractSortBy_GemPerkCount = 0; (0x14019D360)
[1101] int eContractFailureReason_Unknown = 0; (0x1404D1F00)
[1102] int eContractFailureReason_InvalidOutpostId = 0; (0x14018FB20)
[1103] int UIError_aoi_character_persist_failed = 0; (0x142F4B9A0)
[1104] int eP2PTradeFailure_InvalidPlayerRef = 0; (0x140190B20)
[1105] int eContractFailureReason_MaximumContractsCreated = 0; (0x140190B20)
[1106] int eContractFailureReason_InsufficientGold = 0; (0x14019CEA0)
[1107] int eContractFailureReason_ServerError = 0; (0x14019CF00)
[1108] int eTerritoryBonus_GainGatherRate = 0; (0x14019D060)
[1109] int eContractFailureReason_CreatorCannotComplete = 0; (0x14019D350)
[1110] int eContractFailureReason_InvalidRequest = 0; (0x14019D2F0)
[1111] int eTerritoryLandmarkType_POI = 0; (0x14019D330)
[1112] int eContractFailureReason_TradingPostDisabled = 0; (0x14019D050)
[1113] int eUiDropState_Invalid = 0; (0x14019CEA0)
[1114] int eUiLayoutGridStartingDirection_VerticalOrder = 0; (0x140190B20)
[1115] int eContractFailureReason_NoContractsService = 0; (0x140D4BEF0)
[1116] int eUiDragState_Valid = 0; (0x140190B20)
[1117] int eContractFailureReason_AbortingContract = 0; (0x1409DE6F0)
[1118] int eContractCompletionReason_None = 0; (0x14018FB20)
[1119] int eContractCompletionReason_Succeeded = 0; (0x140190B20)
[1120] int ePingType_Danger = 0; (0x140190B20)
[1121] int DoorMovementDirection_open = 0; (0x14018FB20)
[1122] int eTerritoryUpgradeType_Lifestyle = 0; (0x14019CF10)
[1123] int eObjectiveType_Quest = 0; (0x140190B20)
[1124] int eObjectiveType_DailyChallenge = 0; (0x1409DE6C0)
[1125] int eAudioSetupType_Speakers = 0; (0x14018FB20)
[1126] int ePingType_Attack = 0; (0x14019CF10)
[1127] int eP2PTradeFailure_TradeBlocked = 0; (0x1409DE710)
[1128] int ePingType_Loot = 0; (0x14019CD90)
[1129] int ePingType_Repair = 0; (0x14019D2F0)
[1130] int ePingType_NeedHealing = 0; (0x14019D330)
[1131] int eTerritoryLogType_TaxManagement = 0; (0x14019CF00)
[1132] int ePingSource_Self = 0; (0x14018FB20)
[1133] int ePingSource_Group1 = 0; (0x140190B20)
[1134] int ePingSource_Group4 = 0; (0x14019D060)
[1135] int ePingSource_RaidLeader = 0; (0x1409DE6C0)
[1136] int eBuildingLocationStatus_INVALID_CAMPING_RESTRICTED = 0; (0x144694820)
[1137] int ePingSource_Count = 0; (0x1409DE6F0)
[1138] int eTerritoryLogType_TownProject = 0; (0x140190B20)
[1139] int eTerritoryLogType_TerritoryLevel = 0; (0x14019CEA0)
[1140] int eTerritoryLogType_War = 0; (0x14019CF10)
[1141] int AudioPreloadComponentLoadType_Auto = 0; (0x14018FB20)
[1142] int eTerritoryLogType_CompanyPaycheck = 0; (0x14019D060)
[1143] int eTaxOrFee_PropertyTax = 0; (0x140190B20)
[1144] int eFactionControlBufType_Taxes_Refining_Modifier = 0; (0x14019D2F0)
[1145] int eUiFillType_Linear = 0; (0x140190B20)
[1146] int eTaxOrFee_Stipend = 0; (0x14019CF00)
[1147] int eTaxOrFee_Clamped = 0; (0x14019D350)
[1148] int eObjectiveTaskState_Inactive = 0; (0x14019D060)
[1149] int eFactionControlBufType_None = 0; (0x14018FB20)
[1150] int eFactionControlBufType_InfluencePoints_Modifier = 0; (0x140190B20)
[1151] int eFactionControlBufType_ExperiencePoints_Modifier = 0; (0x14019CEA0)
[1152] int eFactionControlBufType_Azoth_FastTravel_Weight_Reduction = 0; (0x14019D060)
[1153] int eGender_Male = 0; (0x14018FB20)
[1154] int eFactionControlBufType_Taxes_Crafting_Modifier = 0; (0x14019CD90)
[1155] int ESYSTEM_GLOBAL_STATE_LEVEL_LOAD_START_MATERIALS = 0; (0x14019CF00)
[1156] int eFactionControlBufType_Taxes_Trading_Modifier = 0; (0x14019D360)
[1157] int eHousingDecorationResult_NoItemSelected = 0; (0x14019CEA0)
[1158] AZ::Uuid PrimitiveColliderComponentTypeId = 9CB3707A-73B3-4EE5-84EA-3CF86E0E3722; (0x141947030)
[1159] int eFactionControlBufType_Taxes_Housing_Modifier = 0; (0x14019D330)
[1160] int eBuildingLocationStatus_INVALID_NOT_ENOUGH_PRIVILEGES = 0; (0x144694BB0)
[1161] int eFactionControlBufType_Rewards_DarknessEvent_Modifier = 0; (0x14019D270)
[1162] int eFactionControlBufType_Gathering_Speed_Modifier = 0; (0x140D4BEF0)
[1163] int eFactionControlBufType_Gathering_Volume_Modifier = 0; (0x1409DE720)
[1164] int UIError_connection_game_timeout = 0; (0x143EB80B0)
[1165] int ePoiLevels_MajorPoi = 0; (0x140190B20)
[1166] int eTerritoryBonus_GainXP = 0; (0x14019CEA0)
[1167] int eXpEventType_Standing = 0; (0x14019CF10)
[1168] int ePoiLevels_Area = 0; (0x14019CEA0)
[1169] int eGroupSize_Large = 0; (0x14019CF10)
[1170] int eCapturePointStateFlag_Contested = 0; (0x140190B20)
[1171] int eBuildingLocationStatus_INVALID_STRUCTURE_LIMIT_REACHED = 0; (0x1446949B0)
[1172] int eCapturePointStateFlag_Locked = 0; (0x14019CEA0)
[1173] int UIError_none = 0; (0x14018FB20)
[1174] int eCapturePointStateFlag_Active = 0; (0x14019D060)
[1175] int eFortSpawnId_None = 0; (0x14018FB20)
[1176] int eHousingDecorationResult_TimeOut = 0; (0x14019D2F0)
[1177] int eCanPurchasePlotReturnResults_Success = 0; (0x14018FB20)
[1178] int eUiFillType_RadialEdge = 0; (0x14019D060)
[1179] int eMotionParamID_TravelSlope = 0; (0x14019CF10)
[1180] int eFortSpawnId_CapturePoint_A = 0; (0x140190B20)
[1181] int eSettlementProgressionCategory_Smelting = 0; (0x14019D360)
[1182] int eDayPhase_Dusk = 0; (0x14019CF10)
[1183] int eConversationResponseType_PvPFlag_HasPendingNewGroupInvite = 0; (0x14019CF10)
[1184] int eFortSpawnId_CapturePoint_B = 0; (0x14019CEA0)
[1185] int eFortSpawnId_CapturePoint_Claim = 0; (0x14019D060)
[1186] int eObjectiveType_Darkness_Minor = 0; (0x14019CD90)
[1187] int eFortSpawnId_Gate_B = 0; (0x14019D350)
[1188] int eTerritoryBonus_TradingTax = 0; (0x14019CD90)
[1189] int eUiTextOverflowMode_ClipText = 0; (0x140190B20)
[1190] int eBuildableState_Invalid = 0; (0x14018FB20)
[1191] int eBuildableState_Foundation = 0; (0x14019D060)
[1192] int eConversationResponseType_MissionTypeBlocked = 0; (0x140190B20)
[1193] int eBuildableState_Unclaimed = 0; (0x140190B20)
[1194] int AudioObstructionType_SingleRay = 0; (0x140190B20)
[1195] int eSiegeWeaponType_Repeater = 0; (0x140190B20)
[1196] int eGameEventType_Darkness = 0; (0x14019D350)
[1197] int eMissionGoalType_Log = 0; (0x14019D270)
[1198] int eSiegeWeaponType_FireBarrel = 0; (0x14019CF10)
[1199] int eFishingWaterType_FreshWater_Deep = 0; (0x14019CF10)
[1200] int eSiegeWeaponType_FireTrap = 0; (0x14019CF00)
[1201] int eGameModeQueueEligibilityReason_Ineligible_Dead = 0; (0x14019CF00)
[1202] int eSiegeWeaponType_DecoyTrap = 0; (0x14019D350)
[1203] int eSiegeWeaponType_PlatformCannon = 0; (0x14019CD90)
[1204] int eInteractionUIActions_UseQuickslot2 = 0; (0x14019CD90)
[1205] int eSiegeWeaponType_PlatformExplosive = 0; (0x14019D2F0)
[1206] int eSiegeWeaponType_PlatformRepeater = 0; (0x14019D360)
[1207] int eSiegeWeaponType_PowderKeg = 0; (0x14019D330)
[1208] int eNotificationPriority_Low = 0; (0x142F4B9A0)
[1209] int eBuildingLocationStatus_INVALID_OUTSIDE_OF_WAR = 0; (0x144694B00)
[1210] int eTerritoryBonus_GainStanding = 0; (0x140190B20)
[1211] int eTerritoryBonus_GainHousePoints = 0; (0x14019D350)
[1212] int eCanFastTravelToSettlementResults_InCooldown = 0; (0x14019CD90)
[1213] int eTerritoryBonus_StationTax = 0; (0x14019D2F0)
[1214] int UIError_kicked_maintenence = 0; (0x143EB8330)
[1215] int eStructureSize_Small = 0; (0x140190B20)
[1216] int eTerritoryBonus_PropertyTax = 0; (0x14019D360)
[1217] int eTerritoryBonus_HousePurchase = 0; (0x14019D330)
[1218] int eTerritoryBonus_NumTerritoryBonuses = 0; (0x14019D050)
[1219] int ePoolCategory_Invalid = 0; (0x14018FB20)
[1220] int eHousingDecorationResult_TotalHousingItemTagLimitReached = 0; (0x14019D330)
[1221] int ePoolCategory_Player = 0; (0x140190B20)
[1222] int eGameEventType_Arena = 0; (0x14019CD90)
[1223] int ePoolCategory_Territory = 0; (0x14019CEA0)
[1224] int eFishingWaterType_FreshWater_Shallow = 0; (0x14019CEA0)
[1225] int eCanPurchasePlotReturnResults_AlreadyHasHomeOnPlot = 0; (0x140190B20)
[1226] int eCanPurchasePlotReturnResults_NeedsStanding = 0; (0x14019D060)
[1227] int ORStructure_Gate1 = 0; (0x14019D350)
[1228] int UIError_login_forbidden_error = 0; (0x14019CF00)
[1229] int UIError_login_queue_join_failed = 0; (0x14019D050)
[1230] int eCanPurchasePlotReturnResults_NeedsLevel = 0; (0x14019CD90)
[1231] int eCanPurchasePlotReturnResults_NeedsTerritoryBonus = 0; (0x14019D2F0)
[1232] int eCanFastTravelToSettlementResults_InvalidDestinationTerritoryId = 0; (0x140190B20)
[1233] int eHousingDecorationMode_Disabled = 0; (0x14018FB20)
[1234] int eCanFastTravelToSettlementResults_CantAfford = 0; (0x14019CF10)
[1235] int eCanFastTravelToSettlementResults_IsEncumbered = 0; (0x14019D060)
[1236] int eCanFastTravelToSettlementResults_Unknown = 0; (0x14019D350)
[1237] int eHousingDecorationResult_NotOwner = 0; (0x140190B20)
[1238] int eHousingDecorationResult_InvalidHousingItemId = 0; (0x14019CF00)
[1239] int eHousingDecorationResult_WaitingOnAction = 0; (0x14019CD90)
[1240] int eHousingDecorationResult_TotalHousingItemEntitlementLimitReached = 0; (0x14019D050)
[1241] int eHousingDecorationResult_BuildModeDisabled = 0; (0x14019D270)
[1242] int eHousingDecorationResult_Unknown = 0; (0x140D4BEF0)
[1243] int eHousingDecorationMode_Select = 0; (0x140190B20)
[1244] int eMotionParamID_TurnSpeed = 0; (0x140190B20)
[1245] int eHousingDecorationMode_ContextMenu = 0; (0x14019CF10)
[1246] int eEncounterStatus_InProgress = 0; (0x14019CEA0)
[1247] int eEncounterStatus_Succeeded = 0; (0x14019CF10)
[1248] int eConversationState_TurnIn = 0; (0x14019D060)
[1249] int eConversationState_InProgress = 0; (0x14019CF00)
[1250] int eConversationState_HasCommunityMissions = 0; (0x14019D350)
[1251] int OutpostRush_StructureStatusMaskTier = 0; (0x14019CF10)
[1252] int eConversationState_HasEventShop = 0; (0x14019D2F0)
[1253] int eGameModeQueueEligibilityReason_Ineligible_Group_Invite = 0; (0x14019CEA0)
[1254] int eFishingState_HookHit = 0; (0x14019D330)
[1255] int eGameModeQueueEligibilityReason_Ineligible_Offline = 0; (0x14019CF10)
[1256] int ORTutorialEvent_Armory_SpendEssence = 0; (0x140D4BEF0)
[1257] int eGameModeQueueEligibilityReason_Ineligible_Timeout = 0; (0x14019D060)
[1258] int UIError_aoi_character_must_rename = 0; (0x141C97420)
[1259] int eGameModeQueueEligibilityReason_Ineligible_Level = 0; (0x14019D350)
[1260] int eMissionGoalType_Kill = 0; (0x14019D060)
[1261] int eGameModeQueueEligibilityReason_Ineligible_Rejoin_Penalty = 0; (0x14019CD90)
[1262] int eFishingState_Equipped = 0; (0x14019CEA0)
[1263] int eFishingState_CastHitWater = 0; (0x14019D350)
[1264] int eGameModeParticipantStatus_Dead = 0; (0x14019CEA0)
[1265] int eFishingState_FishingStarted = 0; (0x14019CD90)
[1266] int eFishingState_ReelingActive = 0; (0x14019D050)
[1267] int eFishingState_ReelingRecover = 0; (0x14019D270)
[1268] int eFishingState_Failed_HookMissedTooEarly = 0; (0x1409DE720)
[1269] int UIError_login_no_ticket = 0; (0x14019D270)
[1270] int eFishingSTate_Failed_HookMissedTooLate = 0; (0x1409DE6D0)
[1271] int eFishingState_Failed_LineBreak = 0; (0x1409DE6C0)
[1272] int eFishingState_Failed_FishSwamAway = 0; (0x1409DE6F0)
[1273] int eFishingState_Succeeded_FishCaught = 0; (0x1409DE700)
[1274] int eFishingWaterType_FreshWater_VeryShallow = 0; (0x140190B20)
[1275] int eFishingWaterType_SaltWater_VeryShallow = 0; (0x14019D060)
[1276] int eFishingWaterType_SaltWater_Deep = 0; (0x14019D350)
[1277] int OutpostRush_ScoreBitsPerTeam = 0; (0x1409DE6C0)
[1278] int eTemporaryAffiliationRelationship_Friendly = 0; (0x140190B20)
[1279] int eConversationOptionType_JoinOutpostRush = 0; (0x14019D270)
[1280] int UIError_unknown = 0; (0x140190B20)
[1281] int UIError_login_bad_request = 0; (0x14019CEA0)
[1282] int UIError_login_invalid_capability = 0; (0x14019D060)
[1283] int eUiTextCaseSetting_Upper = 0; (0x14019CEA0)
[1284] int UIError_login_bad_ticket = 0; (0x14019D2F0)
[1285] int UIError_banned_offensive_name = 0; (0x143EB80D0)
[1286] int ePerkType_Generated = 0; (0x14018FB20)
[1287] int eWaterFlagIndex_Fishable = 0; (0x140190B20)
[1288] int UIError_login_unable_to_connect = 0; (0x14019D360)
[1289] int UIError_login_no_connection = 0; (0x14019D330)
[1290] int eUiAnimationEvent_Started = 0; (0x14018FB20)
[1291] int eObjectiveType_Crafting = 0; (0x14019CF10)
[1292] int UIError_login_character_list_failed = 0; (0x1409DE6D0)
[1293] int UIError_login_no_worlds_unknown = 0; (0x1409DE700)
[1294] int eObjectiveType_Mission = 0; (0x14019CF00)
[1295] int UIError_login_not_authorized = 0; (0x1409DE710)
[1296] int UIError_aoi_errors = 0; (0x1409DE6E0)
[1297] int eMissionGoalType_Hunt = 0; (0x14019D2F0)
[1298] int eAmbientDataType_UNDEFINED = 0; (0x14019CF10)
[1299] int UIError_aoi_duplicate_connection = 0; (0x142F4B960)
[1300] int UIError_aoi_no_persistence_spawner = 0; (0x140D4BEE0)
[1301] int UIError_aoi_character_restore_failed = 0; (0x140C4CA40)
[1302] int ORTutorialEvent_Boss_Spawn = 0; (0x14019D060)
[1303] int UIError_aoi_grid_too_busy = 0; (0x143EB82C0)
[1304] int eMissionGoalType_Harvest = 0; (0x14019D050)
[1305] int eWaterFlagIndex_Gatherable = 0; (0x14018FB20)
[1306] int UIError_aoi_server_crash = 0; (0x1403B6070)
[1307] int UIError_aoi_max = 0; (0x143EB8100)
[1308] int UIError_connection_failed = 0; (0x143EB8020)
[1309] int eUiAnimationEvent_Updated = 0; (0x14019CF10)
[1310] int eUiFlipbookAnimationLoopType_Linear = 0; (0x140190B20)
[1311] int UIError_connection_registration_timedout = 0; (0x143EB7BC0)
[1312] int UIError_connection_player_timeout = 0; (0x143EB8170)
[1313] int eUiRecompute_RectOnlyForced = 0; (0x14019D060)
[1314] int UIError_connection_cannot_configure = 0; (0x143EB8260)
[1315] int UIError_kicked_character_deactivated = 0; (0x140FD0E40)
[1316] int UIError_kicked_unknown = 0; (0x143EB7AF0)
[1317] int UIError_banned = 0; (0x143EB7F70)
[1318] int UIError_banned_exploit = 0; (0x143EB85D0)
[1319] int UIError_banned_suspected_fraud = 0; (0x143EB7FE0)
[1320] int UIError_banned_cs_lockout = 0; (0x14177EE00)
[1321] int eNotificationPriority_Medium = 0; (0x14019D180)
[1322] int eNotificationPriority_VeryHigh = 0; (0x14019D040)
[1323] int eBuildingLocationStatus_INVALID_LOCATION = 0; (0x140190B20)
[1324] int eBuildingLocationStatus_INVALID_IN_WATER = 0; (0x14019CEA0)
[1325] int eBuildingLocationStatus_INVALID_NOT_IN_SOCKET = 0; (0x1409DE6C0)
[1326] int eBuildingLocationStatus_INVALID_NOT_IN_CLAIMED_TERRITORY = 0; (0x14177EE00)
[1327] int eBuildingLocationStatus_INVALID_TERRITORY_NOT_MATCHING_GUILD = 0; (0x14063E5A0)
[1328] int eBuildingLocationStatus_INVALID_SECURITY_CONCERN = 0; (0x142409780)
[1329] int eBuildingLocationStatus_INVALID_DEPLOYABLE_LIMIT_REACHED = 0; (0x141EED0A0)
[1330] int eBuildingLocationStatus_INVALID_NOT_ENOUGH_PRIVILEGES_PLANTSEED = 0; (0x144694780)
[1331] int eUiParticleInitialDirectionType_RelativeToEmitterCenter = 0; (0x140190B20)
[1332] int eBuildingLocationStatus_INVALID_WAR_ATTACKERS_ONLY = 0; (0x1446946C0)
[1333] int eMilestoneType_Minor = 0; (0x14018FB20)
[1334] int eMilestoneType_Major = 0; (0x140190B20)
[1335] int eDayPhase_Night = 0; (0x14018FB20)
[1336] int eMilestoneType_TerritoryRecommendation = 0; (0x14019CEA0)
[1337] int ePerkType_Gem = 0; (0x140190B20)
[1338] int eContractCountThreshold_Less_10 = 0; (0x140190B20)
[1339] int eContractCountThreshold_Less_100 = 0; (0x14019D060)
[1340] int eContractCountThreshold_Less_1000 = 0; (0x14019D350)
[1341] int eContractCountThreshold_Many = 0; (0x14019CD90)
[1342] int eRecipeMode_CraftItem = 0; (0x14018FB20)
[1343] int eGameEventType_PvPKill = 0; (0x14019D2F0)
[1344] int eUiRecompute_ViewportTransformOnly = 0; (0x14019CEA0)
[1345] int eRecipeMode_Salvage = 0; (0x14019CF10)
[1346] int eInteractionUIActions_UseQuickslot5 = 0; (0x14019D330)
[1347] int eInteractionUIActions_UseQuickslot6 = 0; (0x14019D050)
[1348] int eTerritoryLandmarkType_FishingHotspot = 0; (0x140D4BEE0)
[1349] int eInteractionUIActions_OpenCrafting = 0; (0x1409DE6E0)
[1350] int ORTutorialEvent_Summoning_HowTo = 0; (0x1409DE720)
[1351] int DarknessThreshold_None = 0; (0x14018FB20)
[1352] int DarknessThreshold_Low = 0; (0x140190B20)
[1353] int DarknessThreshold_Medium = 0; (0x14019CEA0)
[1354] int eObjectiveType_Objective = 0; (0x14018FB20)
[1355] int eSettlementProgressionCategory_Blacksmithing = 0; (0x14018FB20)
[1356] int eObjectiveType_CommunityGoal = 0; (0x14019D350)
[1357] int eObjectiveType_Darkness_Major = 0; (0x14019D2F0)
[1358] int eObjectiveType_Arena = 0; (0x14019D360)
[1359] int eObjectiveType_Invasion = 0; (0x14019D330)
[1360] int eObjectiveType_DefendObject = 0; (0x14019D270)
[1361] int eObjectiveType_DynamicPOI = 0; (0x1409DE720)
[1362] int eTerritoryLandmarkType_CraftingStation = 0; (0x14019D050)
[1363] int eObjectiveDifficulty_Easy = 0; (0x140190B20)
[1364] int eObjectiveDifficulty_Medium = 0; (0x14019CEA0)
[1365] int eObjectiveDifficulty_Hard = 0; (0x14019CF10)
[1366] int eObjectiveTaskState_New = 0; (0x14018FB20)
[1367] int eObjectiveTaskState_Complete = 0; (0x14019CEA0)
[1368] int eObjectiveTaskState_CompleteActive = 0; (0x14019CF10)
[1369] int eObjectiveCraftingType_Item, = 0; (0x14018FB20)
[1370] int eSettlementProgressionState_Blocking = 0; (0x14019D060)
[1371] int eObjectiveCraftingType_Structure = 0; (0x140190B20)
[1372] int eUiTextSet_SetEscapeMarkup = 0; (0x140190B20)
[1373] int eObjectiveCraftingType_Repair = 0; (0x14019CEA0)
[1374] int eObjectiveOrder_Distance = 0; (0x140190B20)
[1375] int eObjectiveOrder_Type = 0; (0x14019CEA0)
[1376] int eSettlementProgressionCategory_Masonry = 0; (0x14019D350)
[1377] int ScriptedEntityTweenerEasingMethod_Quad = 0; (0x140190B20)
[1378] int eGameEventContributionLevel_None = 0; (0x14018FB20)
[1379] int eGameEventContributionLevel_Medium = 0; (0x14019CEA0)
[1380] int eGameEventContributionLevel_High = 0; (0x14019CF10)
[1381] int eGameEventType_War = 0; (0x14019CF10)
[1382] int eMissionGoalType_Explore = 0; (0x14019CF00)
[1383] int eMissionGoalType_Raid = 0; (0x14019D350)
[1384] int eMissionGoalType_Craft = 0; (0x140D4BEF0)
[1385] int eP2PTradeFailure_TransactionAborted = 0; (0x1409DE6D0)
[1386] int eUiTooltipDisplayAutoPositionMode_OffsetFromElement = 0; (0x140190B20)
[1387] int eMissionGoalType_Intercept = 0; (0x1409DE6D0)
[1388] int eMissionGoalType_Control = 0; (0x1409DE6C0)
 
=====================================================================================================================================
[17:10:39] m_classes count: 452
[000] C: "UiCanvasLuaProxy"
T: AE6EE082-AD58-480A-8B53-E98B79F91368, S: 30
 Ctor: 1413CAE30, Dtor: 140BEB930, Alloc: 1415916D0, Dealloc: 141665EF0, RTTI: 0
m_methods:
 1416B0950 "EntityId UiCanvasLuaProxy::LoadCanvas(UiCanvasLuaProxy*, const char*);" 
 14159B0E0 "void UiCanvasLuaProxy::BusConnect(UiCanvasLuaProxy*, EntityId);" 
 141724EA0 "void UiCanvasLuaProxy::UnloadCanvas(UiCanvasLuaProxy*, EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[001] C: "LyShineLua"
T: 2570D3B3-2D18-4DB1-A0DE-E017A2F491D1, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141591640, Dealloc: 141356C50, RTTI: 0
m_methods:
 14171E1F0 "void LyShineLua::ShowMouseCursor(bool);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x7FF700000002
 
[002] C: "TransformConfig"
T: B3AAB26D-D075-4E2B-9653-9527EE363DF8, S: 90
 Ctor: 14056C010, Dtor: 1401DF450, Alloc: 140609F60, Dealloc: 140630540, RTTI: 146128540
m_constructors:
 14056C010 "void TransformConfig::Constructor(TransformConfig*);" 
 14056C0B0 "void TransformConfig::Constructor(TransformConfig*, const Transform&);" 
m_methods:
 140685710 "void TransformConfig::SetTransform(TransformConfig*, const Transform&);" 
 140684230 "void TransformConfig::SetLocalAndWorldTransform(TransformConfig*, const Transform&, const Transform&);" 
m_properties:
 140584310 "bool& TransformConfig::isStatic::Getter(TransformConfig*);" 
 1405A4D40 "void TransformConfig::isStatic::Setter(TransformConfig*, const bool&);" 
 1403F2E80 "Transform& TransformConfig::localTransform::Getter(TransformConfig*);" 
 1405A4D00 "void TransformConfig::localTransform::Setter(TransformConfig*, const Transform&);" 
 140541AF0 "int TransformConfig::parentActivationTransformMode::Getter(TransformConfig*);" 
 140541A40 "void TransformConfig::parentActivationTransformMode::Setter(TransformConfig*, const int&);" 
 1405842F0 "EntityId& TransformConfig::parentId::Getter(TransformConfig*);" 
 1405A4D20 "void TransformConfig::parentId::Setter(TransformConfig*, const EntityId&);" 
 140584300 "bool& TransformConfig::netSyncEnabled::Getter(TransformConfig*);" 
 1405A4D30 "void TransformConfig::netSyncEnabled::Setter(TransformConfig*, const bool&);" 
 1403F11A0 "Transform& TransformConfig::worldTransform::Getter(TransformConfig*);" 
 1405A4CE0 "void TransformConfig::worldTransform::Setter(TransformConfig*, const Transform&);" 
 14018FB20 "int TransformConfig::MaintainOriginalRelativeTransform::Getter();" 
 140190B20 "int TransformConfig::MaintainCurrentWorldTransform::Getter();" 
 140541A30 "int TransformConfig::interpolatePosition::Getter(TransformConfig*);" 
 140541A20 "void TransformConfig::interpolatePosition::Setter(TransformConfig*, const int&);" 
 140541A50 "int TransformConfig::interpolateRotation::Getter(TransformConfig*);" 
 140541A70 "void TransformConfig::interpolateRotation::Setter(TransformConfig*, const int&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("AZ::AttributeFunction<R(Args...)><void TransformConfig* ScriptDataContext& >" D72BA4DC-B649-5B4F-BBBA-38BEF4DBFECD), VT: 145443568, V: 0x7FF752A8DDA0
 
[003] C: "TickOrder"
T: 8F725746-A4BC-4DF7-A249-02931973C864, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140365FB0, Dealloc: 1403D7BB0, RTTI: 0
m_properties:
 14019D2B0 "int TickOrder::UI::Getter();" 
 14019D180 "int TickOrder::Placement::Getter();" 
 14019D040 "int TickOrder::Animation::Getter();" 
 14018FB20 "int TickOrder::First::Getter();" 
 14019CEF0 "int TickOrder::Last::Getter();" 
 14019D280 "int TickOrder::Default::Getter();" 
 14019CF70 "int TickOrder::Physics::Getter();" 
 
[004] C: "InterpolationMode"
T: 3095F41E-C2C6-474A-BB05-68B228097626, S: 4
 Ctor: 1401DF1E0, Dtor: 140190D00, Alloc: 140367F20, Dealloc: 1403D8A20, RTTI: 0
m_properties:
 14018FB20 "int InterpolationMode::NoInterpolation::Getter();" 
 140190B20 "int InterpolationMode::LinearInterpolation::Getter();" 
 
[005] C: "Plane"
T: 847DD984-9DBF-4789-8E25-E0334402E8AD, S: 10
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 1403674A0, Dealloc: 1403D80F0, RTTI: 0
m_methods:
 14040A050 "bool Plane::IsFinite(Plane*);" 
 14019CCF0 "Plane Plane::Clone(const Plane&);" 
 1403B6180 "bool Plane::CastRay(Plane*, const Vector3&, const Vector3&, VectorFloat&);" 
 1404007E0 "Vector3 Plane::GetProjected(Plane*, const Vector3&);" 
 14042C490 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Plane::ToString(const Plane&);" 
 14036C4C0 "void Plane::ApplyTransform(Plane*, const Transform&);" 
 1403D3710 "const Plane Plane::CreateFromCoefficients(const VectorFloat&, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
 1401AD7A0 "const Vector4& Plane::GetPlaneEquationCoefficients(Plane*);" 
 1403D3DE0 "const Plane Plane::CreateFromNormalAndPoint(const Vector3&, const Vector3&);" 
 1401DF220 "void Plane::Set(Plane*, const Vector4&);" 
 1403D3DC0 "const Plane Plane::CreateFromNormalAndDistance(const Vector3&, float);" 
 140457130 "void Plane::SetDistance(Plane*, float);" 
 140457D20 "void Plane::SetNormal(Plane*, const Vector3&);" 
 140402430 "const Plane Plane::GetTransform(Plane*, const Transform&);" 
 1403F48E0 "float Plane::GetDistance(Plane*);" 
 1403FBB10 "const Vector3 Plane::GetNormal(Plane*);" 
 140407670 "bool Plane::IntersectSegment(Plane*, const Vector3&, const Vector3&, VectorFloat&);" 
 1403FF8B0 "const VectorFloat Plane::GetPointDist(Plane*, const Vector3&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Plane* >" 71AC47F8-C86A-5D00-A9CF-5C4F479FD31B), VT: 145421850, V: 0x7FF75282C050
 
[006] C: "Obb"
T: 004ABD25-CF14-4EB3-BD41-022C247C07FA, S: 70
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140367320, Dealloc: 1403D8780, RTTI: 0
m_methods:
 1403D3580 "const Obb Obb::CreateFromAabb(const Aabb&);" 
 14031BFA0 "bool Obb::Equal(Obb*, const Obb&);" 
 140426380 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Obb::ToString(const Obb&);" 
 1403F1190 "const Vector3& Obb::GetAxis(Obb*, int);" 
 140457650 "void Obb::SetHalfLength(Obb*, int, float);" 
 14019D070 "Obb Obb::Clone(const Obb&);" 
 1403D3F50 "const Obb Obb::CreateFromPositionAndAxes(const Vector3&, const Vector3&, float, const Vector3&, float, const Vector3&, float);" 
 140409F90 "bool Obb::IsFinite(Obb*);" 
 140454D70 "void Obb::SetAxis(Obb*, int, const Vector3&);" 
 1403F8DE0 "float Obb::GetHalfLength(Obb*, int);" 
m_properties:
 1403F8E10 "float Obb::halfLengthZ::Getter(Obb*);" 
 140457680 "void Obb::halfLengthZ::Setter(Obb*, float);" 
 1403F8E00 "float Obb::halfLengthY::Getter(Obb*);" 
 140457670 "void Obb::halfLengthY::Setter(Obb*, float);" 
 1403F11B0 "const Vector3& Obb::axisY::Getter(Obb*);" 
 140454DA0 "void Obb::axisY::Setter(Obb*, const Vector3&);" 
 1403F8DF0 "float Obb::halfLengthX::Getter(Obb*);" 
 140457660 "void Obb::halfLengthX::Setter(Obb*, float);" 
 1403F11A0 "const Vector3& Obb::axisX::Getter(Obb*);" 
 140454D90 "void Obb::axisX::Setter(Obb*, const Vector3&);" 
 1403F11C0 "const Vector3& Obb::axisZ::Getter(Obb*);" 
 140454DB0 "void Obb::axisZ::Setter(Obb*, const Vector3&);" 
 1401AD7A0 "const Vector3& Obb::position::Getter(Obb*);" 
 1401DF220 "void Obb::position::Setter(Obb*, const Vector3&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Obb* >" 3A022574-9B23-5DB9-BFA3-8582B04F721A), VT: 145421808, V: 0x7FF752826330
 
[007] C: "Matrix4x4"
T: 157193C7-B673-4A2B-8B43-5681DCC3DEC3, S: 40
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 1403671A0, Dealloc: 1403D8630, RTTI: 0
m_methods:
 1403C1D40 "Matrix4x4 Matrix4x4::ConstructFromValues(Vector4, Vector4, Vector4, Vector4);" 
 1403D2DA0 "const Matrix4x4 Matrix4x4::CreateDiagonal(const Vector4&);" 
 1403D41F0 "const Matrix4x4 Matrix4x4::CreateFromQuaternionAndTranslation(const Quaternion&, const Vector3&);" 
 1403D6220 "const Matrix4x4 Matrix4x4::CreateRotationZ(const VectorFloat&);" 
 1403D5F90 "const Matrix4x4 Matrix4x4::CreateRotationY(const VectorFloat&);" 
 1403D37B0 "const Matrix4x4 Matrix4x4::CreateFromColumns(const Vector4&, const Vector4&, const Vector4&, const Vector4&);" 
 1403C1D40 "const Matrix4x4 Matrix4x4::CreateFromRows(const Vector4&, const Vector4&, const Vector4&, const Vector4&);" 
 1403D4440 "const Matrix4x4 Matrix4x4::CreateFromValue(const VectorFloat&);" 
 1403D7270 "const Matrix4x4 Matrix4x4::CreateZero();" 
 1403D51B0 "const Matrix4x4 Matrix4x4::CreateProjectionOffset(float, float, float, float, float, float);" 
 1403D4910 "const Matrix4x4 Matrix4x4::CreateIdentity();" 
 140409E30 "bool Matrix4x4::IsFinite(Matrix4x4*);" 
 1403F4550 "const Vector4 Matrix4x4::GetDiagonal(Matrix4x4*);" 
 140408ED0 "bool Matrix4x4::IsClose(Matrix4x4*, const Matrix4x4&, const VectorFloat&);" 
 1403E89C0 "const Vector3 Matrix4x4::ExtractScale(Matrix4x4*);" 
 1404506C0 "const Vector3 Matrix4x4::RetrieveScale(Matrix4x4*);" 
 1403D5CF0 "const Matrix4x4 Matrix4x4::CreateRotationX(const VectorFloat&);" 
 140454E60 "void Matrix4x4::SetColumns(Matrix4x4*, const Vector4&, const Vector4&, const Vector4&, const Vector4&);" 
 140458860 "void Matrix4x4::SetRows(Matrix4x4*, const Vector4&, const Vector4&, const Vector4&, const Vector4&);" 
 140400290 "const Vector3 Matrix4x4::GetTranslation(Matrix4x4*);" 
 140421970 "void Matrix4x4::MultiplyByScale(Matrix4x4*, const Vector3&);" 
 1403F93C0 "const Matrix4x4 Matrix4x4::GetInverseFast(Matrix4x4*);" 
 140400B60 "const Vector3 Matrix4x4::GetRowAsVector3(Matrix4x4*, int);" 
 1403F2220 "const Vector3 Matrix4x4::GetColumnAsVector3(Matrix4x4*, int);" 
 1403D50C0 "const Matrix4x4 Matrix4x4::CreateProjectionFov(float, float, float, float);" 
 14031C270 "const Matrix4x4 Matrix4x4::MultiplyMatrix4x4(Matrix4x4*, const Matrix4x4&);" 
 14031C390 "const Vector3 Matrix4x4::MultiplyVector3(Matrix4x4*, const Vector3&);" 
 14031BF50 "bool Matrix4x4::Equal(Matrix4x4*, const Matrix4x4&);" 
 140421410 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Matrix4x4::ToString(const Matrix4x4&);" 
 140400B60 "const Vector4 Matrix4x4::GetRow(Matrix4x4*, int);" 
 1403F21B0 "const Vector4 Matrix4x4::GetColumn(Matrix4x4*, int);" 
 1404571E0 "void Matrix4x4::SetElement(Matrix4x4*, int, int, const VectorFloat&);" 
 1403D3FC0 "const Matrix4x4 Matrix4x4::CreateFromQuaternion(const Quaternion&);" 
 140400BA0 "void Matrix4x4::GetRows(Matrix4x4*, Vector4*, Vector4*, Vector4*, Vector4*);" 
 1403F21B0 "const Vector4 Matrix4x4::GetColumns(Matrix4x4*, int);" 
 14031C410 "const Vector4 Matrix4x4::MultiplyVector4(Matrix4x4*, const Vector4&);" 
 14019CDA0 "Matrix4x4 Matrix4x4::Clone(const Matrix4x4&);" 
 140457D60 "void Matrix4x4::SetTranslation(Matrix4x4*, const Vector3&);" 
 1403F4B40 "VectorFloat Matrix4x4::GetElement(Matrix4x4*, int, int);" 
 140456020 "void Matrix4x4::SetColumn(Matrix4x4*, int, const Vector4&);" 
 1403D6390 "const Matrix4x4 Matrix4x4::CreateScale(const Vector3&);" 
 140458830 "void Matrix4x4::SetRow(Matrix4x4*, int, const Vector4&);" 
 14031C1E0 "const Vector3 Matrix4x4::Multiply3x3(Matrix4x4*, const Vector3&);" 
 140408B30 "void Matrix4x4::InvertTransform(Matrix4x4*);" 
 140454E60 "void Matrix4x4::SetBasisAndPosition(Matrix4x4*, const Vector4&, const Vector4&, const Vector4&, const Vector4&);" 
 1404739D0 "const Vector3 Matrix4x4::TransposedMultiply3x3(Matrix4x4*, const Vector3&);" 
 1404584D0 "void Matrix4x4::SetRotationPartFromQuaternion(Matrix4x4*, const Quaternion&);" 
 140400290 "const Vector3 Matrix4x4::GetPosition(Matrix4x4*);" 
 1403D6DC0 "const Matrix4x4 Matrix4x4::CreateTranslation(const Vector3&);" 
 140457D60 "void Matrix4x4::SetPosition(Matrix4x4*, const Vector3&);" 
 140402840 "const Matrix4x4 Matrix4x4::GetTranspose(Matrix4x4*);" 
 140473930 "void Matrix4x4::Transpose(Matrix4x4*);" 
 1403F95B0 "const Matrix4x4 Matrix4x4::GetInverseFull(Matrix4x4*);" 
 140408A90 "void Matrix4x4::InvertFull(Matrix4x4*);" 
 1403D5000 "const Matrix4x4 Matrix4x4::CreateProjection(float, float, float, float);" 
 1403FA0C0 "const Matrix4x4 Matrix4x4::GetInverseTransform(Matrix4x4*);" 
 1404088A0 "void Matrix4x4::InvertFast(Matrix4x4*);" 
m_properties:
 140400290 "const Vector3 Matrix4x4::position::Getter(Matrix4x4*);" 
 140457D60 "void Matrix4x4::position::Setter(Matrix4x4*, const Vector3&);" 
 1403F1310 "const Vector4 Matrix4x4::basisZ::Getter(Matrix4x4*);" 
 140455170 "void Matrix4x4::basisZ::Setter(Matrix4x4*, const Vector4&);" 
 1403F1290 "const Vector4 Matrix4x4::basisX::Getter(Matrix4x4*);" 
 140455060 "void Matrix4x4::basisX::Setter(Matrix4x4*, const Vector4&);" 
 1403F12D0 "const Vector4 Matrix4x4::basisY::Getter(Matrix4x4*);" 
 1404550F0 "void Matrix4x4::basisY::Setter(Matrix4x4*, const Vector4&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Matrix4x4* >" 29904D10-3094-5619-A8C2-539E23F42887), VT: 145421460, V: 0x7FF752820460
 
[008] C: "Matrix3x3"
T: 15A4332F-7C3F-4A58-AC35-50E1CE53FB9C, S: 30
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140367020, Dealloc: 1403D7E50, RTTI: 0
m_methods:
 1403C1D20 "Matrix3x3 Matrix3x3::ConstructFromValues(Vector3, Vector3, Vector3);" 
 1403D15C0 "const Matrix3x3 Matrix3x3::CreateCrossProduct(const Vector3&);" 
 1403D2D70 "const Matrix3x3 Matrix3x3::CreateDiagonal(const Vector3&);" 
 14019D020 "const Matrix3x3 Matrix3x3::CreateFromMatrix4x4(const Matrix4x4&);" 
 14019D020 "const Matrix3x3 Matrix3x3::CreateFromTransform(const Transform&);" 
 1403D6100 "const Matrix3x3 Matrix3x3::CreateRotationZ(const VectorFloat&);" 
 1403D7250 "const Matrix3x3 Matrix3x3::CreateZero();" 
 1403D48E0 "const Matrix3x3 Matrix3x3::CreateIdentity();" 
 140409D60 "bool Matrix3x3::IsFinite(Matrix3x3*);" 
 1403F4530 "const Vector3 Matrix3x3::GetDiagonal(Matrix3x3*);" 
 140408E80 "bool Matrix3x3::IsClose(Matrix3x3*, const Matrix3x3&, const VectorFloat&);" 
 14042B610 "void Matrix3x3::Orthogonalize(Matrix3x3*);" 
 140458300 "void Matrix3x3::SetRotationPartFromQuaternion(Matrix3x3*, const Quaternion&);" 
 14040B020 "bool Matrix3x3::IsOrthogonal(Matrix3x3*, const VectorFloat&);" 
 1403D4420 "const Matrix3x3 Matrix3x3::CreateFromValue(const VectorFloat&);" 
 1403F4B00 "VectorFloat Matrix3x3::GetElement(Matrix3x3*, int, int);" 
 140455F80 "void Matrix3x3::SetColumn(Matrix3x3*, int, const Vector3&);" 
 1403D2D70 "const Matrix3x3 Matrix3x3::CreateScale(const Vector3&);" 
 140458830 "void Matrix3x3::SetRow(Matrix3x3*, int, const Vector3&);" 
 14031C750 "const Matrix3x3 Matrix3x3::Subtract(Matrix3x3*, const Matrix3x3&);" 
 14031C1E0 "const Vector3 Matrix3x3::MultiplyVector3(Matrix3x3*, const Vector3&);" 
 140454DE0 "void Matrix3x3::SetBasis(Matrix3x3*, const Vector3&, const Vector3&, const Vector3&);" 
 14031C780 "const Matrix3x3 Matrix3x3::Unary(Matrix3x3*);" 
 1403C1D20 "const Matrix3x3 Matrix3x3::CreateFromRows(const Vector3&, const Vector3&, const Vector3&);" 
 14031C820 "const Matrix3x3 Matrix3x3::Add(Matrix3x3*, const Matrix3x3&);" 
 140473A00 "const Matrix3x3 Matrix3x3::TransposedMultiply(Matrix3x3*, const Matrix3x3&);" 
 1403D3740 "const Matrix3x3 Matrix3x3::CreateFromColumns(const Vector3&, const Vector3&, const Vector3&);" 
 14031C120 "const Matrix3x3 Matrix3x3::MultiplyMatrix3x3(Matrix3x3*, const Matrix3x3&);" 
 140420280 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Matrix3x3::ToString(const Matrix3x3&);" 
 14031C1B0 "const Matrix3x3 Matrix3x3::MultiplyFloat(Matrix3x3*, const VectorFloat&);" 
 140400B60 "const Vector3 Matrix3x3::GetRow(Matrix3x3*, int);" 
 1403F2160 "const Vector3 Matrix3x3::GetColumn(Matrix3x3*, int);" 
 1404571A0 "void Matrix3x3::SetElement(Matrix3x3*, int, int, const VectorFloat&);" 
 1403D3FA0 "const Matrix3x3 Matrix3x3::CreateFromQuaternion(const Quaternion&);" 
 140400B80 "void Matrix3x3::GetRows(Matrix3x3*, Vector3*, Vector3*, Vector3*);" 
 1403F2160 "const Vector3 Matrix3x3::GetColumns(Matrix3x3*, int);" 
 14019D1C0 "Matrix3x3 Matrix3x3::Clone(const Matrix3x3&);" 
 14031C8D0 "const Matrix3x3 Matrix3x3::DivideFloat(Matrix3x3*, const VectorFloat&);" 
 1403D5E70 "const Matrix3x3 Matrix3x3::CreateRotationY(const VectorFloat&);" 
 14031BF10 "bool Matrix3x3::Equal(Matrix3x3*, const Matrix3x3&);" 
 1403F11E0 "void Matrix3x3::GetBasis(Matrix3x3*, Vector3*, Vector3*, Vector3*);" 
 140454DE0 "void Matrix3x3::SetColumns(Matrix3x3*, const Vector3&, const Vector3&, const Vector3&);" 
 140458840 "void Matrix3x3::SetRows(Matrix3x3*, const Vector3&, const Vector3&, const Vector3&);" 
 1404218A0 "void Matrix3x3::MultiplyByScale(Matrix3x3*, const Vector3&);" 
 1403FF220 "const Matrix3x3 Matrix3x3::GetOrthogonalized(Matrix3x3*);" 
 1403F9380 "const Matrix3x3 Matrix3x3::GetTranspose(Matrix3x3*);" 
 1403F41E0 "VectorFloat Matrix3x3::GetDeterminant(Matrix3x3*);" 
 140408860 "void Matrix3x3::Transpose(Matrix3x3*);" 
 1403EF940 "const Matrix3x3 Matrix3x3::GetAdjugate(Matrix3x3*);" 
 1403F94D0 "const Matrix3x3 Matrix3x3::GetInverseFull(Matrix3x3*);" 
 1403FF8E0 "const Matrix3x3 Matrix3x3::GetPolarDecomposition(Matrix3x3*);" 
 1404089C0 "void Matrix3x3::InvertFull(Matrix3x3*);" 
 1403F9380 "const Matrix3x3 Matrix3x3::GetInverseFast(Matrix3x3*);" 
 140408860 "void Matrix3x3::InvertFast(Matrix3x3*);" 
 140450630 "const Vector3 Matrix3x3::RetrieveScale(Matrix3x3*);" 
 1403D5BD0 "const Matrix3x3 Matrix3x3::CreateRotationX(const VectorFloat&);" 
 1403E8850 "const Vector3 Matrix3x3::ExtractScale(Matrix3x3*);" 
m_properties:
 1403F12F0 "const Vector3 Matrix3x3::basisZ::Getter(Matrix3x3*);" 
 140455140 "void Matrix3x3::basisZ::Setter(Matrix3x3*, const Vector3&);" 
 1403F1270 "const Vector3 Matrix3x3::basisX::Getter(Matrix3x3*);" 
 140455020 "void Matrix3x3::basisX::Setter(Matrix3x3*, const Vector3&);" 
 1403F12B0 "const Vector3 Matrix3x3::basisY::Getter(Matrix3x3*);" 
 1404550B0 "void Matrix3x3::basisY::Setter(Matrix3x3*, const Vector3&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Matrix3x3* >" 3C77F98D-E22A-5DD2-A7B1-56D92719CB5E), VT: 145421388, V: 0x7FF75281F6E0
 
[009] C: "Color"
T: 7894072A-9050-4F0F-901B-34B1A0D29417, S: 10
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140366D20, Dealloc: 1403D80F0, RTTI: 0
m_constructors:
 1401D4850 "void Color::Constructor(Color*, const VectorFloat&);" 
 1401D4860 "void Color::Constructor(Color*, const VectorFloat&, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
m_methods:
 1403C1C90 "Color Color::ConstructFromValues(int, int, int, int);" 
 1403F4AC0 "const VectorFloat Color::GetElement(Color*, int);" 
 1403E0990 "const VectorFloat Color::Dot3(Color*, const Color&);" 
 14031C720 "const Color Color::Subtract(Color*, const Color&);" 
 1403ECC00 "void Color::FromU32(Color*, unsigned int);" 
 14031C810 "const Color Color::Add(Color*, const Color&);" 
 14040A400 "bool Color::IsGreaterEqualThan(Color*, const Color&);" 
 1403D7240 "const Color Color::CreateZero();" 
 14040A870 "bool Color::LessEqualThan(Color*, const Color&);" 
 1403ECE70 "Color Color::GammaToLinear(Color*);" 
 14019CCF0 "Color Color::Clone(const Color&);" 
 14031C8C0 "const Color Color::DivideFloat(Color*, const VectorFloat&);" 
 14031C110 "const Color Color::MultiplyColor(Color*, const Color&);" 
 14031C730 "const Color Color::Unary(Color*);" 
 1403E09C0 "const VectorFloat Color::Dot(Color*, const Color&);" 
 1403BF040 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Color::ToString(const Color&);" 
 14031C110 "const Color Color::MultiplyFloat(Color*, const VectorFloat&);" 
 140457150 "void Color::SetElement(Color*, int, const VectorFloat&);" 
 14031BEF0 "bool Color::Equal(Color*, const Color&);" 
 14031C8C0 "const Color Color::DivideColor(Color*, const Color&);" 
 14040A900 "bool Color::LessThan(Color*, const Color&);" 
 1401D4860 "void Color::Set(Color*, const VectorFloat&, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
 140408E60 "bool Color::IsClose(Color*, const Color&, const VectorFloat&);" 
 14040C680 "bool Color::IsZero(Color*, const VectorFloat&);" 
 14040A900 "bool Color::IsLessThan(Color*, const Color&);" 
 140472400 "unsigned int Color::ToU32LinearToGamma(Color*);" 
 14040A870 "bool Color::IsLessEqualThan(Color*, const Color&);" 
 1403D4460 "const Color Color::CreateFromVector3(const Vector3&);" 
 14040A490 "bool Color::IsGreaterThan(Color*, const Color&);" 
 14040C8E0 "Color Color::LinearToGamma(Color*);" 
 1403D44A0 "const Color Color::CreateFromVector3AndFloat(const Vector3&, const VectorFloat&);" 
 1403D4FC0 "const Color Color::CreateOne();" 
 1404723A0 "unsigned int Color::ToU32(Color*);" 
 1403ECCA0 "void Color::FromU32GammaToLinear(Color*, unsigned int);" 
m_properties:
 1403EEA00 "const VectorFloat Color::a::Getter(Color*);" 
 140454650 "void Color::a::Setter(Color*, const VectorFloat&);" 
 140400960 "const VectorFloat Color::r::Getter(Color*);" 
 140457DA0 "void Color::r::Setter(Color*, const VectorFloat&);" 
 1403F11D0 "const VectorFloat Color::b::Getter(Color*);" 
 140454DC0 "void Color::b::Setter(Color*, const VectorFloat&);" 
 1403F5760 "const VectorFloat Color::g::Getter(Color*);" 
 140457550 "void Color::g::Setter(Color*, const VectorFloat&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Color* ScriptDataContext& >" 7837F2D8-9105-5889-B087-C82F2AF4214D), VT: 1454211D8, V: 0x7FF7527BEA00
 ("AZ::AttributeFunction<R(Args...)><void Color* >" 83E61D6B-20C6-54A9-AEB4-8E35399BE214), VT: 145421220, V: 0x7FF7527BE7D0
 
[010] C: "Vector3"
T: 8379EB7D-01FA-4538-B64B-A6543B4BE73D, S: 10
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140367C20, Dealloc: 1403D80F0, RTTI: 0
m_constructors:
 1401D4850 "void Vector3::Constructor(Vector3*, const VectorFloat&);" 
 1401D48A0 "void Vector3::Constructor(Vector3*, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
m_methods:
 1403C1E90 "Vector3 Vector3::ConstructFromValues(VectorFloat, VectorFloat, VectorFloat);" 
 1403D7240 "const Vector3 Vector3::CreateZero();" 
 1403CF6A0 "const Vector3 Vector3::CreateAxisZ(const VectorFloat&);" 
 1403CF670 "const Vector3 Vector3::CreateAxisY(const VectorFloat&);" 
 1403E0990 "const VectorFloat Vector3::Dot(Vector3*, const Vector3&);" 
 14042F8C0 "void Vector3::ProjectOnNormal(Vector3*, const Vector3&);" 
 1403F4970 "const VectorFloat Vector3::GetDistanceSq(Vector3*, const Vector3&);" 
 14040A8E0 "bool Vector3::IsLessEqualThan(Vector3*, const Vector3&);" 
 1404579A0 "void Vector3::SetLength(Vector3*, const VectorFloat&);" 
 140425D50 "const VectorFloat Vector3::NormalizeSafeWithLength(Vector3*, const VectorFloat&);" 
 1403FAB10 "const Vector3 Vector3::GetMax(Vector3*, const Vector3&);" 
 1403FBC70 "const Vector3 Vector3::GetNormalizedSafe(Vector3*, const VectorFloat&);" 
 140425E70 "const VectorFloat Vector3::NormalizeWithLength(Vector3*);" 
 14040C850 "const Vector3 Vector3::Lerp(Vector3*, const Vector3&, const VectorFloat&);" 
 14040AD60 "bool Vector3::IsNormalized(Vector3*, const VectorFloat&);" 
 140425BB0 "void Vector3::Normalize(Vector3*);" 
 14031C0B0 "bool Vector3::Equal(Vector3*, const Vector3&);" 
 14031C810 "const Vector3 Vector3::Add(Vector3*, const Vector3&);" 
 14048D6E0 "const Vector3 Vector3::ZAxisCross(Vector3*);" 
 14040A470 "bool Vector3::IsGreaterEqualThan(Vector3*, const Vector3&);" 
 14031C8C0 "const Vector3 Vector3::DivideVector3(Vector3*, const Vector3&);" 
 140457240 "void Vector3::SetElement(Vector3*, int, const VectorFloat&);" 
 140488330 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Vector3::ToString(const Vector3&);" 
 14031C110 "const Vector3 Vector3::MultiplyFloat(Vector3*, const VectorFloat&);" 
 14031C730 "const Vector3 Vector3::Unary(Vector3*);" 
 1403F4920 "const VectorFloat Vector3::GetDistance(Vector3*, const Vector3&);" 
 14040A970 "bool Vector3::LessThan(Vector3*, const Vector3&);" 
 140400EC0 "const Vector3 Vector3::GetSin(Vector3*);" 
 14031C110 "const Vector3 Vector3::MultiplyVector3(Vector3*, const Vector3&);" 
 1401D48A0 "void Vector3::Set(Vector3*, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
 14040B310 "bool Vector3::IsPerpendicular(Vector3*, const Vector3&, const VectorFloat&);" 
 14031C8C0 "const Vector3 Vector3::DivideFloat(Vector3*, const VectorFloat&);" 
 140401030 "void Vector3::GetSinCos(Vector3*, Vector3&, Vector3&);" 
 1403EFA50 "const Vector3 Vector3::GetAngleMod(Vector3*);" 
 14019CCF0 "Vector3 Vector3::Clone(const Vector3&);" 
 1403FBBB0 "const Vector3 Vector3::GetNormalized(Vector3*);" 
 1404579D0 "void Vector3::SetLengthExact(Vector3*, const VectorFloat&);" 
 1403D72A0 "const Vector3 Vector3::Cross(Vector3*, const Vector3&);" 
 140400A30 "const Vector3 Vector3::GetReciprocal(Vector3*);" 
 14040A8E0 "bool Vector3::LessEqualThan(Vector3*, const Vector3&);" 
 1404579A0 "void Vector3::SetLengthApprox(Vector3*, const VectorFloat&);" 
 1403D72F0 "const Vector3 Vector3::CrossYAxis(Vector3*);" 
 1403FA7B0 "const VectorFloat Vector3::GetLengthReciprocal(Vector3*);" 
 14048D6C0 "const Vector3 Vector3::YAxisCross(Vector3*);" 
 14031C720 "const Vector3 Vector3::Subtract(Vector3*, const Vector3&);" 
 1403F4BA0 "const VectorFloat Vector3::GetElement(Vector3*, int);" 
 140425C60 "void Vector3::NormalizeSafe(Vector3*, const VectorFloat&);" 
 1403FA870 "const VectorFloat Vector3::GetLengthSq(Vector3*);" 
 1403FA710 "const VectorFloat Vector3::GetLength(Vector3*);" 
 14045A850 "const Vector3 Vector3::Slerp(Vector3*, const Vector3&, const VectorFloat&);" 
 1403D4FF0 "const Vector3 Vector3::CreateOne();" 
 1403D72D0 "const Vector3 Vector3::CrossXAxis(Vector3*);" 
 1403D7310 "const Vector3 Vector3::CrossZAxis(Vector3*);" 
 14048D6A0 "const Vector3 Vector3::XAxisCross(Vector3*);" 
 14040C6D0 "bool Vector3::IsZero(Vector3*, const VectorFloat&);" 
 140408FA0 "bool Vector3::IsClose(Vector3*, const Vector3&, const VectorFloat&);" 
 14040A970 "bool Vector3::IsLessThan(Vector3*, const Vector3&);" 
 14040A500 "bool Vector3::IsGreaterThan(Vector3*, const Vector3&);" 
 1403FADF0 "const Vector3 Vector3::GetMin(Vector3*, const Vector3&);" 
 1403F24B0 "const Vector3 Vector3::GetCos(Vector3*);" 
 1403F1500 "const Vector3 Vector3::GetClamp(Vector3*, const Vector3&, const Vector3&);" 
 1403EEBE0 "const Vector3 Vector3::GetAbs(Vector3*);" 
 140371AD0 "void Vector3::BuildTangentBasis(Vector3*, Vector3&, Vector3&);" 
 1403FAAC0 "const Vector3 Vector3::GetMadd(Vector3*, const Vector3&, const Vector3&);" 
 1404147F0 "void Vector3::Madd(Vector3*, const Vector3&, const Vector3&);" 
 14042F840 "void Vector3::Project(Vector3*, const Vector3&);" 
 140400860 "Vector3 Vector3::GetProjected(Vector3*, const Vector3&);" 
 1404008F0 "Vector3 Vector3::GetProjectedOnNormal(Vector3*, const Vector3&);" 
 14040A210 "bool Vector3::IsFinite(Vector3*);" 
 1403CF640 "const Vector3 Vector3::CreateAxisX(const VectorFloat&);" 
m_properties:
 1403F11D0 "const VectorFloat Vector3::z::Getter(Vector3*);" 
 140459AB0 "void Vector3::z::Setter(Vector3*, const VectorFloat&);" 
 140400960 "const VectorFloat Vector3::x::Getter(Vector3*);" 
 140459A80 "void Vector3::x::Setter(Vector3*, const VectorFloat&);" 
 1403F5760 "const VectorFloat Vector3::y::Getter(Vector3*);" 
 140459AA0 "void Vector3::y::Setter(Vector3*, const VectorFloat&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Vector3* ScriptDataContext& >" C05C6107-A166-56F4-B930-DE2162E617F2), VT: 145420F98, V: 0x7FF752887FD0
 ("AZ::AttributeFunction<R(Args...)><void Vector3* >" 2B9EB326-D4D6-5265-89FF-84582A7CDA3D), VT: 145420FE0, V: 0x7FF7527BE7D0
 
[011] C: "GeometryCacheComponent"
T: B2974790-5A3B-4641-868F-6148C67830EE, S: 270
 Ctor: 1419A7E90, Dtor: 1401DF450, Alloc: 141BAAE90, Dealloc: 141C5E4E0, RTTI: 146175630
m_requestBuses:
 "GeometryCacheComponentRequestBus"
m_notificationBuses:
 "GeometryCacheComponentNotificationBus"
 
[012] C: "FogVolumeComponent"
T: C01B9E8F-C015-46AC-9065-79445CE1408A, S: 1A0
 Ctor: 1419A7E30, Dtor: 1401DF450, Alloc: 141BAAE00, Dealloc: 141C5E460, RTTI: 146175628
m_requestBuses:
 "FogVolumeComponentRequestBus"
 
[013] C: "AZStd::shared_ptr<const PolygonPrism>"
T: 2E879A16-9143-5862-A5B3-EDED931C60BC, S: 10
 Ctor: 1401DF090, Dtor: 1404AE330, Alloc: 141BABB50, Dealloc: 141C5EBE0, RTTI: 0
m_constructors:
 141999A00 "void AZStd::shared_ptr<const PolygonPrism>::Constructor(AZStd::shared_ptr<const PolygonPrism>*, const PolygonPrism*);" 
m_methods:
 14031C100 "const PolygonPrism* AZStd::shared_ptr<const PolygonPrism>::get(AZStd::shared_ptr<const PolygonPrism>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("bool" B2C7372D-7B99-50A2-B710-71649CECE315), VT: 145421B08, V: 0x1
 ("AZ::AttributeFunction<R(Args...)><void AZStd::shared_ptr<const PolygonPrism>* ScriptDataContext& >" 6F1F184F-F2D5-5D81-B78D-72C472D95B42), VT: 1455D5110, V: 0x7FF75405DFC0
 
[014] C: "PrimitiveColliderConfig"
T: 85AA27D6-E019-469F-8472-89862323DBF7, S: 30
 Ctor: 1419A8070, Dtor: 1401DF450, Alloc: 141BAB280, Dealloc: 141C5E6E0, RTTI: 146175610
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PrimitiveColliderConfig::SurfaceTypeName::Getter(PrimitiveColliderConfig*);" 
 141AAD7E0 "void PrimitiveColliderConfig::SurfaceTypeName::Setter(PrimitiveColliderConfig*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[015] C: "SphereShapeConfig"
T: 4AADFD75-48A7-4F31-8F30-FE4505F09E35, S: 10
 Ctor: 141999B00, Dtor: 1401DF450, Alloc: 141BAB700, Dealloc: 1406303C0, RTTI: 1461756A8
m_constructors:
 141999B00 "void SphereShapeConfig::Constructor(SphereShapeConfig*);" 
 141999B20 "void SphereShapeConfig::Constructor(SphereShapeConfig*, float);" 
m_properties:
 1401E7820 "float& SphereShapeConfig::Radius::Getter(SphereShapeConfig*);" 
 14028DC50 "void SphereShapeConfig::Radius::Setter(SphereShapeConfig*, const float&);" 
 
[016] C: "AnimationEvent"
T: 1D927664-8C19-4EA9-A59F-23A81EC486F2, S: 70
 Ctor: 1419A7C40, Dtor: 141011F30, Alloc: 141BAB820, Dealloc: 1406E7DF0, RTTI: 0
m_properties:
 1401AD7A0 "float& AnimationEvent::time::Getter(AnimationEvent*);" 
 1406413D0 "const char*& AnimationEvent::parameter::Getter(AnimationEvent*);" 
 1403F11A0 "const char*& AnimationEvent::name::Getter(AnimationEvent*);" 
 1401E7820 "const char*& AnimationEvent::animName::Getter(AnimationEvent*);" 
 140916660 "float& AnimationEvent::endTime::Getter(AnimationEvent*);" 
 1403F2E80 "const char*& AnimationEvent::boneName1::Getter(AnimationEvent*);" 
 140AF0A30 "const char*& AnimationEvent::boneName2::Getter(AnimationEvent*);" 
 1403F11C0 "Vector3& AnimationEvent::offset::Getter(AnimationEvent*);" 
 140D88940 "Vector3& AnimationEvent::direction::Getter(AnimationEvent*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[017] C: "StaticPhysicsConfig"
T: 2129576B-A548-4F3E-A2A1-87851BF48838, S: 10
 Ctor: 1419A8320, Dtor: 1401DF450, Alloc: 141BAB790, Dealloc: 1406303C0, RTTI: 146175620
m_properties:
 1401E7820 "bool& StaticPhysicsConfig::EnabledInitially::Getter(StaticPhysicsConfig*);" 
 141AAD800 "void StaticPhysicsConfig::EnabledInitially::Setter(StaticPhysicsConfig*, const bool&);" 
 
[018] C: "RigidPhysicsConfig"
T: 4D4211C2-4539-444F-A8AC-B0C8417AA579, S: 38
 Ctor: 1419A8110, Dtor: 1401DF450, Alloc: 141BAB430, Dealloc: 140630440, RTTI: 146175618
m_properties:
 1403F11B0 "bool& RigidPhysicsConfig::RecordCollisions::Getter(RigidPhysicsConfig*);" 
 141AAD870 "void RigidPhysicsConfig::RecordCollisions::Setter(RigidPhysicsConfig*, const bool&);" 
 1417B81E0 "float& RigidPhysicsConfig::SimulationMinEnergy::Getter(RigidPhysicsConfig*);" 
 1417BFF20 "void RigidPhysicsConfig::SimulationMinEnergy::Setter(RigidPhysicsConfig*, const float&);" 
 140780AF0 "float& RigidPhysicsConfig::SimulationDamping::Getter(RigidPhysicsConfig*);" 
 1417BFF10 "void RigidPhysicsConfig::SimulationDamping::Setter(RigidPhysicsConfig*, const float&);" 
 1417B81F0 "int& RigidPhysicsConfig::MaxRecordedCollisions::Getter(RigidPhysicsConfig*);" 
 1417BFF40 "void RigidPhysicsConfig::MaxRecordedCollisions::Setter(RigidPhysicsConfig*, const int&);" 
 1417B81D0 "float& RigidPhysicsConfig::BuoyancyResistance::Getter(RigidPhysicsConfig*);" 
 1417BFF00 "void RigidPhysicsConfig::BuoyancyResistance::Setter(RigidPhysicsConfig*, const float&);" 
 1403EE8B0 "float& RigidPhysicsConfig::BuoyancyDensity::Getter(RigidPhysicsConfig*);" 
 1417BFEF0 "void RigidPhysicsConfig::BuoyancyDensity::Setter(RigidPhysicsConfig*, const float&);" 
 140782B00 "float& RigidPhysicsConfig::BuoyancyDamping::Getter(RigidPhysicsConfig*);" 
 1417BFEE0 "void RigidPhysicsConfig::BuoyancyDamping::Setter(RigidPhysicsConfig*, const float&);" 
 140641330 "int RigidPhysicsConfig::SpecifyMassOrDensity::Getter(RigidPhysicsConfig*);" 
 1414D2A60 "void RigidPhysicsConfig::SpecifyMassOrDensity::Setter(RigidPhysicsConfig*, const int&);" 
 140190B20 "int RigidPhysicsConfig::MassOrDensity_Density::Getter();" 
 1417B81C0 "float& RigidPhysicsConfig::Density::Getter(RigidPhysicsConfig*);" 
 1417BFEC0 "void RigidPhysicsConfig::Density::Setter(RigidPhysicsConfig*, const float&);" 
 1406413D0 "bool& RigidPhysicsConfig::AtRestInitially::Getter(RigidPhysicsConfig*);" 
 141AAD820 "void RigidPhysicsConfig::AtRestInitially::Setter(RigidPhysicsConfig*, const bool&);" 
 141A5CE60 "bool& RigidPhysicsConfig::InteractsWithTriggers::Getter(RigidPhysicsConfig*);" 
 141AAD840 "void RigidPhysicsConfig::InteractsWithTriggers::Setter(RigidPhysicsConfig*, const bool&);" 
 14018FB20 "int RigidPhysicsConfig::MassOrDensity_Mass::Getter();" 
 1401E7820 "bool& RigidPhysicsConfig::EnabledInitially::Getter(RigidPhysicsConfig*);" 
 141AAD800 "void RigidPhysicsConfig::EnabledInitially::Setter(RigidPhysicsConfig*, const bool&);" 
 1403F11A0 "float& RigidPhysicsConfig::Mass::Getter(RigidPhysicsConfig*);" 
 1417BFEB0 "void RigidPhysicsConfig::Mass::Setter(RigidPhysicsConfig*, const float&);" 
 141A5CE50 "bool& RigidPhysicsConfig::EnableCollisionResponse::Getter(RigidPhysicsConfig*);" 
 141AAD830 "void RigidPhysicsConfig::EnableCollisionResponse::Setter(RigidPhysicsConfig*, const bool&);" 
 
[019] C: "RayCastResult"
T: 9A32A294-0BC5-4931-B594-9EAAF95A6B78, S: D0
 Ctor: 1419A80D0, Dtor: 1419A88E0, Alloc: 141BAB3A0, Dealloc: 141C5E7E0, RTTI: 0
m_methods:
 141946F30 "int RayCastResult::ScriptLength(RayCastResult*);" 
 141C8C0A0 "const RayCastHit* RayCastResult::ScriptIndexRead(RayCastResult*, AZ::u64);" 
 141C96B00 "AZ::u64 RayCastResult::GetPiercingHitCount(RayCastResult*);" 
 141C8C0A0 "const RayCastHit* RayCastResult::GetHit(RayCastResult*, AZ::u64);" 
 141946F30 "AZ::u64 RayCastResult::GetHitCount(RayCastResult*);" 
 141C84B60 "const RayCastHit* RayCastResult::GetBlockingHit(RayCastResult*);" 
 141C96AA0 "const RayCastHit* RayCastResult::GetPiercingHit(RayCastResult*, AZ::u64);" 
 141C9CD80 "bool RayCastResult::HasBlockingHit(RayCastResult*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[020] C: "RayCastHit"
T: 3D8FA68C-A145-44B4-BA18-F3405D83A9DF, S: 40
 Ctor: 1419A7D60, Dtor: 140190D00, Alloc: 141BAAA10, Dealloc: 141C5E260, RTTI: 0
m_methods:
 141C9CD80 "bool RayCastHit::IsValid(RayCastHit*);" 
m_properties:
 1401AD7A0 "float& RayCastHit::distance::Getter(RayCastHit*);" 
 1403F11A0 "Vector3& RayCastHit::position::Getter(RayCastHit*);" 
 1403EE8B0 "Vector3& RayCastHit::normal::Getter(RayCastHit*);" 
 1403F11B0 "EntityId& RayCastHit::entityId::Getter(RayCastHit*);" 
 1403F2E90 "short& RayCastHit::surfaceTypeIndex::Getter(RayCastHit*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[021] C: "SkinnedMeshComponent"
T: C99EB110-CA74-4D95-83F0-2FCDD1FF418B, S: 540
 Ctor: 1419A8220, Dtor: 1401DF450, Alloc: 141BAB5E0, Dealloc: 141C5E960, RTTI: 146175658
m_requestBuses:
 "MeshComponentRequestBus"
 
[022] C: "AZStd::array<int, 2>"
T: 39287880-2916-5225-AF28-DE74640C5477, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 141BAB940, Dealloc: 141C5EAE0, RTTI: 0
m_methods:
 141D470F0 "int& AZStd::array<int, 2>::at(AZStd::array<int, 2>*, AZ::u64);" 
 14019CEA0 "int AZStd::array<int, 2>::size(AZStd::array<int, 2>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[023] C: "MeshComponent"
T: 2F4BAD46-C857-4DCB-A454-C412DE67852A, S: 500
 Ctor: 1419A7F00, Dtor: 1401DF450, Alloc: 141BAB0D0, Dealloc: 141C5E5E0, RTTI: 146175640
m_requestBuses:
 "MeshComponentRequestBus"
 
[024] C: "AxisType"
T: 86817913-7D0C-4883-8EDC-2B0DE643392B, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141BAAB30, Dealloc: 141C5E360, RTTI: 0
m_properties:
 14019CF10 "unsigned int AxisType::YNegative::Getter();" 
 14019CEA0 "unsigned int AxisType::YPositive::Getter();" 
 14018FB20 "unsigned int AxisType::XPositive::Getter();" 
 140190B20 "unsigned int AxisType::XNegative::Getter();" 
 14019D060 "unsigned int AxisType::ZPositive::Getter();" 
 14019CF00 "unsigned int AxisType::ZNegative::Getter();" 
 
[025] C: "LightComponent"
T: 6B9AB512-CA8A-4D2B-B570-DF128EA7CE6A, S: 230
 Ctor: 1419A7ED0, Dtor: 1401DF450, Alloc: 141BAAF20, Dealloc: 141C5E560, RTTI: 146175638
m_requestBuses:
 "LightComponentRequestBus"
 
[026] C: "RainOptions"
T: 44EEA846-4252-405F-BB66-0B8696DF5D36, S: 30
 Ctor: 14179BB60, Dtor: 140190D00, Alloc: 141806910, Dealloc: 141835020, RTTI: 0
m_properties:
 140780AF0 "float& RainOptions::PuddlesRippleAmount::Getter(RainOptions*);" 
 1417BFF10 "void RainOptions::PuddlesRippleAmount::Setter(RainOptions*, const float&);" 
 1403EE8B0 "float& RainOptions::PuddlesAmount::Getter(RainOptions*);" 
 1417BFEF0 "void RainOptions::PuddlesAmount::Setter(RainOptions*, const float&);" 
 1417B81D0 "float& RainOptions::PuddlesMaskAmount::Getter(RainOptions*);" 
 1417BFF00 "void RainOptions::PuddlesMaskAmount::Setter(RainOptions*, const float&);" 
 1417B81E0 "float& RainOptions::SplashesAmount::Getter(RainOptions*);" 
 1417BFF20 "void RainOptions::SplashesAmount::Setter(RainOptions*, const float&);" 
 1401E7820 "float& RainOptions::OuterRadius::Getter(RainOptions*);" 
 14028DC50 "void RainOptions::OuterRadius::Setter(RainOptions*, const float&);" 
 140916660 "float& RainOptions::InnerRadius::Getter(RainOptions*);" 
 1414D2A50 "void RainOptions::InnerRadius::Setter(RainOptions*, const float&);" 
 140782520 "float& RainOptions::Amount::Getter(RainOptions*);" 
 1414D2A60 "void RainOptions::Amount::Setter(RainOptions*, const float&);" 
 1417B81C0 "float& RainOptions::RainDropsAmount::Getter(RainOptions*);" 
 1417BFEC0 "void RainOptions::RainDropsAmount::Setter(RainOptions*, const float&);" 
 1401AD7A0 "bool& RainOptions::IgnoreVisAreas::Getter(RainOptions*);" 
 140752130 "void RainOptions::IgnoreVisAreas::Setter(RainOptions*, const bool&);" 
 1417B81B0 "bool& RainOptions::DisableOcclusion::Getter(RainOptions*);" 
 1417BFEA0 "void RainOptions::DisableOcclusion::Setter(RainOptions*, const bool&);" 
 1406413D0 "float& RainOptions::RainDropsSpeed::Getter(RainOptions*);" 
 1417BFED0 "void RainOptions::RainDropsSpeed::Setter(RainOptions*, const float&);" 
 1403F11A0 "float& RainOptions::DiffuseDarkening::Getter(RainOptions*);" 
 1417BFEB0 "void RainOptions::DiffuseDarkening::Setter(RainOptions*, const float&);" 
 140782B00 "float& RainOptions::RainDropsLighting::Getter(RainOptions*);" 
 1417BFEE0 "void RainOptions::RainDropsLighting::Setter(RainOptions*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[027] C: "WaterVolumeComponent"
T: D1576A29-B1B5-4FE2-9D9E-3A7781561C49, S: 210
 Ctor: 14179BD90, Dtor: 1401DF450, Alloc: 1418067F0, Dealloc: 141834EA0, RTTI: 14616E2C0
m_requestBuses:
 "WaterVolumeComponentRequestBus"
 
[028] C: "WaterOceanComponent"
T: 517760D2-237E-4582-9CEF-A91EFF641441, S: 160
 Ctor: 14179BD40, Dtor: 1401DF450, Alloc: 141806760, Dealloc: 141834E20, RTTI: 14616E288
m_requestBuses:
 "OceanEnvironmentRequestBus"
 
[029] C: "WaterOceanComponentData"
T: 2C999C70-328C-44B1-A499-4A8BC9EAC159, S: 120
 Ctor: 14179BAD0, Dtor: 14179BF50, Alloc: 141806880, Dealloc: 141834F20, RTTI: 14616E280
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
m_requestBuses:
 "OceanEnvironmentRequestBus"
 
[030] C: "SpawnerConfig"
T: D4D68E8E-9031-448F-9D56-B5575CF4833C, S: 90
 Ctor: 1419A8260, Dtor: 1401DF450, Alloc: 141BAB670, Dealloc: 140630540, RTTI: 146175668
m_properties:
 141692540 "bool& SpawnerConfig::spawnOnActivate::Getter(SpawnerConfig*);" 
 141AAD9A0 "void SpawnerConfig::spawnOnActivate::Setter(SpawnerConfig*, const bool&);" 
 141A5CEC0 "bool& SpawnerConfig::destroyOnDeactivate::Getter(SpawnerConfig*);" 
 141AAD9B0 "void SpawnerConfig::destroyOnDeactivate::Setter(SpawnerConfig*, const bool&);" 
 
[031] C: "RiverComponent"
T: C4091244-A779-4438-A0B7-406AFEE41D89, S: 280
 Ctor: 1419A8180, Dtor: 1401DF450, Alloc: 141BAB4C0, Dealloc: 141C5E860, RTTI: 146175888
m_requestBuses:
 "RiverRequestBus"
 
[032] C: "SandComponent"
T: 926D7796-5115-4EB9-A9A3-F1165585BC4A, S: 140
 Ctor: 14179BBC0, Dtor: 1401DF450, Alloc: 1418065B0, Dealloc: 141834D20, RTTI: 14616E270
m_requestBuses:
 "SandComponentRequestBus"
 
[033] C: "SnowOptions"
T: 6157B3D7-5A16-4A12-B315-582248A27EED, S: 60
 Ctor: 14179BCC0, Dtor: 14179BFA0, Alloc: 141806A30, Dealloc: 141835120, RTTI: 0
m_properties:
 1417B81F0 "float& SnowOptions::SnowFallTurbulenceFreq::Getter(SnowOptions*);" 
 1417BFF40 "void SnowOptions::SnowFallTurbulenceFreq::Setter(SnowOptions*, const float&);" 
 1403F11B0 "float& SnowOptions::SnowFallTurbulence::Getter(SnowOptions*);" 
 1417BFF30 "void SnowOptions::SnowFallTurbulence::Setter(SnowOptions*, const float&);" 
 1417B81E0 "float& SnowOptions::SnowFallWindScale::Getter(SnowOptions*);" 
 1417BFF20 "void SnowOptions::SnowFallWindScale::Setter(SnowOptions*, const float&);" 
 140780AF0 "float& SnowOptions::SnowFallGravityScale::Getter(SnowOptions*);" 
 1417BFF10 "void SnowOptions::SnowFallGravityScale::Setter(SnowOptions*, const float&);" 
 1403F11A0 "float& SnowOptions::SurfaceFreezing::Getter(SnowOptions*);" 
 1417BFEB0 "void SnowOptions::SurfaceFreezing::Setter(SnowOptions*, const float&);" 
 1417B81C0 "float& SnowOptions::SnowBrightness::Getter(SnowOptions*);" 
 1417BFEC0 "void SnowOptions::SnowBrightness::Setter(SnowOptions*, const float&);" 
 140782520 "float& SnowOptions::FrostAmount::Getter(SnowOptions*);" 
 1414D2A60 "void SnowOptions::FrostAmount::Setter(SnowOptions*, const float&);" 
 140916660 "float& SnowOptions::Radius::Getter(SnowOptions*);" 
 1414D2A50 "void SnowOptions::Radius::Setter(SnowOptions*, const float&);" 
 1401E7820 "float& SnowOptions::SnowAmount::Getter(SnowOptions*);" 
 14028DC50 "void SnowOptions::SnowAmount::Setter(SnowOptions*, const float&);" 
 140782B00 "unsigned int& SnowOptions::SnowFlakeCount::Getter(SnowOptions*);" 
 1417BFEE0 "void SnowOptions::SnowFlakeCount::Setter(SnowOptions*, const unsigned int&);" 
 1403EE8B0 "float& SnowOptions::SnowFlakeSize::Getter(SnowOptions*);" 
 1417BFEF0 "void SnowOptions::SnowFlakeSize::Setter(SnowOptions*, const float&);" 
 1406413D0 "float& SnowOptions::FrostBrightness::Getter(SnowOptions*);" 
 1417BFED0 "void SnowOptions::FrostBrightness::Setter(SnowOptions*, const float&);" 
 1417B81D0 "float& SnowOptions::SnowFallBrightness::Getter(SnowOptions*);" 
 1417BFF00 "void SnowOptions::SnowFallBrightness::Setter(SnowOptions*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[034] C: "Shadows"
T: E18D6F42-E39C-4769-9286-0941611B7010, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141344E80, Dealloc: 141356C50, RTTI: 0
m_methods:
 14136B820 "void Shadows::RecomputeStaticShadows(const Aabb&, float);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[035] C: "CharacterSupportInfo"
T: 824E1E63-89EB-49FD-8D85-64AA899A61CA, S: 50
 Ctor: 1419A7C80, Dtor: 140190D00, Alloc: 141BAB8B0, Dealloc: 141C5E9E0, RTTI: 0
m_methods:
 141946FC0 "bool CharacterSupportInfo::IsOnGround(RockNRoll::CharacterSupportInfo*);" 
 140923030 "int CharacterSupportInfo::GetSupportState(RockNRoll::CharacterSupportInfo*);" 
m_properties:
 140190B20 "int CharacterSupportInfo::Unsupported::Getter();" 
 14019CEA0 "int CharacterSupportInfo::Sliding::Getter();" 
 14018FB20 "int CharacterSupportInfo::Supported::Getter();" 
 1403F11A0 "Vector3& CharacterSupportInfo::normal::Getter(RockNRoll::CharacterSupportInfo*);" 
 140454D90 "void CharacterSupportInfo::normal::Setter(RockNRoll::CharacterSupportInfo*, const Vector3&);" 
 1403EE8B0 "Vector3& CharacterSupportInfo::velocity::Getter(RockNRoll::CharacterSupportInfo*);" 
 141AAD850 "void CharacterSupportInfo::velocity::Setter(RockNRoll::CharacterSupportInfo*, const Vector3&);" 
 1403F11B0 "float& CharacterSupportInfo::distance::Getter(RockNRoll::CharacterSupportInfo*);" 
 1417BFF30 "void CharacterSupportInfo::distance::Setter(RockNRoll::CharacterSupportInfo*, const float&);" 
 
[036] C: "UiTooltipDisplayComponent"
T: 18CEE6A7-3CBC-4638-9F4D-87E8D53DDF1A, S: 110
 Ctor: 1413CB0B0, Dtor: 1401DF450, Alloc: 1415912E0, Dealloc: 141665CF0, RTTI: 146149100
m_requestBuses:
 "UiTooltipDisplayBus"
 
[037] C: "Collision"
T: 33756BD4-24D4-4DAE-A849-537114D52F7D, S: 70
 Ctor: 1419A7CC0, Dtor: 140190D00, Alloc: 141BAA8F0, Dealloc: 141C5E160, RTTI: 0
m_properties:
 140D88940 "AZStd::array<float, 2>& Collision::masses::Getter(Collision*);" 
 1406414D0 "AZStd::array<int, 2>& Collision::surfaces::Getter(Collision*);" 
 1401AD7A0 "EntityId& Collision::entity::Getter(Collision*);" 
 1401DF2C0 "void Collision::entity::Setter(Collision*, const EntityId&);" 
 1403F11A0 "Vector3& Collision::position::Getter(Collision*);" 
 140454D90 "void Collision::position::Setter(Collision*, const Vector3&);" 
 1403EE8B0 "Vector3& Collision::normal::Getter(Collision*);" 
 141AAD850 "void Collision::normal::Setter(Collision*, const Vector3&);" 
 1403F2E80 "AZStd::array<Vector3, 2>& Collision::velocities::Getter(Collision*);" 
 1403F11B0 "float& Collision::impulse::Getter(Collision*);" 
 1417BFF30 "void Collision::impulse::Setter(Collision*, const float&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[038] C: "UiLayoutRowComponent"
T: 7B2820C4-7FC7-4F02-B777-6727EB4BAC13, S: 100
 Ctor: 1413CAFD0, Dtor: 1401DF450, Alloc: 141590EF0, Dealloc: 141665970, RTTI: 1461490C8
m_requestBuses:
 "UiLayoutRowBus"
 
[039] C: "AZStd::array<float, 2>"
T: 9C757F83-F7F9-5F27-BDA3-1D149D83AB71, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 141BAB9F0, Dealloc: 141C5EAE0, RTTI: 0
m_methods:
 141D470F0 "float& AZStd::array<float, 2>::at(AZStd::array<float, 2>*, AZ::u64);" 
 14019CEA0 "int AZStd::array<float, 2>::size(AZStd::array<float, 2>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[040] C: "RandomTimedSpawnerComponent"
T: 8EE9EC2C-1CC9-4F88-968F-CFD20C380694, S: 1448
 Ctor: 1419A80B0, Dtor: 1401DF450, Alloc: 141BAB310, Dealloc: 141C5E760, RTTI: 146175660
m_requestBuses:
 "RandomTimedSpawnerRequestBus"
 
[041] C: "UiLayoutColumnComponent"
T: 4BC2E786-360B-4426-8D9C-9B254C5EA21F, S: 100
 Ctor: 1413CAFB0, Dtor: 1401DF450, Alloc: 141590E60, Dealloc: 141665970, RTTI: 1461490C0
m_requestBuses:
 "UiLayoutColumnBus"
 
[042] C: "UiDesaturatorComponent"
T: 3C909D7B-EC4E-4474-85E2-E923D39BA42D, S: B8
 Ctor: 1413CAE90, Dtor: 1401DF450, Alloc: 141590B90, Dealloc: 141665770, RTTI: 146149068
m_requestBuses:
 "UiDesaturatorBus"
 
[043] C: "UiFaderComponent"
T: CD01FF77-2249-4ED8-BFFB-33A66A47E17C, S: 130
 Ctor: 1413CAEE0, Dtor: 1401DF450, Alloc: 141590C20, Dealloc: 1416657F0, RTTI: 146149078
m_requestBuses:
 "UiFaderBus"
 
[044] C: "UiTextComponent"
T: 5B3FB2A7-5DC4-4033-A970-001CEC85B6C4, S: 470
 Ctor: 1413CB070, Dtor: 1401DF450, Alloc: 1415911C0, Dealloc: 141665BF0, RTTI: 1461490F0
m_requestBuses:
 "UiTextBus"
 
[045] C: "GameplayNotificationId"
T: C5225D36-7068-412D-A46E-DDF79CA1D7FF, S: 20
 Ctor: 1419A7E70, Dtor: 140190D00, Alloc: 141BABD60, Dealloc: 1406307C0, RTTI: 0
m_constructors:
 141999A80 "void GameplayNotificationId::Constructor(GameplayNotificationId*, EntityId, Crc32);" 
m_methods:
 141B67190 "bool GameplayNotificationId::Equal(GameplayNotificationId*, const GameplayNotificationId&);" 
 141D37650 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GameplayNotificationId::ToString(GameplayNotificationId*);" 
 141C358F0 "GameplayNotificationId GameplayNotificationId::Clone(GameplayNotificationId*);" 
m_properties:
 1401AD7A0 "EntityId& GameplayNotificationId::channel::Getter(GameplayNotificationId*);" 
 1401DF2C0 "void GameplayNotificationId::channel::Setter(GameplayNotificationId*, const EntityId&);" 
 1403F11A0 "AZ::Uuid& GameplayNotificationId::payloadTypeId::Getter(GameplayNotificationId*);" 
 141AAD810 "void GameplayNotificationId::payloadTypeId::Setter(GameplayNotificationId*, const AZ::Uuid&);" 
 1401E7820 "Crc32& GameplayNotificationId::actionNameCrc::Getter(GameplayNotificationId*);" 
 14028DC50 "void GameplayNotificationId::actionNameCrc::Setter(GameplayNotificationId*, const Crc32&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void GameplayNotificationId* ScriptDataContext& >" 5E798CD2-F0F9-59B0-B9BF-55FBFA9911DB), VT: 1455BD000, V: 0x7FF75407DF20
 
[046] C: "UiTransform2dComponent"
T: 2751A5A5-3291-4A4D-9FC0-9CB0EB8D1DE6, S: 190
 Ctor: 1413CB0D0, Dtor: 1401DF450, Alloc: 141591370, Dealloc: 141665D70, RTTI: 146149108
m_requestBuses:
 "UiTransformBus"
 "UiTransform2dBus"
 
[047] C: "UiOffsets"
T: F681BA9D-245C-4630-B20E-05DD752FAD57, S: 10
 Ctor: 1413BAD40, Dtor: 140190D00, Alloc: 141591490, Dealloc: 141665DF0, RTTI: 0
m_constructors:
 1413BAD40 "void UiOffsets::Constructor(Offsets*);" 
 1413BAD20 "void UiOffsets::Constructor(Offsets*, float, float, float, float);" 
m_properties:
 140782520 "float& UiOffsets::bottom::Getter(Offsets*);" 
 1414D2A60 "void UiOffsets::bottom::Setter(Offsets*, const float&);" 
 1401AD7A0 "float& UiOffsets::left::Getter(Offsets*);" 
 1401DF3E0 "void UiOffsets::left::Setter(Offsets*, const float&);" 
 140916660 "float& UiOffsets::top::Getter(Offsets*);" 
 1414D2A50 "void UiOffsets::top::Setter(Offsets*, const float&);" 
 1401E7820 "float& UiOffsets::right::Getter(Offsets*);" 
 14028DC50 "void UiOffsets::right::Setter(Offsets*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Offsets* ScriptDataContext& >" BDD3540F-544C-5B38-A69A-85D4CB4BECD8), VT: 145559C70, V: 0x7FF753B24970
 
[048] C: "UiAnchors"
T: 65D4346C-FB16-4CB0-9BDC-1185B122C4A9, S: 10
 Ctor: 1413BAD00, Dtor: 140190D00, Alloc: 141591400, Dealloc: 141665DF0, RTTI: 0
m_constructors:
 1413BAD00 "void UiAnchors::Constructor(Anchors*);" 
 1413BAD20 "void UiAnchors::Constructor(Anchors*, float, float, float, float);" 
m_properties:
 140782520 "float& UiAnchors::bottom::Getter(Anchors*);" 
 1414D2A60 "void UiAnchors::bottom::Setter(Anchors*, const float&);" 
 1401AD7A0 "float& UiAnchors::left::Getter(Anchors*);" 
 1401DF3E0 "void UiAnchors::left::Setter(Anchors*, const float&);" 
 140916660 "float& UiAnchors::top::Getter(Anchors*);" 
 1414D2A50 "void UiAnchors::top::Setter(Anchors*, const float&);" 
 1401E7820 "float& UiAnchors::right::Getter(Anchors*);" 
 14028DC50 "void UiAnchors::right::Setter(Anchors*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Anchors* ScriptDataContext& >" 68298DE6-4362-5E19-83B0-B06424AD4414), VT: 145559C28, V: 0x7FF753B247A0
 
[049] C: "AZStd::vector<CraftingFeeDiscountEntry, allocator>"
T: D2039806-B53B-52F1-8F6B-FC758D718319, S: 20
 Ctor: 1401DF120, Dtor: 142845160, Alloc: 142879A30, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428A9700 "void AZStd::vector<CraftingFeeDiscountEntry, allocator>::pop_back(AZStd::vector<CraftingFeeDiscountEntry, allocator>*);" 
 1428A7A30 "void AZStd::vector<CraftingFeeDiscountEntry, allocator>::clear(AZStd::vector<CraftingFeeDiscountEntry, allocator>*);" 
 1428384F0 "int AZStd::vector<CraftingFeeDiscountEntry, allocator>::size(AZStd::vector<CraftingFeeDiscountEntry, allocator>*);" 
 1428A7A10 "CraftingFeeDiscountEntry& AZStd::vector<CraftingFeeDiscountEntry, allocator>::at(AZStd::vector<CraftingFeeDiscountEntry, allocator>*, AZ::u64);" 
 1428955B0 "void AZStd::vector<CraftingFeeDiscountEntry, allocator>::insert(AZStd::vector<CraftingFeeDiscountEntry, allocator>*, int, CraftingFeeDiscountEntry&);" 
 1428A9A50 "void AZStd::vector<CraftingFeeDiscountEntry, allocator>::push_back(AZStd::vector<CraftingFeeDiscountEntry, allocator>*, const CraftingFeeDiscountEntry&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[050] C: "TotalRepairCost"
T: 5217E101-42EC-4E9A-A491-648681A2AC0D, S: 30
 Ctor: 1428C8370, Dtor: 1428C83D0, Alloc: 1428E0070, Dealloc: 141665EF0, RTTI: 0
m_properties:
 140780AF0 "bool& TotalRepairCost::hasJobs::Getter(TotalRepairCost*);" 
 1428D03C0 "void TotalRepairCost::hasJobs::Setter(TotalRepairCost*, const bool&);" 
 1401AD7A0 "AZStd::vector<unsigned short, allocator>& TotalRepairCost::repairKits::Getter(TotalRepairCost*);" 
 1428D03B0 "void TotalRepairCost::repairKits::Setter(TotalRepairCost*, const AZStd::vector<unsigned short, allocator>&);" 
 1417B81D0 "unsigned int& TotalRepairCost::coin::Getter(TotalRepairCost*);" 
 1417BFF00 "void TotalRepairCost::coin::Setter(TotalRepairCost*, const unsigned int&);" 
 1403EE8B0 "unsigned int& TotalRepairCost::repairParts::Getter(TotalRepairCost*);" 
 1417BFEF0 "void TotalRepairCost::repairParts::Setter(TotalRepairCost*, const unsigned int&);" 
 
[051] C: "StaticNPCData"
T: 02AE4711-962A-4A35-9B40-D684AE4401C7, S: 130
 Ctor: 142F2DFD0, Dtor: 142F2E090, Alloc: 142F3B940, Dealloc: 142F3F640, RTTI: 0
m_methods:
 142F114B0 "unsigned char StaticNPCData::GetNpcFactionAlignment(Crc32);" 
 142F429D0 "bool StaticNPCData::IsValid(StaticNPCData*);" 
m_properties:
 1401AD7A0 "Crc32& StaticNPCData::id::Getter(StaticNPCData*);" 
 1401DF3E0 "void StaticNPCData::id::Setter(StaticNPCData*, const Crc32&);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticNPCData::genericName::Getter(StaticNPCData*);" 
 142F33410 "void StaticNPCData::genericName::Setter(StaticNPCData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticNPCData::title::Getter(StaticNPCData*);" 
 141716790 "void StaticNPCData::title::Setter(StaticNPCData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[052] C: "CustomizableCharacterComponent"
T: 7B1E1BFF-1B7F-4B38-A864-2AAACAE92ACC, S: 430
 Ctor: 14265AF60, Dtor: 1401DF450, Alloc: 142675990, Dealloc: 14267FB10, RTTI: 146189C48
m_requestBuses:
 "CustomizableCharacterRequestBus"
 
[053] C: "DisplayGenericTextParams"
T: 633C8BC1-618A-418F-BBC6-4203EF201462, S: 70
 Ctor: 1437F9F60, Dtor: 1437FA070, Alloc: 14381E750, Dealloc: 1406E7DF0, RTTI: 0
m_properties:
 14019D150 "int DisplayGenericTextParams::eventType::Getter(DisplayGenericTextParams*);" 
 14081A4F0 "void DisplayGenericTextParams::eventType::Setter(DisplayGenericTextParams*, int);" 
 1406413D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& DisplayGenericTextParams::primaryText::Getter(DisplayGenericTextParams*);" 
 14171BC80 "void DisplayGenericTextParams::primaryText::Setter(DisplayGenericTextParams*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& DisplayGenericTextParams::secondaryText::Getter(DisplayGenericTextParams*);" 
 14380DF20 "void DisplayGenericTextParams::secondaryText::Setter(DisplayGenericTextParams*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "Vector3& DisplayGenericTextParams::worldPosition::Getter(DisplayGenericTextParams*);" 
 1401DF220 "void DisplayGenericTextParams::worldPosition::Setter(DisplayGenericTextParams*, const Vector3&);" 
 
[054] C: "ChatMessageComponent"
T: F3C0A90E-6E8C-437B-833C-9B5A77A4B085, S: 180
 Ctor: 1437C3BE0, Dtor: 1401DF450, Alloc: 1437CC930, Dealloc: 1437CEB90, RTTI: 1461A5D28
m_methods:
 1437D5930 "void ChatMessageComponent::SetupChatElement(ChatMessageComponent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool, Color);" 
 
[055] C: "PendingMergeEvent"
T: 545F546A-D079-432F-8D1A-86E04ACD24D9, S: 78
 Ctor: 142004930, Dtor: 142004990, Alloc: 1420077F0, Dealloc: 1420080A0, RTTI: 0
m_properties:
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PendingMergeEvent::sourceWorldId::Getter(PendingMergeEvent*);" 
 1403188A0 "void PendingMergeEvent::sourceWorldId::Setter(PendingMergeEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PendingMergeEvent::mergeTime::Getter(PendingMergeEvent*);" 
 142004F50 "void PendingMergeEvent::mergeTime::Setter(PendingMergeEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PendingMergeEvent::destinationWorldId::Getter(PendingMergeEvent*);" 
 142004F30 "void PendingMergeEvent::destinationWorldId::Setter(PendingMergeEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[056] C: "WaterFlagsQueryResult"
T: 2CDBA47A-C464-449D-B75F-36BEFB57001D, S: 4
 Ctor: 143B9B500, Dtor: 140190D00, Alloc: 143BA9BD0, Dealloc: 143BAC440, RTTI: 0
m_methods:
 143BAE580 "bool WaterFlagsQueryResult::GetSingleWaterFlag(WaterFlagsQueryResult*, int);" 
 143BAF9A0 "int WaterFlagsQueryResult::GetWaterType(WaterFlagsQueryResult*);" 
m_properties:
 14018FB20 "int WaterFlagsQueryResult::NoWaterType::Getter(const WaterFlagsQueryResult*);" 
 
[057] C: "ClosestWaterQueryResult"
T: F4D18F45-5883-4812-AC9E-CCA1ECA95320, S: 30
 Ctor: 143B9B4D0, Dtor: 140190D00, Alloc: 143BA9B40, Dealloc: 142F94D60, RTTI: 1461ACA20
m_properties:
 1403F11A0 "float& ClosestWaterQueryResult::closestDistance::Getter(ClosestWaterQueryResult*);" 
 1417BFEB0 "void ClosestWaterQueryResult::closestDistance::Setter(ClosestWaterQueryResult*, const float&);" 
 1403EE8B0 "Vector3& ClosestWaterQueryResult::closestPosition::Getter(ClosestWaterQueryResult*);" 
 141AAD850 "void ClosestWaterQueryResult::closestPosition::Setter(ClosestWaterQueryResult*, const Vector3&);" 
 
[058] C: "AZStd::vector<ChatMessageTypeToState, allocator>"
T: 5AE1AB16-6D2D-50CF-9958-3F9B34137029, S: 20
 Ctor: 1401DF120, Dtor: 1437FA0D0, Alloc: 143B339F0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<ChatMessageTypeToState, allocator>::pop_back(AZStd::vector<ChatMessageTypeToState, allocator>*);" 
 14069EE90 "void AZStd::vector<ChatMessageTypeToState, allocator>::clear(AZStd::vector<ChatMessageTypeToState, allocator>*);" 
 14045A440 "int AZStd::vector<ChatMessageTypeToState, allocator>::size(AZStd::vector<ChatMessageTypeToState, allocator>*);" 
 14031C0C0 "ChatMessageTypeToState& AZStd::vector<ChatMessageTypeToState, allocator>::at(AZStd::vector<ChatMessageTypeToState, allocator>*, AZ::u64);" 
 143B437C0 "void AZStd::vector<ChatMessageTypeToState, allocator>::insert(AZStd::vector<ChatMessageTypeToState, allocator>*, int, ChatMessageTypeToState&);" 
 143B60840 "void AZStd::vector<ChatMessageTypeToState, allocator>::push_back(AZStd::vector<ChatMessageTypeToState, allocator>*, const ChatMessageTypeToState&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[059] C: "InGameSurveyResponse"
T: D3F9CEAC-0837-42EE-AA06-CE36F0B82EF4, S: 28
 Ctor: 143B15770, Dtor: 1401DF450, Alloc: 143B338D0, Dealloc: 143B3A670, RTTI: 1461ABB40
m_properties:
 1403EE8B0 "unsigned int& InGameSurveyResponse::threshold::Getter(InGameSurveyResponse*);" 
 1401E7820 "bool& InGameSurveyResponse::showSurvey::Getter(InGameSurveyResponse*);" 
 1403F11A0 "Duration& InGameSurveyResponse::playerAge::Getter(InGameSurveyResponse*);" 
 
[060] C: "ChatMessageTypeToState"
T: 50D25E3B-E36A-480A-ACF0-DFBA5389A445, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 143B33960, Dealloc: 141C5EAE0, RTTI: 0
m_properties:
 143B093F0 "int ChatMessageTypeToState::messageState::Getter(const ChatMessageTypeToState*);" 
 143B09400 "void ChatMessageTypeToState::messageState::Setter(ChatMessageTypeToState*, int);" 
 140923030 "int ChatMessageTypeToState::messageType::Getter(const ChatMessageTypeToState*);" 
 143B09410 "void ChatMessageTypeToState::messageType::Setter(ChatMessageTypeToState*, int);" 
 
[061] C: "AZStd::vector<MarketingTileData, allocator>"
T: A411D5BC-C748-5187-BAC9-DB9321A00FEF, S: 20
 Ctor: 1401DF120, Dtor: 1429F4730, Alloc: 142A17C50, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142A32640 "void AZStd::vector<MarketingTileData, allocator>::pop_back(AZStd::vector<MarketingTileData, allocator>*);" 
 142A30EC0 "void AZStd::vector<MarketingTileData, allocator>::clear(AZStd::vector<MarketingTileData, allocator>*);" 
 1429E8E00 "int AZStd::vector<MarketingTileData, allocator>::size(AZStd::vector<MarketingTileData, allocator>*);" 
 142A30E90 "MarketingTileData& AZStd::vector<MarketingTileData, allocator>::at(AZStd::vector<MarketingTileData, allocator>*, AZ::u64);" 
 142A21A50 "void AZStd::vector<MarketingTileData, allocator>::insert(AZStd::vector<MarketingTileData, allocator>*, int, MarketingTileData&);" 
 142A32870 "void AZStd::vector<MarketingTileData, allocator>::push_back(AZStd::vector<MarketingTileData, allocator>*, const MarketingTileData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[062] C: "AZStd::vector<SetData, allocator>"
T: CD990699-7F35-52C5-BEFC-8995977BC87B, S: 20
 Ctor: 1401DF120, Dtor: 1429F4740, Alloc: 142A17D00, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142A32670 "void AZStd::vector<SetData, allocator>::pop_back(AZStd::vector<SetData, allocator>*);" 
 142A30F20 "void AZStd::vector<SetData, allocator>::clear(AZStd::vector<SetData, allocator>*);" 
 1429E8E30 "int AZStd::vector<SetData, allocator>::size(AZStd::vector<SetData, allocator>*);" 
 142A30EA0 "SetData& AZStd::vector<SetData, allocator>::at(AZStd::vector<SetData, allocator>*, AZ::u64);" 
 142A21C20 "void AZStd::vector<SetData, allocator>::insert(AZStd::vector<SetData, allocator>*, int, SetData&);" 
 142A32A50 "void AZStd::vector<SetData, allocator>::push_back(AZStd::vector<SetData, allocator>*, const SetData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[063] C: "WorldsCMSData"
T: D89CF48E-A3BF-4CCD-B0EE-A6C011BCC7A5, S: 170
 Ctor: 1429F4570, Dtor: 1401DF450, Alloc: 142A17BC0, Dealloc: 142A1F210, RTTI: 14618EED8
m_properties:
 140968720 "GlobalMOTDData& WorldsCMSData::globalMotd::Getter(WorldsCMSData*);" 
 142A03510 "void WorldsCMSData::globalMotd::Setter(WorldsCMSData*, const GlobalMOTDData&);" 
 14183CAA0 "AZStd::vector<WorldDescriptionData, allocator>& WorldsCMSData::worldDescriptions::Getter(WorldsCMSData*);" 
 142A035A0 "void WorldsCMSData::worldDescriptions::Setter(WorldsCMSData*, const AZStd::vector<WorldDescriptionData, allocator>&);" 
 140AEC940 "AZStd::vector<SetData, allocator>& WorldsCMSData::setsData::Getter(WorldsCMSData*);" 
 142A03500 "void WorldsCMSData::setsData::Setter(WorldsCMSData*, const AZStd::vector<SetData, allocator>&);" 
 
[064] C: "SetData"
T: 264AA64F-BEBB-4897-B916-55F87AD189A7, S: 50
 Ctor: 1429F4460, Dtor: 1429F46C0, Alloc: 142A17AA0, Dealloc: 142A1EE10, RTTI: 0
m_properties:
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SetData::setId::Getter(SetData*);" 
 1403188A0 "void SetData::setId::Setter(SetData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SetData::name::Getter(SetData*);" 
 142004F30 "void SetData::name::Setter(SetData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[065] C: "GlobalMOTDData"
T: 49E5B347-151D-435F-A5A9-E08C2455750A, S: 50
 Ctor: 1429F4460, Dtor: 1429F46C0, Alloc: 142A178F0, Dealloc: 142A1EE10, RTTI: 0
m_properties:
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GlobalMOTDData::title::Getter(GlobalMOTDData*);" 
 1403188A0 "void GlobalMOTDData::title::Setter(GlobalMOTDData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GlobalMOTDData::description::Getter(GlobalMOTDData*);" 
 142004F30 "void GlobalMOTDData::description::Setter(GlobalMOTDData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[066] C: "AZStd::vector<TerritoryLandmarkData, allocator>"
T: 3F622D9B-E7E9-5772-A219-3C9879FA1146, S: 20
 Ctor: 1401DF120, Dtor: 142F58A10, Alloc: 142F899A0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142FA8EA0 "void AZStd::vector<TerritoryLandmarkData, allocator>::pop_back(AZStd::vector<TerritoryLandmarkData, allocator>*);" 
 142FA62A0 "void AZStd::vector<TerritoryLandmarkData, allocator>::clear(AZStd::vector<TerritoryLandmarkData, allocator>*);" 
 142F4B9E0 "int AZStd::vector<TerritoryLandmarkData, allocator>::size(AZStd::vector<TerritoryLandmarkData, allocator>*);" 
 142FA6150 "TerritoryLandmarkData& AZStd::vector<TerritoryLandmarkData, allocator>::at(AZStd::vector<TerritoryLandmarkData, allocator>*, AZ::u64);" 
 142F98BF0 "void AZStd::vector<TerritoryLandmarkData, allocator>::insert(AZStd::vector<TerritoryLandmarkData, allocator>*, int, TerritoryLandmarkData&);" 
 142FA91F0 "void AZStd::vector<TerritoryLandmarkData, allocator>::push_back(AZStd::vector<TerritoryLandmarkData, allocator>*, const TerritoryLandmarkData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[067] C: "AZStd::vector<SimplePOI, allocator>"
T: ADC057CA-675C-5C4F-AE0E-E928D4AB92E6, S: 20
 Ctor: 1401DF120, Dtor: 142F58A00, Alloc: 142F898F0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142FA8E70 "void AZStd::vector<SimplePOI, allocator>::pop_back(AZStd::vector<SimplePOI, allocator>*);" 
 142FA6240 "void AZStd::vector<SimplePOI, allocator>::clear(AZStd::vector<SimplePOI, allocator>*);" 
 142F4BA20 "int AZStd::vector<SimplePOI, allocator>::size(AZStd::vector<SimplePOI, allocator>*);" 
 142FA6140 "SimplePOI& AZStd::vector<SimplePOI, allocator>::at(AZStd::vector<SimplePOI, allocator>*, AZ::u64);" 
 142F989B0 "void AZStd::vector<SimplePOI, allocator>::insert(AZStd::vector<SimplePOI, allocator>*, int, SimplePOI&);" 
 142FA9140 "void AZStd::vector<SimplePOI, allocator>::push_back(AZStd::vector<SimplePOI, allocator>*, const SimplePOI&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[068] C: "NPCData"
T: A0E23BA5-775A-4C07-B70C-ED9078F62D23, S: 30
 Ctor: 142F588A0, Dtor: 140190D00, Alloc: 142F89670, Dealloc: 142F94D60, RTTI: 0
m_properties:
 140ED94B0 "int NPCData::factionType::Getter(const NPCData*);" 
 1401AD7A0 "Crc32& NPCData::npcId::Getter(NPCData*);" 
 1403F11A0 "Vector3& NPCData::worldPosition::Getter(NPCData*);" 
 
[069] C: "EventData"
T: 46F1804A-234D-4511-A5A0-70851CF1096F, S: 38
 Ctor: 1446F2970, Dtor: 1401DF450, Alloc: 144917100, Dealloc: 140630440, RTTI: 14617FAE8
m_methods:
 144694790 "void EventData::ExecuteEvent(EventData*);" 
 
[070] C: "AZStd::array<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, 4>"
T: 8C84DA35-AD6D-5823-8F14-175626392810, S: A0
 Ctor: 1446F2910, Dtor: 1446F4370, Alloc: 144918C60, Dealloc: 1449A12C0, RTTI: 0
m_methods:
 1449D74D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AZStd::array<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, 4>::at(AZStd::array<AZStd::basic_string<char, AZStd::char_traits<char>, AZ::u64);" 
 14019D060 "int AZStd::array<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, 4>::size(AZStd::array<AZStd::basic_string<char, AZStd::char_traits<char>);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[071] C: "GameTransformComponent"
T: 484AE67D-ABD0-4D9C-B2C8-9BB0EEC900E0, S: 250
 Ctor: 1446F2990, Dtor: 1401DF450, Alloc: 144917190, Dealloc: 1449A0FC0, RTTI: 14617ABA8
m_requestBuses:
 "TransformBus"
 
[072] C: "AZStd::vector<LandClaimScoreData, allocator>"
T: 97AC93E4-58B5-54E0-8ADD-1F74702080C0, S: 20
 Ctor: 1401DF120, Dtor: 1446F44D0, Alloc: 1449191E0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAE40 "void AZStd::vector<LandClaimScoreData, allocator>::pop_back(AZStd::vector<LandClaimScoreData, allocator>*);" 
 14069EE90 "void AZStd::vector<LandClaimScoreData, allocator>::clear(AZStd::vector<LandClaimScoreData, allocator>*);" 
 1429E8E30 "int AZStd::vector<LandClaimScoreData, allocator>::size(AZStd::vector<LandClaimScoreData, allocator>*);" 
 142A30EA0 "LandClaimScoreData& AZStd::vector<LandClaimScoreData, allocator>::at(AZStd::vector<LandClaimScoreData, allocator>*, AZ::u64);" 
 1449A54E0 "void AZStd::vector<LandClaimScoreData, allocator>::insert(AZStd::vector<LandClaimScoreData, allocator>*, int, LandClaimScoreData&);" 
 1449DB480 "void AZStd::vector<LandClaimScoreData, allocator>::push_back(AZStd::vector<LandClaimScoreData, allocator>*, const LandClaimScoreData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[073] C: "FactionInfluenceData"
T: 56385432-2D6A-46EA-AE65-420280EFDF97, S: 28
 Ctor: 1446F2090, Dtor: 1446F4200, Alloc: 144916AD0, Dealloc: 143B3A670, RTTI: 146184EF0
m_properties:
 1401E7820 "AZStd::vector<float, allocator>& FactionInfluenceData::influence::Getter(FactionInfluenceData*);" 
 144694BA0 "void FactionInfluenceData::influence::Setter(FactionInfluenceData*, const AZStd::vector<float, allocator>&);" 
 
[074] C: "AZStd::vector<TerritoryUpgradeData, allocator>"
T: FDFDC7CC-556B-5774-96AA-7085B573C2BB, S: 20
 Ctor: 1401DF120, Dtor: 143F13870, Alloc: 144919600, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513D0 "void AZStd::vector<TerritoryUpgradeData, allocator>::pop_back(AZStd::vector<TerritoryUpgradeData, allocator>*);" 
 14069EE90 "void AZStd::vector<TerritoryUpgradeData, allocator>::clear(AZStd::vector<TerritoryUpgradeData, allocator>*);" 
 14045A450 "int AZStd::vector<TerritoryUpgradeData, allocator>::size(AZStd::vector<TerritoryUpgradeData, allocator>*);" 
 14031C0D0 "TerritoryUpgradeData& AZStd::vector<TerritoryUpgradeData, allocator>::at(AZStd::vector<TerritoryUpgradeData, allocator>*, AZ::u64);" 
 1449A5D30 "void AZStd::vector<TerritoryUpgradeData, allocator>::insert(AZStd::vector<TerritoryUpgradeData, allocator>*, int, TerritoryUpgradeData&);" 
 1449DB710 "void AZStd::vector<TerritoryUpgradeData, allocator>::push_back(AZStd::vector<TerritoryUpgradeData, allocator>*, const TerritoryUpgradeData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[075] C: "TerritoryProgressionSummaryData"
T: FB2660C3-8AF4-4483-B3AA-F80ED813ACC4, S: 50
 Ctor: 1446F2760, Dtor: 1446F4350, Alloc: 144916F50, Dealloc: 141C5E2E0, RTTI: 14618E710
m_methods:
 1429C6BC0 "bool TerritoryProgressionSummaryData::IsCompletedProject(TerritoryProgressionSummaryData*, const Crc32&);" 
 144694670 "TerritoryProgressionSummaryData TerritoryProgressionSummaryData::Clone(const TerritoryProgressionSummaryData*);" 
 1429C5FC0 "const TerritoryUpgradeData& TerritoryProgressionSummaryData::GetUpgradeDataForCategory(TerritoryProgressionSummaryData*, int);" 
m_properties:
 1401E7820 "AZStd::vector<TerritoryUpgradeData, allocator>& TerritoryProgressionSummaryData::territoryUpgrades::Getter(TerritoryProgressionSummaryData*);" 
 144848120 "void TerritoryProgressionSummaryData::territoryUpgrades::Setter(TerritoryProgressionSummaryData*, const AZStd::vector<TerritoryUpgradeData, allocator>&);" 
 140780AF0 "AZStd::vector<TerritoryProgressionProjectSummary, allocator>& TerritoryProgressionSummaryData::activeProjects::Getter(TerritoryProgressionSummaryData*);" 
 1448483F0 "void TerritoryProgressionSummaryData::activeProjects::Setter(TerritoryProgressionSummaryData*, const AZStd::vector<TerritoryProgressionProjectSummary, allocat);" 
 140AF0A30 "unsigned char& TerritoryProgressionSummaryData::territoryLevel::Getter(TerritoryProgressionSummaryData*);" 
 144848510 "void TerritoryProgressionSummaryData::territoryLevel::Setter(TerritoryProgressionSummaryData*, const unsigned char&);" 
 
[076] C: "LandClaimStreakData"
T: 6CBC2363-C7F2-4CAF-9BA3-60CCBA55726C, S: 40
 Ctor: 1446F2270, Dtor: 140190D00, Alloc: 144916DA0, Dealloc: 141C5E260, RTTI: 14618E4B0
m_methods:
 1446947D0 "LandClaimOwnerData LandClaimStreakData::Clone(const LandClaimOwnerData*);" 
m_properties:
 1403F11B0 "unsigned char& LandClaimStreakData::claimPeriodStreak::Getter(LandClaimStreakData*);" 
 141AAD870 "void LandClaimStreakData::claimPeriodStreak::Setter(LandClaimStreakData*, const unsigned char&);" 
 1403F11A0 "GuildId& LandClaimStreakData::guildId::Getter(LandClaimStreakData*);" 
 1440B4CB0 "void LandClaimStreakData::guildId::Setter(LandClaimStreakData*, const GuildId&);" 
 
[077] C: "LandClaimOwnerData"
T: 0A5D5653-9B2E-47F9-830F-09CBA5B78057, S: F0
 Ctor: 1446F2110, Dtor: 144424DA0, Alloc: 144916BF0, Dealloc: 144218600, RTTI: 14618E6F0
m_methods:
 1446947D0 "LandClaimOwnerData LandClaimOwnerData::Clone(const LandClaimOwnerData*);" 
m_properties:
 1403F11A0 "GuildId& LandClaimOwnerData::guildId::Getter(LandClaimOwnerData*);" 
 1440B4CB0 "void LandClaimOwnerData::guildId::Setter(LandClaimOwnerData*, const GuildId&);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LandClaimOwnerData::guildName::Getter(LandClaimOwnerData*);" 
 142F33410 "void LandClaimOwnerData::guildName::Setter(LandClaimOwnerData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140D88940 "GuildIconData& LandClaimOwnerData::guildCrestData::Getter(LandClaimOwnerData*);" 
 14453DD90 "void LandClaimOwnerData::guildCrestData::Setter(LandClaimOwnerData*, const GuildIconData&);" 
 1403F3C00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LandClaimOwnerData::playerName::Getter(LandClaimOwnerData*);" 
 1440B5040 "void LandClaimOwnerData::playerName::Setter(LandClaimOwnerData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14183CAA0 "WallClockTimePoint& LandClaimOwnerData::lastClaimedTime::Getter(LandClaimOwnerData*);" 
 144848780 "void LandClaimOwnerData::lastClaimedTime::Setter(LandClaimOwnerData*, const WallClockTimePoint&);" 
 14183C4B0 "int LandClaimOwnerData::faction::Getter(LandClaimOwnerData*);" 
 
[078] C: "UiTextInputComponent"
T: 2CB3872B-D2B4-4DDB-B39A-97492310AE11, S: 6B0
 Ctor: 1413CB090, Dtor: 1401DF450, Alloc: 141591250, Dealloc: 141665C70, RTTI: 1461490F8
m_requestBuses:
 "UiTextInputBus"
 
[079] C: "LandClaimPosData"
T: 5F86F98D-7B9D-4E8B-9B6B-75A782C28F87, S: 60
 Ctor: 1446F21D0, Dtor: 1446F4240, Alloc: 144916C80, Dealloc: 141C5E1E0, RTTI: 14618E6E8
m_methods:
 144694AD0 "LandClaimPosData LandClaimPosData::Clone(const LandClaimPosData*);" 
m_properties:
 1403F11C0 "unsigned short& LandClaimPosData::territoryScore::Getter(LandClaimPosData*);" 
 144848530 "void LandClaimPosData::territoryScore::Setter(LandClaimPosData*, const unsigned short&);" 
 1403F11A0 "Vector3& LandClaimPosData::worldPos::Getter(LandClaimPosData*);" 
 140454D90 "void LandClaimPosData::worldPos::Setter(LandClaimPosData*, const Vector3&);" 
 1403EE8B0 "float& LandClaimPosData::protectionRadius::Getter(LandClaimPosData*);" 
 1417BFEF0 "void LandClaimPosData::protectionRadius::Setter(LandClaimPosData*, const float&);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LandClaimPosData::territoryName::Getter(LandClaimPosData*);" 
 142004F30 "void LandClaimPosData::territoryName::Setter(LandClaimPosData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[080] C: "UiCanvasNotificationLuaProxy"
T: 9AD2B735-23AA-44F8-A51F-5F9A6BA25224, S: 30
 Ctor: 1413CAE60, Dtor: 140BEB930, Alloc: 141591760, Dealloc: 141665EF0, RTTI: 0
m_methods:
 14159B150 "void UiCanvasNotificationLuaProxy::BusConnect(UiCanvasNotificationLuaProxy*, EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[081] C: "TimePoint"
T: 0989A3E9-37E8-4381-8766-B208F460C1A3, S: 10
 Ctor: 1446F2BA0, Dtor: 140190D00, Alloc: 144917580, Dealloc: 1406303C0, RTTI: 14617A860
m_methods:
 141E85AD0 "bool TimePoint::LessThan(TimePoint*, const TimePoint&);" 
 141F04380 "TimePoint TimePoint::Now();" 
 141E85920 "Duration TimePoint::Subtract(TimePoint*, const TimePoint&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[082] C: "AZStd::vector<ObjectiveCreationParams, allocator>"
T: 20242B37-D994-5832-9E8C-C705B4FC417C, S: 20
 Ctor: 1401DF120, Dtor: 1446F46A0, Alloc: 144919AD0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DB000 "void AZStd::vector<ObjectiveCreationParams, allocator>::pop_back(AZStd::vector<ObjectiveCreationParams, allocator>*);" 
 1449D7870 "void AZStd::vector<ObjectiveCreationParams, allocator>::clear(AZStd::vector<ObjectiveCreationParams, allocator>*);" 
 1446946D0 "int AZStd::vector<ObjectiveCreationParams, allocator>::size(AZStd::vector<ObjectiveCreationParams, allocator>*);" 
 1449D7520 "ObjectiveCreationParams& AZStd::vector<ObjectiveCreationParams, allocator>::at(AZStd::vector<ObjectiveCreationParams, allocator>*, AZ::u64);" 
 1449A66B0 "void AZStd::vector<ObjectiveCreationParams, allocator>::insert(AZStd::vector<ObjectiveCreationParams, allocator>*, int, ObjectiveCreationParams&);" 
 14310D870 "void AZStd::vector<ObjectiveCreationParams, allocator>::push_back(AZStd::vector<ObjectiveCreationParams, allocator>*, const ObjectiveCreationParams&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[083] C: "SnowComponent"
T: F16AD691-091B-44E2-8FBD-2E3AFC2739EF, S: 170
 Ctor: 14179BC80, Dtor: 1401DF450, Alloc: 1418066D0, Dealloc: 141834DA0, RTTI: 14616E278
m_requestBuses:
 "SnowComponentRequestBus"
 
[084] C: "MissionDestinationData"
T: 77EF8098-ED1F-40B7-91E1-B9CD98FDFCE5, S: 50
 Ctor: 1446F2A10, Dtor: 1446F4700, Alloc: 1449172B0, Dealloc: 141C5E2E0, RTTI: 14619ACF8
m_methods:
 144694880 "MissionDestinationData MissionDestinationData::Clone(const MissionDestinationData*);" 
m_properties:
 140AF0A30 "unsigned short& MissionDestinationData::territoryId::Getter(MissionDestinationData*);" 
 144848500 "void MissionDestinationData::territoryId::Setter(MissionDestinationData*, const unsigned short&);" 
 1406413D0 "Vector2& MissionDestinationData::worldPosition::Getter(MissionDestinationData*);" 
 144848260 "void MissionDestinationData::worldPosition::Setter(MissionDestinationData*, const Vector2&);" 
 144694A80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> MissionDestinationData::id::Getter(const MissionDestinationData*);" 
 1403EE8B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MissionDestinationData::nameLocalizationKey::Getter(MissionDestinationData*);" 
 144848360 "void MissionDestinationData::nameLocalizationKey::Setter(MissionDestinationData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[085] C: "Transform"
T: 5D9958E9-9F1E-4985-B532-FFFDE75FEDFD, S: 30
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140367920, Dealloc: 1403D7E50, RTTI: 0
m_methods:
 1403D2DE0 "const Transform Transform::CreateDiagonal(const Vector3&);" 
 1403D3CC0 "const Transform Transform::CreateFromMatrix3x3(const Matrix3x3&);" 
 1403D4260 "const Transform Transform::CreateFromQuaternionAndTranslation(const Quaternion&, const Vector3&);" 
 1403D6100 "const Transform Transform::CreateRotationZ(const VectorFloat&);" 
 1403D5E70 "const Transform Transform::CreateRotationY(const VectorFloat&);" 
 1403D3890 "const Transform Transform::CreateFromColumns(const Vector3&, const Vector3&, const Vector3&, const Vector3&);" 
 1403D3D00 "const Transform Transform::CreateFromMatrix3x3AndTranslation(const Matrix3x3&, const Vector3&);" 
 1403C1D20 "const Transform Transform::CreateFromRows(const Vector4&, const Vector4&, const Vector4&);" 
 1403D7250 "const Transform Transform::CreateZero();" 
 1403D48E0 "const Transform Transform::CreateIdentity();" 
 14040A0C0 "bool Transform::IsFinite(Transform*);" 
 140408F20 "bool Transform::IsClose(Transform*, const Transform&, const VectorFloat&);" 
 14040B1A0 "bool Transform::IsOrthogonal(Transform*, const VectorFloat&);" 
 1403D4420 "const Transform Transform::CreateFromValue(const VectorFloat&);" 
 1403E8B80 "const Vector3 Transform::ExtractScale(Transform*);" 
 140450630 "const Vector3 Transform::RetrieveScale(Transform*);" 
 1403D5BD0 "const Transform Transform::CreateRotationX(const VectorFloat&);" 
 140454F60 "void Transform::SetColumns(Transform*, const Vector3&, const Vector3&, const Vector3&, const Vector3&);" 
 140458840 "void Transform::SetRows(Transform*, const Vector4&, const Vector4&, const Vector4&);" 
 140400290 "const Vector3 Transform::GetTranslation(Transform*);" 
 1404027E0 "const Transform Transform::GetTranspose3x3(Transform*);" 
 140421AD0 "void Transform::MultiplyByScale(Transform*, const Vector3&);" 
 1403FF370 "const Transform Transform::GetOrthogonalized(Transform*);" 
 1403F4190 "const VectorFloat Transform::GetDeterminant3x3(Transform*);" 
 14031C500 "const Transform Transform::MultiplyTransform(Transform*, const Transform&);" 
 1403F1220 "void Transform::GetBasisAndPosition(Transform*, Vector3*, Vector3*, Vector3*, Vector3*);" 
 140408940 "void Transform::InvertFast(Transform*);" 
 1403F9450 "const Transform Transform::GetInverseFast(Transform*);" 
 140400B60 "const Vector3 Transform::GetRowAsVector3(Transform*, int);" 
 14031C030 "bool Transform::Equal(Transform*, const Transform&);" 
 14031C5C0 "const Vector3 Transform::Multiply(Transform*, const Vector3&);" 
 1404732B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Transform::ToString(const Transform&);" 
 140400B60 "const Vector4 Transform::GetRow(Transform*, int);" 
 1403F2220 "const Vector3 Transform::GetColumn(Transform*, int);" 
 1404571E0 "void Transform::SetElement(Transform*, int, int, const VectorFloat&);" 
 1403D4030 "const Transform Transform::CreateFromQuaternion(const Quaternion&);" 
 140400B80 "void Transform::GetRows(Transform*, Vector4*, Vector4*, Vector4*);" 
 1403F1220 "void Transform::GetColumns(Transform*, Vector3*, Vector3*, Vector3*, Vector3*);" 
 14031C640 "const Vector4 Transform::MultiplyVector4(Transform*, const Vector4&);" 
 14019D020 "Transform Transform::Clone(const Transform&);" 
 140457D60 "void Transform::SetTranslation(Transform*, const Vector3&);" 
 1403F4B40 "const VectorFloat Transform::GetElement(Transform*, int, int);" 
 140456150 "void Transform::SetColumn(Transform*, int, const Vector3&);" 
 1403D2DE0 "const Transform Transform::CreateScale(const Vector3&);" 
 140458830 "void Transform::SetRow(Transform*, int, const Vector4&);" 
 14031C1E0 "const Vector3 Transform::Multiply3x3(Transform*, const Vector3&);" 
 140454F60 "void Transform::SetBasisAndPosition(Transform*, const Vector3&, const Vector3&, const Vector3&, const Vector3&);" 
 1404739D0 "const Vector3 Transform::TransposedMultiply3x3(Transform*, const Vector3&);" 
 14042B640 "void Transform::Orthogonalize(Transform*);" 
 1404586A0 "void Transform::SetRotationPartFromQuaternion(Transform*, const Quaternion&);" 
 1404738D0 "void Transform::Transpose3x3(Transform*);" 
 140457D60 "void Transform::SetPosition(Transform*, const Vector3&);" 
 140400290 "const Vector3 Transform::GetPosition(Transform*);" 
 1403D6E00 "const Transform Transform::CreateTranslation(const Vector3&);" 
 140402890 "const Transform Transform::GetTranspose(Transform*);" 
 140473980 "void Transform::Transpose(Transform*);" 
 1403F9D10 "const Transform Transform::GetInverseFull(Transform*);" 
 1403FFC70 "const Transform Transform::GetPolarDecomposition(Transform*);" 
 140408B00 "void Transform::InvertFull(Transform*);" 
m_properties:
 140400290 "const Vector3 Transform::position::Getter(Transform*);" 
 140457D60 "void Transform::position::Setter(Transform*, const Vector3&);" 
 1403F12F0 "const Vector3 Transform::basisZ::Getter(Transform*);" 
 1404551C0 "void Transform::basisZ::Setter(Transform*, const Vector3&);" 
 1403F1270 "const Vector3 Transform::basisX::Getter(Transform*);" 
 140455020 "void Transform::basisX::Setter(Transform*, const Vector3&);" 
 1403F12B0 "const Vector3 Transform::basisY::Getter(Transform*);" 
 1404550B0 "void Transform::basisY::Setter(Transform*, const Vector3&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Transform* >" D06F5F87-482F-59CF-BF3B-D47B02F25FC4), VT: 145421538, V: 0x7FF75281F6E0
 
[086] C: "ObjectiveCreationParams"
T: 82CBC21D-147C-48DF-8A9C-FF47FA86A042, S: A0
 Ctor: 1446F2A50, Dtor: 1446F4710, Alloc: 144917340, Dealloc: 1425D5180, RTTI: 14619A1B0
m_methods:
 144694A60 "ObjectiveCreationParams ObjectiveCreationParams::Clone(const ObjectiveCreationParams*);" 
m_properties:
 1403F2E80 "unsigned short& ObjectiveCreationParams::originTerritoryId::Getter(ObjectiveCreationParams*);" 
 1448484C0 "void ObjectiveCreationParams::originTerritoryId::Setter(ObjectiveCreationParams*, const unsigned short&);" 
 14478E020 "bool& ObjectiveCreationParams::available::Getter(ObjectiveCreationParams*);" 
 1448484D0 "void ObjectiveCreationParams::available::Setter(ObjectiveCreationParams*, const bool&);" 
 1406413D0 "Crc32& ObjectiveCreationParams::missionId::Getter(ObjectiveCreationParams*);" 
 1417BFED0 "void ObjectiveCreationParams::missionId::Setter(ObjectiveCreationParams*, const Crc32&);" 
 1401E7820 "ObjectiveInstanceId& ObjectiveCreationParams::instanceId::Getter(ObjectiveCreationParams*);" 
 1440B4C40 "void ObjectiveCreationParams::instanceId::Setter(ObjectiveCreationParams*, const ObjectiveInstanceId&);" 
 1446947B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ObjectiveCreationParams::destinationOverride::Getter(const ObjectiveCreationParams*);" 
 14478E040 "bool& ObjectiveCreationParams::isDynamicPoiObjective::Getter(ObjectiveCreationParams*);" 
 1448484F0 "void ObjectiveCreationParams::isDynamicPoiObjective::Setter(ObjectiveCreationParams*, const bool&);" 
 14478E030 "bool& ObjectiveCreationParams::isCommunityGoal::Getter(ObjectiveCreationParams*);" 
 1448484E0 "void ObjectiveCreationParams::isCommunityGoal::Setter(ObjectiveCreationParams*, const bool&);" 
 
[087] C: "AZStd::vector<MissionDestinationData, allocator>"
T: 24FE5493-F960-5E65-85BA-105863FB7830, S: 20
 Ctor: 1401DF120, Dtor: 1446F45E0, Alloc: 144919A20, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAFD0 "void AZStd::vector<MissionDestinationData, allocator>::pop_back(AZStd::vector<MissionDestinationData, allocator>*);" 
 1449D77F0 "void AZStd::vector<MissionDestinationData, allocator>::clear(AZStd::vector<MissionDestinationData, allocator>*);" 
 1429E8E30 "int AZStd::vector<MissionDestinationData, allocator>::size(AZStd::vector<MissionDestinationData, allocator>*);" 
 142A30EA0 "MissionDestinationData& AZStd::vector<MissionDestinationData, allocator>::at(AZStd::vector<MissionDestinationData, allocator>*, AZ::u64);" 
 1449A64B0 "void AZStd::vector<MissionDestinationData, allocator>::insert(AZStd::vector<MissionDestinationData, allocator>*, int, MissionDestinationData&);" 
 1449DB960 "void AZStd::vector<MissionDestinationData, allocator>::push_back(AZStd::vector<MissionDestinationData, allocator>*, const MissionDestinationData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[088] C: "StaticMissionData"
T: 3896E29C-8948-420B-9BD7-AAEB0E38E7C8, S: 2B0
 Ctor: 1446F2630, Dtor: 14312F240, Alloc: 1449182B0, Dealloc: 1449A18C0, RTTI: 0
m_properties:
 141A5CE70 "bool& StaticMissionData::isPvpMission::Getter(StaticMissionData*);" 
 144848560 "void StaticMissionData::isPvpMission::Setter(StaticMissionData*, const bool&);" 
 142C546B0 "int StaticMissionData::missionGoalType::Getter(StaticMissionData*);" 
 140D4BF00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::detailImagePath::Getter(StaticMissionData*);" 
 1448483A0 "void StaticMissionData::detailImagePath::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141688A20 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::imagePath::Getter(StaticMissionData*);" 
 141716980 "void StaticMissionData::imagePath::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "Crc32& StaticMissionData::categoricalProgressionId::Getter(StaticMissionData*);" 
 141AAD8D0 "void StaticMissionData::categoricalProgressionId::Setter(StaticMissionData*, const Crc32&);" 
 140F7A790 "Crc32& StaticMissionData::projectId::Getter(StaticMissionData*);" 
 141AAD8E0 "void StaticMissionData::projectId::Setter(StaticMissionData*, const Crc32&);" 
 143D2C230 "unsigned short& StaticMissionData::estimatedTimeToCompleteMinutes::Getter(StaticMissionData*);" 
 1448483D0 "void StaticMissionData::estimatedTimeToCompleteMinutes::Setter(StaticMissionData*, const unsigned short&);" 
 14478E120 "unsigned short& StaticMissionData::availableTerritoryId::Getter(StaticMissionData*);" 
 144848570 "void StaticMissionData::availableTerritoryId::Setter(StaticMissionData*, const unsigned short&);" 
 1401AD7A0 "Crc32& StaticMissionData::id::Getter(StaticMissionData*);" 
 1401DF3E0 "void StaticMissionData::id::Setter(StaticMissionData*, const Crc32&);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::taskKillContributionOverride::Getter(StaticMissionData*);" 
 1440B4F60 "void StaticMissionData::taskKillContributionOverride::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14478DF30 "int& StaticMissionData::communityGoalProgressAmount::Getter(StaticMissionData*);" 
 144848440 "void StaticMissionData::communityGoalProgressAmount::Setter(StaticMissionData*, const int&);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::displayName::Getter(StaticMissionData*);" 
 141AAD7E0 "void StaticMissionData::displayName::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140940080 "unsigned int& StaticMissionData::taskHaveItemsQtyOverride::Getter(StaticMissionData*);" 
 14453DB60 "void StaticMissionData::taskHaveItemsQtyOverride::Setter(StaticMissionData*, const unsigned int&);" 
 14478DEF0 "unsigned char& StaticMissionData::recommendedGroupSize::Getter(StaticMissionData*);" 
 1448483E0 "void StaticMissionData::recommendedGroupSize::Setter(StaticMissionData*, const unsigned char&);" 
 1410530F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::taskGiveItemOverride::Getter(StaticMissionData*);" 
 1440B4FF0 "void StaticMissionData::taskGiveItemOverride::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140584310 "unsigned int& StaticMissionData::taskKillContributionQtyOverride::Getter(StaticMissionData*);" 
 144848670 "void StaticMissionData::taskKillContributionQtyOverride::Setter(StaticMissionData*, const unsigned int&);" 
 140968720 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::taskHaveItemsOverride::Getter(StaticMissionData*);" 
 1448481C0 "void StaticMissionData::taskHaveItemsOverride::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140400B50 "AZStd::vector<Crc32, allocator>& StaticMissionData::poiTagsOverride::Getter(StaticMissionData*);" 
 144848760 "void StaticMissionData::poiTagsOverride::Setter(StaticMissionData*, const AZStd::vector<Crc32, allocator>&);" 
 140AF0A30 "Crc32& StaticMissionData::objectiveId::Getter(StaticMissionData*);" 
 1440B4F30 "void StaticMissionData::objectiveId::Setter(StaticMissionData*, const Crc32&);" 
 142AA8F50 "Duration& StaticMissionData::taskTimerOverride::Getter(StaticMissionData*);" 
 144848280 "void StaticMissionData::taskTimerOverride::Setter(StaticMissionData*, const Duration&);" 
 14096B150 "unsigned int& StaticMissionData::missionTier::Getter(StaticMissionData*);" 
 141AAD8F0 "void StaticMissionData::missionTier::Setter(StaticMissionData*, const unsigned int&);" 
 142E637E0 "Crc32& StaticMissionData::successGameEventIdOverride::Getter(StaticMissionData*);" 
 1448482B0 "void StaticMissionData::successGameEventIdOverride::Setter(StaticMissionData*, const Crc32&);" 
 1442D0200 "Crc32& StaticMissionData::failureGameEventIdOverride::Getter(StaticMissionData*);" 
 1448482C0 "void StaticMissionData::failureGameEventIdOverride::Setter(StaticMissionData*, const Crc32&);" 
 140F838C0 "int& StaticMissionData::territoryIdOverride::Getter(StaticMissionData*);" 
 1440B5090 "void StaticMissionData::territoryIdOverride::Setter(StaticMissionData*, const int&);" 
 14478DEA0 "bool& StaticMissionData::forceReturnToGiver::Getter(StaticMissionData*);" 
 1448482E0 "void StaticMissionData::forceReturnToGiver::Setter(StaticMissionData*, const bool&);" 
 141681D30 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::titleOverride::Getter(StaticMissionData*);" 
 1417135C0 "void StaticMissionData::titleOverride::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140968820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::descriptionOverride::Getter(StaticMissionData*);" 
 141712810 "void StaticMissionData::descriptionOverride::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14478DF20 "bool& StaticMissionData::isValid::Getter(StaticMissionData*);" 
 144848430 "void StaticMissionData::isValid::Setter(StaticMissionData*, const bool&);" 
 1410459C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticMissionData::vcLevelRange::Getter(StaticMissionData*);" 
 1417123A0 "void StaticMissionData::vcLevelRange::Setter(StaticMissionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1442D02A0 "bool& StaticMissionData::isCustomObjective::Getter(StaticMissionData*);" 
 144848520 "void StaticMissionData::isCustomObjective::Setter(StaticMissionData*, const bool&);" 
 
[089] C: "AZStd::vector<ConversationOption, allocator>"
T: BFDAC0FF-6B87-5061-AEBD-A319C455165F, S: 20
 Ctor: 1401DF120, Dtor: 142845160, Alloc: 144919080, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428A9700 "void AZStd::vector<ConversationOption, allocator>::pop_back(AZStd::vector<ConversationOption, allocator>*);" 
 1428A7A30 "void AZStd::vector<ConversationOption, allocator>::clear(AZStd::vector<ConversationOption, allocator>*);" 
 1428384F0 "int AZStd::vector<ConversationOption, allocator>::size(AZStd::vector<ConversationOption, allocator>*);" 
 1428A7A10 "ConversationOption& AZStd::vector<ConversationOption, allocator>::at(AZStd::vector<ConversationOption, allocator>*, AZ::u64);" 
 1449A52A0 "void AZStd::vector<ConversationOption, allocator>::insert(AZStd::vector<ConversationOption, allocator>*, int, ConversationOption&);" 
 1449DB1A0 "void AZStd::vector<ConversationOption, allocator>::push_back(AZStd::vector<ConversationOption, allocator>*, const ConversationOption&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[090] C: "WorldDescriptionData"
T: BCB5850A-4A29-457D-A793-44E1F6F73813, S: F0
 Ctor: 1429F4540, Dtor: 1429F4720, Alloc: 142A17B30, Dealloc: 142A1F110, RTTI: 0
m_properties:
 1406414E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldDescriptionData::motd::Getter(WorldDescriptionData*);" 
 141714830 "void WorldDescriptionData::motd::Setter(WorldDescriptionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldDescriptionData::description::Getter(WorldDescriptionData*);" 
 142004F50 "void WorldDescriptionData::description::Setter(WorldDescriptionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldDescriptionData::worldId::Getter(WorldDescriptionData*);" 
 1403188A0 "void WorldDescriptionData::worldId::Setter(WorldDescriptionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldDescriptionData::name::Getter(WorldDescriptionData*);" 
 142004F30 "void WorldDescriptionData::name::Setter(WorldDescriptionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F1550 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldDescriptionData::warning::Getter(WorldDescriptionData*);" 
 1417146E0 "void WorldDescriptionData::warning::Setter(WorldDescriptionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[091] C: "ConversationUIData"
T: 7C3FB700-F5B8-4310-9E41-34BDAE068191, S: 78
 Ctor: 1446F1E40, Dtor: 1446F4170, Alloc: 144917AD0, Dealloc: 1420080A0, RTTI: 0
m_properties:
 140F7A790 "Crc32& ConversationUIData::dialogueId::Getter(ConversationUIData*);" 
 141AAD8E0 "void ConversationUIData::dialogueId::Setter(ConversationUIData*, const Crc32&);" 
 140C5BC20 "int ConversationUIData::responseType::Getter(ConversationUIData*);" 
 14096B150 "AZStd::vector<ConversationOption, allocator>& ConversationUIData::options::Getter(ConversationUIData*);" 
 144848540 "void ConversationUIData::options::Setter(ConversationUIData*, const AZStd::vector<ConversationOption, allocator>&);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ConversationUIData::title::Getter(ConversationUIData*);" 
 1403188A0 "void ConversationUIData::title::Setter(ConversationUIData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ConversationUIData::dialogue::Getter(ConversationUIData*);" 
 142004F30 "void ConversationUIData::dialogue::Setter(ConversationUIData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[092] C: "ConversationOption"
T: 637031FA-17E3-43D3-8C0B-89DA53C62398, S: 30
 Ctor: 1446F1E10, Dtor: 1401DF410, Alloc: 144917A40, Dealloc: 141665EF0, RTTI: 0
m_properties:
 1417B81E0 "Crc32& ConversationOption::dataId::Getter(ConversationOption*);" 
 1417BFF20 "void ConversationOption::dataId::Setter(ConversationOption*, const Crc32&);" 
 140761770 "int ConversationOption::optionType::Getter(ConversationOption*);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ConversationOption::text::Getter(ConversationOption*);" 
 1403188A0 "void ConversationOption::text::Setter(ConversationOption*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[093] C: "StaticCampSkinData"
T: F275BA2C-094D-4EE9-B4A8-04B936BE562D, S: 40
 Ctor: 1446F2380, Dtor: 140573E50, Alloc: 144917FE0, Dealloc: 144663E40, RTTI: 0
m_methods:
 1409141F0 "bool StaticCampSkinData::IsValid(StaticCampSkinData*);" 
m_properties:
 1417B81F0 "Crc32& StaticCampSkinData::itemId::Getter(StaticCampSkinData*);" 
 1417BFF40 "void StaticCampSkinData::itemId::Setter(StaticCampSkinData*, const Crc32&);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticCampSkinData::key::Getter(StaticCampSkinData*);" 
 141AAD7E0 "void StaticCampSkinData::key::Setter(StaticCampSkinData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "Crc32& StaticCampSkinData::id::Getter(StaticCampSkinData*);" 
 1401DF3E0 "void StaticCampSkinData::id::Setter(StaticCampSkinData*, const Crc32&);" 
 140F82F50 "bool& StaticCampSkinData::isEntitlement::Getter(StaticCampSkinData*);" 
 144320F40 "void StaticCampSkinData::isEntitlement::Setter(StaticCampSkinData*, const bool&);" 
 1403F2E90 "Crc32& StaticCampSkinData::requiredAchievementId::Getter(StaticCampSkinData*);" 
 141AAD890 "void StaticCampSkinData::requiredAchievementId::Setter(StaticCampSkinData*, const Crc32&);" 
 
[094] C: "RewardModifiers"
T: 6884F541-4E2F-43BF-8077-385ECCD52B63, S: 14
 Ctor: 1446F2350, Dtor: 140190D00, Alloc: 144917F50, Dealloc: 1449A17C0, RTTI: 0
m_properties:
 140916660 "float& RewardModifiers::currencyModifier::Getter(RewardModifiers*);" 
 1414D2A50 "void RewardModifiers::currencyModifier::Setter(RewardModifiers*, const float&);" 
 140782520 "float& RewardModifiers::territoryStandingRewardModifier::Getter(RewardModifiers*);" 
 1414D2A60 "void RewardModifiers::territoryStandingRewardModifier::Setter(RewardModifiers*, const float&);" 
 1401AD7A0 "float& RewardModifiers::xpModifier::Getter(RewardModifiers*);" 
 1401DF3E0 "void RewardModifiers::xpModifier::Setter(RewardModifiers*, const float&);" 
 1401E7820 "float& RewardModifiers::categoricalProgressionRewardModifier::Getter(RewardModifiers*);" 
 14028DC50 "void RewardModifiers::categoricalProgressionRewardModifier::Setter(RewardModifiers*, const float&);" 
 1403F11A0 "float& RewardModifiers::azothRewardModifier::Getter(RewardModifiers*);" 
 1417BFEB0 "void RewardModifiers::azothRewardModifier::Setter(RewardModifiers*, const float&);" 
 
[095] C: "StaticGameEventData"
T: 376CC907-ED01-4040-ADA9-A314B8A94702, S: F8
 Ctor: 1446F2410, Dtor: 1446F42A0, Alloc: 144918190, Dealloc: 142A1EF10, RTTI: 0
m_properties:
 140AFDBE0 "int& StaticGameEventData::categoricalProgressionReward::Getter(StaticGameEventData*);" 
 141AAD960 "void StaticGameEventData::categoricalProgressionReward::Setter(StaticGameEventData*, const int&);" 
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticGameEventData::currencyRewardRange::Getter(StaticGameEventData*);" 
 14380DF20 "void StaticGameEventData::currencyRewardRange::Setter(StaticGameEventData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140641920 "float& StaticGameEventData::factionInfluenceAmount::Getter(StaticGameEventData*);" 
 14453DF10 "void StaticGameEventData::factionInfluenceAmount::Setter(StaticGameEventData*, const float&);" 
 1401AD7A0 "Crc32& StaticGameEventData::id::Getter(StaticGameEventData*);" 
 1401DF3E0 "void StaticGameEventData::id::Setter(StaticGameEventData*, const Crc32&);" 
 141C8A130 "int& StaticGameEventData::itemRewardQuantity::Getter(StaticGameEventData*);" 
 14453DE50 "void StaticGameEventData::itemRewardQuantity::Setter(StaticGameEventData*, const int&);" 
 1406414D0 "unsigned short& StaticGameEventData::azothReward::Getter(StaticGameEventData*);" 
 144848600 "void StaticGameEventData::azothReward::Setter(StaticGameEventData*, const unsigned short&);" 
 1403F3C00 "int& StaticGameEventData::factionReputation::Getter(StaticGameEventData*);" 
 1440B5030 "void StaticGameEventData::factionReputation::Setter(StaticGameEventData*, const int&);" 
 140F82F50 "unsigned int& StaticGameEventData::progressionReward::Getter(StaticGameEventData*);" 
 1440B4F00 "void StaticGameEventData::progressionReward::Setter(StaticGameEventData*, const unsigned int&);" 
 1406414E0 "Crc32& StaticGameEventData::categoricalProgressionId::Getter(StaticGameEventData*);" 
 140541A40 "void StaticGameEventData::categoricalProgressionId::Setter(StaticGameEventData*, const Crc32&);" 
 1403FAEA0 "int StaticGameEventData::contributionLevel::Getter(const StaticGameEventData*);" 
 14478E1C0 "NumberRange& StaticGameEventData::gearScoreRange::Getter(StaticGameEventData*);" 
 144848790 "void StaticGameEventData::gearScoreRange::Setter(StaticGameEventData*, const NumberRange&);" 
 143FBB960 "int& StaticGameEventData::factionTokens::Getter(StaticGameEventData*);" 
 1440B5060 "void StaticGameEventData::factionTokens::Setter(StaticGameEventData*, const int&);" 
 1442D0300 "int& StaticGameEventData::territoryStanding::Getter(StaticGameEventData*);" 
 144848730 "void StaticGameEventData::territoryStanding::Setter(StaticGameEventData*, const int&);" 
 14478E1D0 "bool& StaticGameEventData::isValid::Getter(StaticGameEventData*);" 
 1448487C0 "void StaticGameEventData::isValid::Setter(StaticGameEventData*, const bool&);" 
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticGameEventData::itemReward::Getter(StaticGameEventData*);" 
 14453DDD0 "void StaticGameEventData::itemReward::Setter(StaticGameEventData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[096] C: "ObjectiveData"
T: 4007D981-F328-456A-B573-49A6376D2DD7, S: 320
 Ctor: 1446F2A70, Dtor: 1401DF450, Alloc: 1449173D0, Dealloc: 1449A1040, RTTI: 146199758
m_properties:
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ObjectiveData::taskID::Getter(ObjectiveData*);" 
 14380DF20 "void ObjectiveData::taskID::Setter(ObjectiveData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1405842F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ObjectiveData::title::Getter(ObjectiveData*);" 
 14453DDB0 "void ObjectiveData::title::Setter(ObjectiveData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1407E7270 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ObjectiveData::description::Getter(ObjectiveData*);" 
 14171C3E0 "void ObjectiveData::description::Setter(ObjectiveData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14478E190 "bool& ObjectiveData::canBeShared::Getter(ObjectiveData*);" 
 144848630 "void ObjectiveData::canBeShared::Setter(ObjectiveData*, const bool&);" 
 144694960 "int ObjectiveData::type::Getter(const ObjectiveData*);" 
 1410459C0 "Crc32& ObjectiveData::npcDestinationId::Getter(ObjectiveData*);" 
 1448483C0 "void ObjectiveData::npcDestinationId::Setter(ObjectiveData*, const Crc32&);" 
 1442D0380 "bool& ObjectiveData::hideIncompleteTurnin::Getter(ObjectiveData*);" 
 1448487E0 "void ObjectiveData::hideIncompleteTurnin::Setter(ObjectiveData*, const bool&);" 
 144694870 "int ObjectiveData::difficulty::Getter(const ObjectiveData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ObjectiveData::id::Getter(ObjectiveData*);" 
 141AAD7E0 "void ObjectiveData::id::Setter(ObjectiveData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140F82F50 "int& ObjectiveData::maxInfluenceLevel::Getter(ObjectiveData*);" 
 1440B4F00 "void ObjectiveData::maxInfluenceLevel::Setter(ObjectiveData*, const int&);" 
 1403F2E90 "int& ObjectiveData::difficultyLevel::Getter(ObjectiveData*);" 
 141AAD890 "void ObjectiveData::difficultyLevel::Setter(ObjectiveData*, const int&);" 
 141A5CE80 "bool& ObjectiveData::repeatable::Getter(ObjectiveData*);" 
 144848610 "void ObjectiveData::repeatable::Setter(ObjectiveData*, const bool&);" 
 14478E1E0 "bool& ObjectiveData::hideAvailableMapIcon::Getter(ObjectiveData*);" 
 1448487F0 "void ObjectiveData::hideAvailableMapIcon::Setter(ObjectiveData*, const bool&);" 
 140400B50 "Crc32& ObjectiveData::successGameEventId::Getter(ObjectiveData*);" 
 144848750 "void ObjectiveData::successGameEventId::Setter(ObjectiveData*, const Crc32&);" 
 141A5CEF0 "Crc32& ObjectiveData::failureGameEventId::Getter(ObjectiveData*);" 
 144848770 "void ObjectiveData::failureGameEventId::Setter(ObjectiveData*, const Crc32&);" 
 140AEE960 "bool& ObjectiveData::flagPvp::Getter(ObjectiveData*);" 
 1448487D0 "void ObjectiveData::flagPvp::Setter(ObjectiveData*, const bool&);" 
 1442D0310 "Crc32& ObjectiveData::achievementId::Getter(ObjectiveData*);" 
 144320FE0 "void ObjectiveData::achievementId::Setter(ObjectiveData*, const Crc32&);" 
 
[097] C: "ObjectiveRewardData"
T: 3BDE8820-3121-458C-A54B-D1498E623C4C, S: 78
 Ctor: 1446F2AA0, Dtor: 1401DF450, Alloc: 144917460, Dealloc: 1449A10C0, RTTI: 1461B10F0
m_properties:
 1406414D0 "Crc32& ObjectiveRewardData::progressionRewardId::Getter(ObjectiveRewardData*);" 
 141AAD930 "void ObjectiveRewardData::progressionRewardId::Setter(ObjectiveRewardData*, const Crc32&);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ObjectiveRewardData::objectiveReward::Getter(ObjectiveRewardData*);" 
 1439CD010 "void ObjectiveRewardData::objectiveReward::Setter(ObjectiveRewardData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7820 "int& ObjectiveRewardData::experienceReward::Getter(ObjectiveRewardData*);" 
 14028DC50 "void ObjectiveRewardData::experienceReward::Setter(ObjectiveRewardData*, const int&);" 
 1411D8420 "bool& ObjectiveRewardData::itemRewardIsGive::Getter(ObjectiveRewardData*);" 
 144848580 "void ObjectiveRewardData::itemRewardIsGive::Setter(ObjectiveRewardData*, const bool&);" 
 1405842F0 "AZ::u64& ObjectiveRewardData::progressionPointsReward::Getter(ObjectiveRewardData*);" 
 1405A4D20 "void ObjectiveRewardData::progressionPointsReward::Setter(ObjectiveRewardData*, const AZ::u64&);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ObjectiveRewardData::itemRewardId::Getter(ObjectiveRewardData*);" 
 143EB82E0 "void ObjectiveRewardData::itemRewardId::Setter(ObjectiveRewardData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140D88940 "int& ObjectiveRewardData::itemRewardQuantity::Getter(ObjectiveRewardData*);" 
 141AAD910 "void ObjectiveRewardData::itemRewardQuantity::Setter(ObjectiveRewardData*, const int&);" 
 141A5CE80 "unsigned short& ObjectiveRewardData::progressionRankRewardId::Getter(ObjectiveRewardData*);" 
 144848620 "void ObjectiveRewardData::progressionRankRewardId::Setter(ObjectiveRewardData*, const unsigned short&);" 
 
[098] C: "Aabb"
T: A54C2B36-D5B8-46A1-A529-4EBDBD2450E7, S: 20
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140366BA0, Dealloc: 1403D7D00, RTTI: 0
m_methods:
 140409CD0 "bool Aabb::IsFinite(Aabb*);" 
 1403F40F0 "const VectorFloat Aabb::GetDepth(Aabb*);" 
 1403F48A0 "const VectorFloat Aabb::GetDistance(Aabb*, const Vector3&);" 
 1403F9080 "const VectorFloat Aabb::GetHeight(Aabb*);" 
 1403C1ED0 "bool Aabb::Contains(Aabb*, const Aabb&);", m_debugDescription: "const Vector3& or const Aabb&" 
 140454400 "void Aabb::Set(Aabb*, const Vector3&, const Vector3&);" 
 1403D3DA0 "const Aabb Aabb::CreateFromMinMax(const Vector3&, const Vector3&);" 
 140361490 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Aabb::ToString(const Aabb&);" 
 1403D3F30 "const Aabb Aabb::CreateFromPoint(const Vector3&);" 
 140403440 "const VectorFloat Aabb::GetWidth(Aabb*);" 
 1403E8830 "void Aabb::Expand(Aabb*, const Vector3&);" 
 14040C610 "bool Aabb::IsValid(Aabb*);" 
 14042B750 "bool Aabb::Overlaps(Aabb*, const Aabb&);" 
 1403F5400 "const Vector3 Aabb::GetExtents(Aabb*);" 
 1403D4FA0 "const Aabb Aabb::CreateNull();" 
 1403C1F00 "bool Aabb::ContainsVector3(Aabb*, const Vector3&);", m_debugDescription: "const Vector3&" 
 1403EFFF0 "void Aabb::GetAsSphere(Aabb*, Vector3&, VectorFloat&);", m_debugDescription: "() -> Vector3(center) and float(radius)" 
 1403CFB60 "const Aabb Aabb::CreateCenterHalfExtents(const Vector3&, const Vector3&);" 
 1403F13E0 "const Vector3 Aabb::GetCenter(Aabb*);" 
 1404025C0 "const Aabb Aabb::GetTransformedAabb(Aabb*, const Transform&);" 
 1403D3E20 "const Aabb Aabb::CreateFromObb(const Obb&);" 
 140364F10 "void Aabb::AddPoint(Aabb*, const Vector3&);" 
 1403CFB80 "const Aabb Aabb::CreateCenterRadius(const Vector3&, const VectorFloat&);" 
 1403F53E0 "const Aabb Aabb::GetExpanded(Aabb*, const Vector3&);" 
 140361300 "void Aabb::SetNull(Aabb*);" 
 140362E00 "void Aabb::AddAabb(Aabb*, const Aabb&);" 
 1403F1520 "const Aabb Aabb::GetClamped(Aabb*, const Aabb&);" 
 14031BEC0 "bool Aabb::Equal(Aabb*, const Aabb&);" 
 1403B62F0 "void Aabb::Clamp(Aabb*, const Aabb&);" 
 140473640 "void Aabb::Translate(Aabb*, const Vector3&);" 
 1404027C0 "const Aabb Aabb::GetTranslated(Aabb*, const Vector3&);" 
 1404019B0 "float Aabb::GetSurfaceArea(Aabb*);" 
 1404025F0 "const Obb Aabb::GetTransformedObb(Aabb*, const Transform&);" 
 14036C370 "void Aabb::ApplyTransform(Aabb*, const Transform&);" 
 14019D290 "Aabb Aabb::Clone(const Aabb&);" 
m_properties:
 1401AD7A0 "const Vector3& Aabb::min::Getter(Aabb*);" 
 1401DF220 "void Aabb::min::Setter(Aabb*, const Vector3&);" 
 1403F11A0 "const Vector3& Aabb::max::Getter(Aabb*);" 
 140454D90 "void Aabb::max::Setter(Aabb*, const Vector3&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Aabb* >" 993158C0-37AD-573F-AB33-3F49937A1CF4), VT: 145421730, V: 0x7FF752761300
 
[099] C: "TaskData"
T: E76B9E73-4861-4B60-91FB-5B5D7197FFB9, S: 3C0
 Ctor: 1446F2B70, Dtor: 1401DF450, Alloc: 1449174F0, Dealloc: 1449A1140, RTTI: 146199760
m_properties:
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TaskData::type::Getter(TaskData*);" 
 143EB82E0 "void TaskData::type::Setter(TaskData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1412AA2C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TaskData::itemName::Getter(TaskData*);" 
 144848290 "void TaskData::itemName::Setter(TaskData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14257BEA0 "unsigned int& TaskData::duration::Getter(TaskData*);" 
 1448484A0 "void TaskData::duration::Setter(TaskData*, const unsigned int&);" 
 14478E000 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TaskData::weaponID::Getter(TaskData*);" 
 144848470 "void TaskData::weaponID::Setter(TaskData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14478E010 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char TaskData::subTaskList::Getter(TaskData*);" 
 1448484B0 "void TaskData::subTaskList::Setter(TaskData*, const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TaskData::id::Getter(TaskData*);" 
 1439CD010 "void TaskData::id::Setter(TaskData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1409686F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TaskData::enemyType::Getter(TaskData*);" 
 144848450 "void TaskData::enemyType::Setter(TaskData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[100] C: "AZStd::vector<unsigned char, allocator>"
T: ADFD596B-7177-5519-9752-BC418FE42963, S: 20
 Ctor: 1401DF120, Dtor: 143F13580, Alloc: 144918D10, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251280 "void AZStd::vector<unsigned char, allocator>::pop_back(AZStd::vector<unsigned char, allocator>*);" 
 14069EE90 "void AZStd::vector<unsigned char, allocator>::clear(AZStd::vector<unsigned char, allocator>*);" 
 14019D0F0 "int AZStd::vector<unsigned char, allocator>::size(AZStd::vector<unsigned char, allocator>*);" 
 14424FDF0 "unsigned char& AZStd::vector<unsigned char, allocator>::at(AZStd::vector<unsigned char, allocator>*, AZ::u64);" 
 14421DAE0 "void AZStd::vector<unsigned char, allocator>::insert(AZStd::vector<unsigned char, allocator>*, int, unsigned char&);" 
 1442514F0 "void AZStd::vector<unsigned char, allocator>::push_back(AZStd::vector<unsigned char, allocator>*, const unsigned char&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[101] C: "AZStd::array<float, 4>"
T: E55B2ECA-D730-576C-8329-99238095E5E1, S: 10
 Ctor: 1403BE7D0, Dtor: 140190D00, Alloc: 144918BB0, Dealloc: 141665DF0, RTTI: 0
m_methods:
 141D470F0 "float& AZStd::array<float, 4>::at(AZStd::array<float, 4>*, AZ::u64);" 
 14019D060 "int AZStd::array<float, 4>::size(AZStd::array<float, 4>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[102] C: "AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>"
T: C5880A45-43C6-507C-AF75-F59BD0424202, S: 28
 Ctor: 1446F1C80, Dtor: 1446F4130, Alloc: 1449177E0, Dealloc: 144663B40, RTTI: 0
m_properties:
 140923030 "int AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>::first::Getter(AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>);" 
 1401DF3E0 "void AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>::first::Setter(AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, const int&);" 
 144694800 "AZStd::vector<ObjectiveInstanceId, allocator> AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>::second::Getter(AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>);" 
 144694BC0 "void AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>::second::Setter(AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, const AZStd::vector<ObjectiveInstanceId, allocator>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[103] C: "AZStd::vector<QuestOptionPositionData, allocator>"
T: 5AB9AFED-3081-5043-BAB1-7A80C085E5DB, S: 20
 Ctor: 1401DF120, Dtor: 1419A8830, Alloc: 144919340, Dealloc: 1406305C0, RTTI: 0
m_methods:
 141D565E0 "void AZStd::vector<QuestOptionPositionData, allocator>::pop_back(AZStd::vector<QuestOptionPositionData, allocator>*);" 
 14069EE90 "void AZStd::vector<QuestOptionPositionData, allocator>::clear(AZStd::vector<QuestOptionPositionData, allocator>*);" 
 141946F60 "int AZStd::vector<QuestOptionPositionData, allocator>::size(AZStd::vector<QuestOptionPositionData, allocator>*);" 
 141D47110 "QuestOptionPositionData& AZStd::vector<QuestOptionPositionData, allocator>::at(AZStd::vector<QuestOptionPositionData, allocator>*, AZ::u64);" 
 1449A58A0 "void AZStd::vector<QuestOptionPositionData, allocator>::insert(AZStd::vector<QuestOptionPositionData, allocator>*, int, QuestOptionPositionData&);" 
 1449DB610 "void AZStd::vector<QuestOptionPositionData, allocator>::push_back(AZStd::vector<QuestOptionPositionData, allocator>*, const QuestOptionPositionData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[104] C: "AZStd::vector<POICapital, allocator>"
T: C73719D2-B04B-5456-BFA7-1FAD73EAAEF2, S: 20
 Ctor: 1401DF120, Dtor: 142F589E0, Alloc: 142F89790, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142FA8DE0 "void AZStd::vector<POICapital, allocator>::pop_back(AZStd::vector<POICapital, allocator>*);" 
 142FA6160 "void AZStd::vector<POICapital, allocator>::clear(AZStd::vector<POICapital, allocator>*);" 
 142F4B970 "int AZStd::vector<POICapital, allocator>::size(AZStd::vector<POICapital, allocator>*);" 
 142FA6120 "POICapital& AZStd::vector<POICapital, allocator>::at(AZStd::vector<POICapital, allocator>*, AZ::u64);" 
 142F98670 "void AZStd::vector<POICapital, allocator>::insert(AZStd::vector<POICapital, allocator>*, int, POICapital&);" 
 142FA8FA0 "void AZStd::vector<POICapital, allocator>::push_back(AZStd::vector<POICapital, allocator>*, const POICapital&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[105] C: "AZStd::vector<ObjectiveInstanceId, allocator>"
T: 0B9AFA86-981D-5143-957B-805279DD4AE3, S: 20
 Ctor: 1401DF120, Dtor: 143F13870, Alloc: 144919B80, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513D0 "void AZStd::vector<ObjectiveInstanceId, allocator>::pop_back(AZStd::vector<ObjectiveInstanceId, allocator>*);" 
 14069EE90 "void AZStd::vector<ObjectiveInstanceId, allocator>::clear(AZStd::vector<ObjectiveInstanceId, allocator>*);" 
 14045A450 "int AZStd::vector<ObjectiveInstanceId, allocator>::size(AZStd::vector<ObjectiveInstanceId, allocator>*);" 
 14031C0D0 "ObjectiveInstanceId& AZStd::vector<ObjectiveInstanceId, allocator>::at(AZStd::vector<ObjectiveInstanceId, allocator>*, AZ::u64);" 
 1449A67B0 "void AZStd::vector<ObjectiveInstanceId, allocator>::insert(AZStd::vector<ObjectiveInstanceId, allocator>*, int, ObjectiveInstanceId&);" 
 143166350 "void AZStd::vector<ObjectiveInstanceId, allocator>::push_back(AZStd::vector<ObjectiveInstanceId, allocator>*, const ObjectiveInstanceId&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[106] C: "QuestOptionPositionData"
T: 477E0B67-0D07-4D81-8A8E-FDCDAAE26F7D, S: 20
 Ctor: 1401DF040, Dtor: 140190D00, Alloc: 144917E30, Dealloc: 1406307C0, RTTI: 0
m_properties:
 1401AD7A0 "Crc32& QuestOptionPositionData::npcId::Getter(QuestOptionPositionData*);" 
 1401DF3E0 "void QuestOptionPositionData::npcId::Setter(QuestOptionPositionData*, const Crc32&);" 
 140916660 "Crc32& QuestOptionPositionData::objectiveId::Getter(QuestOptionPositionData*);" 
 1414D2A50 "void QuestOptionPositionData::objectiveId::Setter(QuestOptionPositionData*, const Crc32&);" 
 1403F11A0 "Vector3& QuestOptionPositionData::worldPosition::Getter(QuestOptionPositionData*);" 
 140454D90 "void QuestOptionPositionData::worldPosition::Setter(QuestOptionPositionData*, const Vector3&);" 
 
[107] C: "AZStd::vector<DamageByTypeData, allocator>"
T: BD9ECA85-5CC2-5BFF-BBA0-552EAD4E3817, S: 20
 Ctor: 1401DF120, Dtor: 1437FA100, Alloc: 14381E890, Dealloc: 1406305C0, RTTI: 0
m_methods:
 143832970 "void AZStd::vector<DamageByTypeData, allocator>::pop_back(AZStd::vector<DamageByTypeData, allocator>*);" 
 14069EE90 "void AZStd::vector<DamageByTypeData, allocator>::clear(AZStd::vector<DamageByTypeData, allocator>*);" 
 1437F3A90 "int AZStd::vector<DamageByTypeData, allocator>::size(AZStd::vector<DamageByTypeData, allocator>*);" 
 143831BA0 "DamageByTypeData& AZStd::vector<DamageByTypeData, allocator>::at(AZStd::vector<DamageByTypeData, allocator>*, AZ::u64);" 
 14382A1C0 "void AZStd::vector<DamageByTypeData, allocator>::insert(AZStd::vector<DamageByTypeData, allocator>*, int, DamageByTypeData&);" 
 1438329C0 "void AZStd::vector<DamageByTypeData, allocator>::push_back(AZStd::vector<DamageByTypeData, allocator>*, const DamageByTypeData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[108] C: "UiGatheringEnd"
T: 6994D68A-1197-4A6D-92B2-542FCF853CD6, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 144918850, Dealloc: 141356C50, RTTI: 0
 
[109] C: "UiGatheringStart"
T: B0DBD157-8136-4643-B49A-4C8B93860D00, S: 20
 Ctor: 1446F2800, Dtor: 140190D00, Alloc: 1449188E0, Dealloc: 1406305C0, RTTI: 0
m_properties:
 1406413D0 "Crc32& UiGatheringStart::gatheringType::Getter(UiGatheringStart*);" 
 1417BFED0 "void UiGatheringStart::gatheringType::Setter(UiGatheringStart*, const Crc32&);" 
 1401AD7A0 "UiGatherableBind& UiGatheringStart::gatherableBind::Getter(UiGatheringStart*);" 
 1446F34B0 "void UiGatheringStart::gatherableBind::Setter(UiGatheringStart*, const UiGatherableBind&);" 
 
[110] C: "CrestPartData"
T: 542F5F23-94DA-475A-8993-08105F9F0A6E, S: A0
 Ctor: 1446F1F50, Dtor: 1446F41E0, Alloc: 144917BF0, Dealloc: 1449A13C0, RTTI: 0
m_properties:
 1407E7270 "bool& CrestPartData::isEnabled::Getter(CrestPartData*);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CrestPartData::displayName::Getter(CrestPartData*);" 
 1405842F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CrestPartData::image::Getter(CrestPartData*);" 
 140D88940 "Color& CrestPartData::color::Getter(CrestPartData*);" 
 1401AD7A0 "unsigned int& CrestPartData::id::Getter(CrestPartData*);" 
 1401DF3E0 "void CrestPartData::id::Setter(CrestPartData*, const unsigned int&);" 
 1401E7820 "bool& CrestPartData::isForeground::Getter(CrestPartData*);" 
 14478E1B0 "bool& CrestPartData::isEntitlement::Getter(CrestPartData*);" 
 144694AF0 "int CrestPartData::faction::Getter(CrestPartData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CrestPartData::entitlementId::Getter(CrestPartData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[111] C: "UiAnalyticsEvent"
T: 54742C8C-981B-46C0-98E0-C598729342B3, S: 8
 Ctor: 0, Dtor: 1446F4360, Alloc: 144918610, Dealloc: 144219300, RTTI: 0
m_constructors:
 1446F1660 "void UiAnalyticsEvent::Constructor(UiAnalyticsEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_methods:
 143831AD0 "void UiAnalyticsEvent::VoluntarySend(UiAnalyticsEvent*);" 
 14382FE80 "void UiAnalyticsEvent::Send(UiAnalyticsEvent*);" 
 14381E640 "void UiAnalyticsEvent::AddMetric(UiAnalyticsEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, double);" 
 14381D840 "void UiAnalyticsEvent::AddAttribute(UiAnalyticsEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[112] C: "ItemRarityData"
T: 70B5DE69-114F-41B5-993A-2249FDA496DE, S: 38
 Ctor: 1446F29D0, Dtor: 144282BA0, Alloc: 144917220, Dealloc: 140630440, RTTI: 14619D6D0
m_properties:
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ItemRarityData::locString::Getter(ItemRarityData*);" 
 1439CD010 "void ItemRarityData::locString::Setter(ItemRarityData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[113] C: "BaseGameChatMessage"
T: F3A1B293-E96F-49F9-A2BC-24BC75F8ACB7, S: 250
 Ctor: 144281100, Dtor: 140B5B0B0, Alloc: 1407ECB50, Dealloc: 1443B3880, RTTI: 14612A7D8
m_properties:
 144252990 "SimplePlayerIdentification BaseGameChatMessage::sender::Getter(const BaseGameChatMessage*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& BaseGameChatMessage::senderName::Getter(BaseGameChatMessage*);" 
 1442D0320 "bool& BaseGameChatMessage::isGameMasterClientMsg::Getter(BaseGameChatMessage*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& BaseGameChatMessage::recipientName::Getter(BaseGameChatMessage*);" 
 1442D0350 "bool& BaseGameChatMessage::showInFtue::Getter(BaseGameChatMessage*);" 
 144321000 "void BaseGameChatMessage::showInFtue::Setter(BaseGameChatMessage*, const bool&);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& BaseGameChatMessage::senderId::Getter(BaseGameChatMessage*);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& BaseGameChatMessage::body::Getter(BaseGameChatMessage*);" 
 141AAD9C0 "void BaseGameChatMessage::body::Setter(BaseGameChatMessage*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140541A30 "int BaseGameChatMessage::type::Getter(const BaseGameChatMessage*);" 
 143EB8380 "void BaseGameChatMessage::type::Setter(BaseGameChatMessage*, int);" 
 1442D0330 "bool& BaseGameChatMessage::isPingMsg::Getter(BaseGameChatMessage*);" 
 144320FF0 "void BaseGameChatMessage::isPingMsg::Setter(BaseGameChatMessage*, const bool&);" 
 
[114] C: "ItemSkinData"
T: 95487954-A20A-4F41-9104-FA41CFE46362, S: 308
 Ctor: 1442814D0, Dtor: 144282A60, Alloc: 144375C80, Dealloc: 1443B3D80, RTTI: 0
m_properties:
 14096B150 "int& ItemSkinData::indexId::Getter(ItemSkinData*);" 
 140AFC3C0 "Crc32& ItemSkinData::toItemId::Getter(ItemSkinData*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ItemSkinData::outfit::Getter(ItemSkinData*);" 
 141A5CE70 "bool& ItemSkinData::isEntitlement::Getter(ItemSkinData*);" 
 140D88940 "AZStd::unordered_set<Crc32, AZStd::hash<Crc32>, AZStd::equal_to ItemSkinData::fromItemIds::Getter(ItemSkinData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ItemSkinData::key::Getter(ItemSkinData*);" 
 
[115] C: "SubArmyItem"
T: DDB4162B-B7D0-4F41-9C3D-4CF6AEA3791E, S: 60
 Ctor: 144422830, Dtor: 144424F20, Alloc: 1445EEBC0, Dealloc: 1416658F0, RTTI: 1461A2AE8
m_properties:
 140AEE210 "int SubArmyItem::inviteStatus::Getter(SubArmyClientItem*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SubArmyItem::playerName::Getter(SubArmyClientItem*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SubArmyItem::twitchName::Getter(SubArmyClientItem*);" 
 140852A70 "int SubArmyItem::viewType::Getter(SubArmyClientItem*);" 
 
[116] C: "InitializeEntitlementTransactionRequest"
T: 6682289A-61C7-47CE-8D13-F99CA3A8DAAA, S: 220
 Ctor: 144281490, Dtor: 144282A50, Alloc: 1443752B0, Dealloc: 1443B3A00, RTTI: 1461B0FE0
m_properties:
 140C46640 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& InitializeEntitlementTransactionRequest::offerId::Getter(InitializeTransactionRequest*);" 
 141712400 "void InitializeEntitlementTransactionRequest::offerId::Setter(InitializeTransactionRequest*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143B72ED0 "AZStd::vector<TransactionEntitlement, allocator>& InitializeEntitlementTransactionRequest::exchangeInventoryItems::Getter(InitializeTransactionRequest*);" 
 144320F30 "void InitializeEntitlementTransactionRequest::exchangeInventoryItems::Setter(InitializeTransactionRequest*, const AZStd::vector<TransactionEntitlement, allocator>&);" 
 14167D080 "AZStd::vector<TransactionEntitlement, allocator>& InitializeEntitlementTransactionRequest::entitlements::Getter(InitializeTransactionRequest*);" 
 144320F10 "void InitializeEntitlementTransactionRequest::entitlements::Setter(InitializeTransactionRequest*, const AZStd::vector<TransactionEntitlement, allocator>&);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& InitializeEntitlementTransactionRequest::acceptLang::Getter(InitializeTransactionRequest*);" 
 1439CD010 "void InitializeEntitlementTransactionRequest::acceptLang::Setter(InitializeTransactionRequest*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141C8A130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& InitializeEntitlementTransactionRequest::productId::Getter(InitializeTransactionRequest*);" 
 143B08F70 "void InitializeEntitlementTransactionRequest::productId::Setter(InitializeTransactionRequest*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140AEE960 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& InitializeEntitlementTransactionRequest::inGameCurrencyAlias::Getter(InitializeTransactionRequest*);" 
 144321010 "void InitializeEntitlementTransactionRequest::inGameCurrencyAlias::Setter(InitializeTransactionRequest*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140C4E1A0 "int InitializeEntitlementTransactionRequest::transactionType::Getter(const InitializeTransactionRequest*);" 
 141712E30 "void InitializeEntitlementTransactionRequest::transactionType::Setter(InitializeTransactionRequest*, int);" 
 1410530F0 "AZ::Uuid& InitializeEntitlementTransactionRequest::requestId::Getter(InitializeTransactionRequest*);" 
 144320FC0 "void InitializeEntitlementTransactionRequest::requestId::Setter(InitializeTransactionRequest*, const AZ::Uuid&);" 
 140968720 "int& InitializeEntitlementTransactionRequest::expectedAmount::Getter(InitializeTransactionRequest*);" 
 144320F00 "void InitializeEntitlementTransactionRequest::expectedAmount::Setter(InitializeTransactionRequest*, const int&);" 
 140940080 "AZStd::vector<TransactionEntitlement, allocator>& InitializeEntitlementTransactionRequest::exchangeEntitlements::Getter(InitializeTransactionRequest*);" 
 144320F20 "void InitializeEntitlementTransactionRequest::exchangeEntitlements::Setter(InitializeTransactionRequest*, const AZStd::vector<TransactionEntitlement, allocator>&);" 
 
[117] C: "AZStd::unordered_map<Crc32, Crc32, AZStd::hash<Crc32>, AZStd::equal_to<Crc32>, allocator>"
T: 681B589F-DB42-5D86-B6FC-C4B62EBC5F19, S: 90
 Ctor: 144422E60, Dtor: 14030D390, Alloc: 1445F02A0, Dealloc: 144219100, RTTI: 0
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[118] C: "AZStd::vector<FictionalCurrencyPrice, allocator>"
T: B69F9C96-8955-5247-BBE2-706C81416E43, S: 20
 Ctor: 1401DF120, Dtor: 144282CC0, Alloc: 144376610, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1443D0280 "void AZStd::vector<FictionalCurrencyPrice, allocator>::pop_back(AZStd::vector<FictionalCurrencyPrice, allocator>*);" 
 1443CE250 "void AZStd::vector<FictionalCurrencyPrice, allocator>::clear(AZStd::vector<FictionalCurrencyPrice, allocator>*);" 
 144252860 "int AZStd::vector<FictionalCurrencyPrice, allocator>::size(AZStd::vector<FictionalCurrencyPrice, allocator>*);" 
 1443CE180 "FictionalCurrencyPrice& AZStd::vector<FictionalCurrencyPrice, allocator>::at(AZStd::vector<FictionalCurrencyPrice, allocator>*, AZ::u64);" 
 1443B52A0 "void AZStd::vector<FictionalCurrencyPrice, allocator>::insert(AZStd::vector<FictionalCurrencyPrice, allocator>*, int, FictionalCurrencyPrice&);" 
 1443D0630 "void AZStd::vector<FictionalCurrencyPrice, allocator>::push_back(AZStd::vector<FictionalCurrencyPrice, allocator>*, const FictionalCurrencyPrice&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[119] C: "CatalogFictionalPrice"
T: 60E9A3FE-55E2-4411-B2E9-4F1F707262A2, S: 90
 Ctor: 1442812F0, Dtor: 1442829F0, Alloc: 144375220, Dealloc: 1434F6720, RTTI: 1461B0FC8
m_methods:
 141F56440 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> CatalogFictionalPrice::ToString(FictionalCurrencyPrice*);" 
m_properties:
 140584310 "double& CatalogFictionalPrice::discountPercent::Getter(FictionalCurrencyPrice*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogFictionalPrice::currencyEntitlementAlias::Getter(FictionalCurrencyPrice*);" 
 140AF2E90 "unsigned int& CatalogFictionalPrice::originalPrice::Getter(FictionalCurrencyPrice*);" 
 141692540 "unsigned int& CatalogFictionalPrice::salesPrice::Getter(FictionalCurrencyPrice*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogFictionalPrice::currencyEntitlementId::Getter(FictionalCurrencyPrice*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogFictionalPrice::currencyEntitlementName::Getter(FictionalCurrencyPrice*);" 
 
[120] C: "CatalogPrice"
T: CF85DC13-13E7-4706-998A-4A5C21389A7D, S: 70
 Ctor: 1442815B0, Dtor: 144282B40, Alloc: 144375340, Dealloc: 1439DA540, RTTI: 1461B0FC0
m_methods:
 141F56710 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> CatalogPrice::ToString(Price*);" 
m_properties:
 1406414D0 "double& CatalogPrice::discountPercent::Getter(Price*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogPrice::currencyCode::Getter(Price*);" 
 140D88940 "double& CatalogPrice::originalPrice::Getter(Price*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogPrice::countryCode::Getter(Price*);" 
 14096B150 "double& CatalogPrice::salesPrice::Getter(Price*);" 
 
[121] C: "StoreProductData"
T: 64579988-62D8-4E30-AFA5-FA8C07544831, S: 120
 Ctor: 144281870, Dtor: 144282C00, Alloc: 144375F50, Dealloc: 144219700, RTTI: 0
m_properties:
 1406417C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StoreProductData::squareImage::Getter(StoreProductData*);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StoreProductData::description::Getter(StoreProductData*);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StoreProductData::key::Getter(StoreProductData*);" 
 140AFC3C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StoreProductData::thumbnailImage::Getter(StoreProductData*);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StoreProductData::displayName::Getter(StoreProductData*);" 
 1406499D0 "bool& StoreProductData::isEnabled::Getter(StoreProductData*);" 
 1406414E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StoreProductData::portraitImage::Getter(StoreProductData*);" 
 1403F1550 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StoreProductData::landscapeImage::Getter(StoreProductData*);" 
 
[122] C: "DataSheetReference"
T: E3EDC46A-92DC-49AD-904E-A0574397B9BA, S: 160
 Ctor: 1406D1C70, Dtor: 1401DF450, Alloc: 1406E56A0, Dealloc: 1406E7EF0, RTTI: 0
m_methods:
 1406CEBF0 "const char* DataSheetReference::GetValueString(const DataSheetReference*);" 
 1406CE8E0 "bool DataSheetReference::GetValueBool(const DataSheetReference*);" 
 1406CE870 "Crc32 DataSheetReference::GetRowNameCrc(const DataSheetReference*);" 
 1406CE940 "Crc32 DataSheetReference::GetColumnNameCrc(const DataSheetReference*);" 
 1406CE9E0 "float DataSheetReference::GetValueFloat(const DataSheetReference*);" 
 1406CE820 "const char* DataSheetReference::GetRowName(const DataSheetReference*);" 
 1406CEBB0 "const char* DataSheetReference::GetColumnName(const DataSheetReference*);" 
 1406CE960 "int DataSheetReference::GetValueInteger(const DataSheetReference*);" 
 1406CE890 "TypedIndex DataSheetReference::GetRowIndex(const DataSheetReference*);" 
 1406CEBD0 "TypedIndex DataSheetReference::GetColumnIndex(const DataSheetReference*);" 
 1406CED30 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> DataSheetReference::ToString(const DataSheetReference*);" 
 1406CE8D0 "bool DataSheetReference::IsValid(const DataSheetReference*);" 
 
[123] C: "EntitlementProduct"
T: 03DA8EF9-D6A9-4EBA-B894-BDB64E14BDEF, S: 68
 Ctor: 144281660, Dtor: 144282BD0, Alloc: 144375460, Dealloc: 144218780, RTTI: 14617A9E0
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& EntitlementProduct::productId::Getter(Product*);" 
 
[124] C: "AZStd::vector<TerritoryResidentData, allocator>"
T: 0C366CD5-5163-5883-9373-E26FDAB5828A, S: 20
 Ctor: 1401DF120, Dtor: 1444250D0, Alloc: 1445F0980, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693790 "void AZStd::vector<TerritoryResidentData, allocator>::pop_back(AZStd::vector<TerritoryResidentData, allocator>*);" 
 144691070 "void AZStd::vector<TerritoryResidentData, allocator>::clear(AZStd::vector<TerritoryResidentData, allocator>*);" 
 143EB8540 "int AZStd::vector<TerritoryResidentData, allocator>::size(AZStd::vector<TerritoryResidentData, allocator>*);" 
 14424FE00 "TerritoryResidentData& AZStd::vector<TerritoryResidentData, allocator>::at(AZStd::vector<TerritoryResidentData, allocator>*, AZ::u64);" 
 144667090 "void AZStd::vector<TerritoryResidentData, allocator>::insert(AZStd::vector<TerritoryResidentData, allocator>*, int, TerritoryResidentData&);" 
 144693D90 "void AZStd::vector<TerritoryResidentData, allocator>::push_back(AZStd::vector<TerritoryResidentData, allocator>*, const TerritoryResidentData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[125] C: "TerritoryProgressionProjectSummary"
T: 1C691FC1-73D8-4A6A-AD03-2D02406DA3D7, S: 18
 Ctor: 1446F2730, Dtor: 140190D00, Alloc: 144916EC0, Dealloc: 144663540, RTTI: 14618E708
m_methods:
 144694840 "TerritoryProgressionProjectSummary TerritoryProgressionProjectSummary::Clone(const TerritoryProgressionProjectSummary*);" 
m_properties:
 1401E7820 "Crc32& TerritoryProgressionProjectSummary::activeProjectId::Getter(TerritoryProgressionProjectSummary*);" 
 14028DC50 "void TerritoryProgressionProjectSummary::activeProjectId::Setter(TerritoryProgressionProjectSummary*, const Crc32&);" 
 14019D150 "int TerritoryProgressionProjectSummary::activeState::Getter(const TerritoryProgressionProjectSummary*);" 
 142BF6190 "int TerritoryProgressionProjectSummary::progressionType::Getter(const TerritoryProgressionProjectSummary*);" 
 
[126] C: "UiImageComponent"
T: BDBEFD23-DBB4-4726-A32D-4FEAC24E51F6, S: 340
 Ctor: 1413CAF00, Dtor: 1401DF450, Alloc: 141590CB0, Dealloc: 141665870, RTTI: 146149090
m_requestBuses:
 "UiImageBus"
 
[127] C: "CatalogEntitlement"
T: CAA9AA27-20B0-4D8E-A890-6FFD9A57D313, S: 88
 Ctor: 144281180, Dtor: 1442829D0, Alloc: 144375190, Dealloc: 1443B3980, RTTI: 1461B0FB8
m_properties:
 14096B150 "int& CatalogEntitlement::amount::Getter(Entitlement*);" 
 141AAD8F0 "void CatalogEntitlement::amount::Setter(Entitlement*, const int&);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogEntitlement::alias::Getter(Entitlement*);" 
 141AAD7E0 "void CatalogEntitlement::alias::Setter(Entitlement*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogEntitlement::id::Getter(Entitlement*);" 
 142F33410 "void CatalogEntitlement::id::Setter(Entitlement*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogEntitlement::metadata::Getter(Entitlement*);" 
 1440B4F60 "void CatalogEntitlement::metadata::Setter(Entitlement*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[128] C: "GearScoreRange"
T: D1465DE9-CCFF-4AF2-8C70-B8896D3BD5F2, S: 4
 Ctor: 1401DF1E0, Dtor: 140190D00, Alloc: 1449176A0, Dealloc: 1449A11C0, RTTI: 0
m_methods:
 1449A38F0 "unsigned short GearScoreRange::GetDelta(NumberRange*);" 
 1449A7860 "bool GearScoreRange::IsValid(NumberRange*);" 
m_properties:
 1401AD7A0 "unsigned short& GearScoreRange::minValue::Getter(NumberRange*);" 
 14453DA70 "void GearScoreRange::minValue::Setter(NumberRange*, const unsigned short&);" 
 1442D01C0 "unsigned short& GearScoreRange::maxValue::Getter(NumberRange*);" 
 144848110 "void GearScoreRange::maxValue::Setter(NumberRange*, const unsigned short&);" 
 
[129] C: "StaticEmoteData"
T: B6BAC035-CDFF-48DA-B60A-BD8464B7CE3F, S: 1A0
 Ctor: 1442816E0, Dtor: 144282BF0, Alloc: 144375E30, Dealloc: 1443B3F80, RTTI: 0
m_properties:
 1442D0210 "bool& StaticEmoteData::isPremiumEmote::Getter(StaticEmoteData*);" 
 140968720 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::secondSlashCommand::Getter(StaticEmoteData*);" 
 1404012A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::uiImageHiRes::Getter(StaticEmoteData*);" 
 140AEE960 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::slashCommand::Getter(StaticEmoteData*);" 
 141C8A130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::displayGroup::Getter(StaticEmoteData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::key::Getter(StaticEmoteData*);" 
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::displayDescription::Getter(StaticEmoteData*);" 
 142E637E0 "int& StaticEmoteData::displayPriority::Getter(StaticEmoteData*);" 
 1401AD7A0 "bool& StaticEmoteData::isValid::Getter(StaticEmoteData*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::displayName::Getter(StaticEmoteData*);" 
 1442D0220 "bool& StaticEmoteData::hasCooldown::Getter(StaticEmoteData*);" 
 140940080 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticEmoteData::uiImage::Getter(StaticEmoteData*);" 
 140916660 "Crc32& StaticEmoteData::id::Getter(StaticEmoteData*);" 
 1442D0200 "bool& StaticEmoteData::isEntitlement::Getter(StaticEmoteData*);" 
 
[130] C: "AZStd::vector<ObjectiveTaskInstanceId, allocator>"
T: B08BB1FB-DB18-529E-94A2-F595E3B4F61D, S: 20
 Ctor: 1401DF120, Dtor: 144424F60, Alloc: 144919C30, Dealloc: 1406305C0, RTTI: 0
m_methods:
 141D565E0 "void AZStd::vector<ObjectiveTaskInstanceId, allocator>::pop_back(AZStd::vector<ObjectiveTaskInstanceId, allocator>*);" 
 14069EE90 "void AZStd::vector<ObjectiveTaskInstanceId, allocator>::clear(AZStd::vector<ObjectiveTaskInstanceId, allocator>*);" 
 141946F60 "int AZStd::vector<ObjectiveTaskInstanceId, allocator>::size(AZStd::vector<ObjectiveTaskInstanceId, allocator>*);" 
 141D47110 "ObjectiveTaskInstanceId& AZStd::vector<ObjectiveTaskInstanceId, allocator>::at(AZStd::vector<ObjectiveTaskInstanceId, allocator>*, AZ::u64);" 
 1449A6880 "void AZStd::vector<ObjectiveTaskInstanceId, allocator>::insert(AZStd::vector<ObjectiveTaskInstanceId, allocator>*, int, ObjectiveTaskInstanceId&);" 
 1449DBA50 "void AZStd::vector<ObjectiveTaskInstanceId, allocator>::push_back(AZStd::vector<ObjectiveTaskInstanceId, allocator>*, const ObjectiveTaskInstanceId&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[131] C: "RegionMetadata"
T: 0C1E0870-1335-4D12-B2A9-E0030EE76FD0, S: 58
 Ctor: 143F10AC0, Dtor: 1429F46C0, Alloc: 14418B520, Dealloc: 144218A00, RTTI: 0
m_properties:
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RegionMetadata::name::Getter(ClusterDisplayMetadata*);" 
 142004F30 "void RegionMetadata::name::Setter(ClusterDisplayMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RegionMetadata::regionId::Getter(ClusterDisplayMetadata*);" 
 1403188A0 "void RegionMetadata::regionId::Setter(ClusterDisplayMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "double& RegionMetadata::latencyMs::Getter(ClusterDisplayMetadata*);" 
 1440B4F40 "void RegionMetadata::latencyMs::Setter(ClusterDisplayMetadata*, const double&);" 
 
[132] C: "EntitlementData"
T: 0C506B3A-D484-46A7-9DBA-D68F6FD968A4, S: 120
 Ctor: 144281200, Dtor: 1442829E0, Alloc: 144375B60, Dealloc: 144219700, RTTI: 0
m_properties:
 1442D0380 "bool& EntitlementData::isEnabled::Getter(EntitlementData*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& EntitlementData::displayName::Getter(EntitlementData*);" 
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& EntitlementData::entitlementInfo::Getter(EntitlementData*);" 
 140C46640 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& EntitlementData::icon::Getter(EntitlementData*);" 
 141C8A130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& EntitlementData::sourceType::Getter(EntitlementData*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& EntitlementData::description::Getter(EntitlementData*);" 
 140AEE960 "bool& EntitlementData::isConsumable::Getter(EntitlementData*);" 
 140EDDFE0 "int EntitlementData::rewardType::Getter(EntitlementData*);" 
 140AEC940 "AZStd::vector<Crc32, allocator>& EntitlementData::rewards::Getter(EntitlementData*);" 
 
[133] C: "AZStd::vector<PendingMergeEvent, allocator>"
T: 659F7706-91F6-5246-B014-EC80E6810B79, S: 20
 Ctor: 1401DF120, Dtor: 143F136C0, Alloc: 14418C4D0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251300 "void AZStd::vector<PendingMergeEvent, allocator>::pop_back(AZStd::vector<PendingMergeEvent, allocator>*);" 
 14424FF10 "void AZStd::vector<PendingMergeEvent, allocator>::clear(AZStd::vector<PendingMergeEvent, allocator>*);" 
 143EB7D70 "int AZStd::vector<PendingMergeEvent, allocator>::size(AZStd::vector<PendingMergeEvent, allocator>*);" 
 14424FE10 "PendingMergeEvent& AZStd::vector<PendingMergeEvent, allocator>::at(AZStd::vector<PendingMergeEvent, allocator>*, AZ::u64);" 
 14421DE60 "void AZStd::vector<PendingMergeEvent, allocator>::insert(AZStd::vector<PendingMergeEvent, allocator>*, int, PendingMergeEvent&);" 
 1442517C0 "void AZStd::vector<PendingMergeEvent, allocator>::push_back(AZStd::vector<PendingMergeEvent, allocator>*, const PendingMergeEvent&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[134] C: "AZStd::vector<ItemContainerSlot, allocator>"
T: 2DA7F2DF-ACB8-54FA-B5CE-E9DCD5C1C6E5, S: 20
 Ctor: 14370C150, Dtor: 14370C200, Alloc: 1437447D0, Dealloc: 14374BD50, RTTI: 0
m_methods:
 1437658C0 "void AZStd::vector<ItemContainerSlot, allocator>::pop_back(AZStd::vector<ItemContainerSlot, allocator>*);" 
 143762760 "void AZStd::vector<ItemContainerSlot, allocator>::clear(AZStd::vector<ItemContainerSlot, allocator>*);" 
 143701680 "int AZStd::vector<ItemContainerSlot, allocator>::size(AZStd::vector<ItemContainerSlot, allocator>*);" 
 143762690 "ItemContainerSlot& AZStd::vector<ItemContainerSlot, allocator>::at(AZStd::vector<ItemContainerSlot, allocator>*, AZ::u64);" 
 143751950 "void AZStd::vector<ItemContainerSlot, allocator>::insert(AZStd::vector<ItemContainerSlot, allocator>*, int, ItemContainerSlot&);" 
 1437665B0 "void AZStd::vector<ItemContainerSlot, allocator>::push_back(AZStd::vector<ItemContainerSlot, allocator>*, const ItemContainerSlot&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[135] C: "AZStd::vector<EntityId, allocator>"
T: 4841CFF0-7A5C-519C-BD16-D3625E99605E, S: 20
 Ctor: 1401DF120, Dtor: 140573E10, Alloc: 14060A0A0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<EntityId, allocator>::pop_back(AZStd::vector<EntityId, allocator>*);" 
 14069EE90 "void AZStd::vector<EntityId, allocator>::clear(AZStd::vector<EntityId, allocator>*);" 
 14045A440 "int AZStd::vector<EntityId, allocator>::size(AZStd::vector<EntityId, allocator>*);" 
 14031C0C0 "EntityId& AZStd::vector<EntityId, allocator>::at(AZStd::vector<EntityId, allocator>*, AZ::u64);" 
 14064B590 "void AZStd::vector<EntityId, allocator>::insert(AZStd::vector<EntityId, allocator>*, int, EntityId&);" 
 1406AE8D0 "void AZStd::vector<EntityId, allocator>::push_back(AZStd::vector<EntityId, allocator>*, const EntityId&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[136] C: "CharacterNameData"
T: C8CA8B0E-9F15-407B-8D53-8B842CBEFD38, S: C8
 Ctor: 143F11140, Dtor: 142A47DF0, Alloc: 14418B910, Dealloc: 144218F00, RTTI: 0
m_properties:
 1406414E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterNameData::name::Getter(ScriptCharacterNameData*);" 
 141714830 "void CharacterNameData::name::Setter(ScriptCharacterNameData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterNameData::personaId::Getter(ScriptCharacterNameData*);" 
 1403188A0 "void CharacterNameData::personaId::Setter(ScriptCharacterNameData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterNameData::worldId::Getter(ScriptCharacterNameData*);" 
 142004F30 "void CharacterNameData::worldId::Setter(ScriptCharacterNameData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterNameData::region::Getter(ScriptCharacterNameData*);" 
 142004F50 "void CharacterNameData::region::Setter(ScriptCharacterNameData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F1550 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterNameData::creationDate::Getter(ScriptCharacterNameData*);" 
 1417146E0 "void CharacterNameData::creationDate::Setter(ScriptCharacterNameData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[137] C: "TerritoryUpgradeData"
T: 27362F56-9317-40CE-8CAA-69D5D8F75450, S: 10
 Ctor: 1446F27C0, Dtor: 140190D00, Alloc: 144916FE0, Dealloc: 1406303C0, RTTI: 14618E700
m_methods:
 144694620 "TerritoryUpgradeData TerritoryUpgradeData::Clone(const TerritoryUpgradeData*);" 
m_properties:
 140402330 "int TerritoryUpgradeData::category::Getter(TerritoryUpgradeData*);" 
 140782520 "unsigned char& TerritoryUpgradeData::categoryLevel::Getter(TerritoryUpgradeData*);" 
 1440B50B0 "void TerritoryUpgradeData::categoryLevel::Setter(TerritoryUpgradeData*, const unsigned char&);" 
 
[138] C: "AZStd::vector<int, allocator>"
T: 85AFA5E8-AA5C-50A3-9CAB-B8C483DA88C5, S: 20
 Ctor: 1401DF120, Dtor: 142845130, Alloc: 142879980, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428A96F0 "void AZStd::vector<int, allocator>::pop_back(AZStd::vector<int, allocator>*);" 
 14069EE90 "void AZStd::vector<int, allocator>::clear(AZStd::vector<int, allocator>*);" 
 1428384E0 "int AZStd::vector<int, allocator>::size(AZStd::vector<int, allocator>*);" 
 1428A7A00 "int& AZStd::vector<int, allocator>::at(AZStd::vector<int, allocator>*, AZ::u64);" 
 1428954F0 "void AZStd::vector<int, allocator>::insert(AZStd::vector<int, allocator>*, int, int&);" 
 1428A9A10 "void AZStd::vector<int, allocator>::push_back(AZStd::vector<int, allocator>*, const int&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[139] C: "Debug"
T: FBAFA9F8-9861-41F9-A9EF-3B943B91FF4E, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140365B30, Dealloc: 1403D7900, RTTI: 0
m_methods:
 140453450 "void Debug::Warning(ScriptDataContext&);" 
 140451CC0 "void Debug::Assert(ScriptDataContext&);" 
 140451DC0 "void Debug::Log(ScriptDataContext&);" 
 140451CE0 "void Debug::Error(ScriptDataContext&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[140] C: "AZStd::vector<SteamPresenseFriendInfo, allocator>"
T: C90B9E42-AF54-5AD9-9BE3-370FA74F6520, S: 20
 Ctor: 1401DF120, Dtor: 1429F4740, Alloc: 14418C790, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142A32670 "void AZStd::vector<SteamPresenseFriendInfo, allocator>::pop_back(AZStd::vector<SteamPresenseFriendInfo, allocator>*);" 
 142A30F20 "void AZStd::vector<SteamPresenseFriendInfo, allocator>::clear(AZStd::vector<SteamPresenseFriendInfo, allocator>*);" 
 1429E8E30 "int AZStd::vector<SteamPresenseFriendInfo, allocator>::size(AZStd::vector<SteamPresenseFriendInfo, allocator>*);" 
 142A30EA0 "SteamPresenseFriendInfo& AZStd::vector<SteamPresenseFriendInfo, allocator>::at(AZStd::vector<SteamPresenseFriendInfo, allocator>*, AZ::u64);" 
 142A21C20 "void AZStd::vector<SteamPresenseFriendInfo, allocator>::insert(AZStd::vector<SteamPresenseFriendInfo, allocator>*, int, SteamPresenseFriendInfo&);" 
 142A32A50 "void AZStd::vector<SteamPresenseFriendInfo, allocator>::push_back(AZStd::vector<SteamPresenseFriendInfo, allocator>*, const SteamPresenseFriendInfo&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[141] C: "AZStd::vector<WarboardStatsEntry, allocator>"
T: D23D943C-449A-510D-ADBF-9B66433B1368, S: 20
 Ctor: 1401DF120, Dtor: 143F13900, Alloc: 14418CC60, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442514B0 "void AZStd::vector<WarboardStatsEntry, allocator>::pop_back(AZStd::vector<WarboardStatsEntry, allocator>*);" 
 144250080 "void AZStd::vector<WarboardStatsEntry, allocator>::clear(AZStd::vector<WarboardStatsEntry, allocator>*);" 
 143EB8050 "int AZStd::vector<WarboardStatsEntry, allocator>::size(AZStd::vector<WarboardStatsEntry, allocator>*);" 
 14424FE50 "WarboardStatsEntry& AZStd::vector<WarboardStatsEntry, allocator>::at(AZStd::vector<WarboardStatsEntry, allocator>*, AZ::u64);" 
 14421EB40 "void AZStd::vector<WarboardStatsEntry, allocator>::insert(AZStd::vector<WarboardStatsEntry, allocator>*, int, WarboardStatsEntry&);" 
 144251C40 "void AZStd::vector<WarboardStatsEntry, allocator>::push_back(AZStd::vector<WarboardStatsEntry, allocator>*, const WarboardStatsEntry&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[142] C: "WallClockTimePoint"
T: 24FBF222-8CF9-4539-B313-34726B8FC675, S: 10
 Ctor: 1446F2BC0, Dtor: 1401DF450, Alloc: 144917610, Dealloc: 1406303C0, RTTI: 14617ABD8
m_methods:
 141E859C0 "WallClockTimePoint WallClockTimePoint::AddDuration(WallClockTimePoint*, const Duration&);" 
 141F48160 "Duration WallClockTimePoint::SubtractSeconds(WallClockTimePoint*, const WallClockTimePoint&);" 
 141E85920 "Duration WallClockTimePoint::Subtract(WallClockTimePoint*, const WallClockTimePoint&);" 
 141E85960 "WallClockTimePoint WallClockTimePoint::SubtractDuration(WallClockTimePoint*, const Duration&);" 
 141F043F0 "WallClockTimePoint WallClockTimePoint::Now();" 
 141EEFC90 "Duration WallClockTimePoint::GetTimeSinceEpoc(WallClockTimePoint*);" 
 141E85AD0 "bool WallClockTimePoint::LessThan(WallClockTimePoint*, const WallClockTimePoint&);" 
 1449A7890 "bool WallClockTimePoint::IsZero(WallClockTimePoint*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[143] C: "AZStd::vector<AZ::Uuid, allocator>"
T: 3A9E52F9-1A46-5FC6-822A-249BBFB50C90, S: 20
 Ctor: 1401DF120, Dtor: 143F137F0, Alloc: 14418C840, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513D0 "void AZStd::vector<AZ::Uuid, allocator>::pop_back(AZStd::vector<AZ::Uuid, allocator>*);" 
 14069EE90 "void AZStd::vector<AZ::Uuid, allocator>::clear(AZStd::vector<AZ::Uuid, allocator>*);" 
 14045A450 "int AZStd::vector<AZ::Uuid, allocator>::size(AZStd::vector<AZ::Uuid, allocator>*);" 
 14031C0D0 "AZ::Uuid& AZStd::vector<AZ::Uuid, allocator>::at(AZStd::vector<AZ::Uuid, allocator>*, AZ::u64);" 
 14421E3F0 "void AZStd::vector<AZ::Uuid, allocator>::insert(AZStd::vector<AZ::Uuid, allocator>*, int, AZ::Uuid&);" 
 1437661C0 "void AZStd::vector<AZ::Uuid, allocator>::push_back(AZStd::vector<AZ::Uuid, allocator>*, const AZ::Uuid&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[144] C: "AZStd::vector<ScriptCharacterNameData, allocator>"
T: 861664A3-9103-5839-B1EF-6820DE91C208, S: 20
 Ctor: 1401DF120, Dtor: 1446F4540, Alloc: 1449194A0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAEE0 "void AZStd::vector<ScriptCharacterNameData, allocator>::pop_back(AZStd::vector<ScriptCharacterNameData, allocator>*);" 
 143894C20 "void AZStd::vector<ScriptCharacterNameData, allocator>::clear(AZStd::vector<ScriptCharacterNameData, allocator>*);" 
 144694B70 "int AZStd::vector<ScriptCharacterNameData, allocator>::size(AZStd::vector<ScriptCharacterNameData, allocator>*);" 
 1449D7500 "ScriptCharacterNameData& AZStd::vector<ScriptCharacterNameData, allocator>::at(AZStd::vector<ScriptCharacterNameData, allocator>*, AZ::u64);" 
 1449A5A80 "void AZStd::vector<ScriptCharacterNameData, allocator>::insert(AZStd::vector<ScriptCharacterNameData, allocator>*, int, ScriptCharacterNameData&);" 
 143896F50 "void AZStd::vector<ScriptCharacterNameData, allocator>::push_back(AZStd::vector<ScriptCharacterNameData, allocator>*, const ScriptCharacterNameData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[145] C: "WarPhaseData"
T: C903D6E9-4ECC-4805-A912-93612C2828AC, S: 30
 Ctor: 143F116B0, Dtor: 143F13540, Alloc: 14418AA20, Dealloc: 141C5E6E0, RTTI: 1461A3990
m_methods:
 140402330 "int WarPhaseData::GetWarPhase(WarPhaseData*);" 
 1403F11A0 "const WallClockTimePoint& WarPhaseData::GetPhaseEndTime(WarPhaseData*);" 
 1403EE8B0 "const Duration& WarPhaseData::GetPhaseDuration(WarPhaseData*);" 
 
[146] C: "AchievementData"
T: 52764E18-055E-4173-ADF3-53BB9E292B5A, S: 68
 Ctor: 1446F1CA0, Dtor: 144424EA0, Alloc: 144917890, Dealloc: 1443B4080, RTTI: 0
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AchievementData::name::Getter(AchievementData*);" 
 141AAD7E0 "void AchievementData::name::Setter(AchievementData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "Crc32& AchievementData::id::Getter(AchievementData*);" 
 1401DF3E0 "void AchievementData::id::Setter(AchievementData*, const Crc32&);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AchievementData::category::Getter(AchievementData*);" 
 143EB82E0 "void AchievementData::category::Setter(AchievementData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[147] C: "Material"
T: BF659DC6-ACDD-4062-A52E-4EC053286F4F, S: 8
 Ctor: 1419A7EF0, Dtor: 1419A8870, Alloc: 141BAAFB0, Dealloc: 140630340, RTTI: 0
m_methods:
 141C96520 "Vector3 Material::GetParamVector3(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141C35910 "MaterialHandle Material::Clone(MaterialHandle*);" 
 141CAAA00 "MaterialHandle Material::LoadByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141C963D0 "Color Material::GetParamColor(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141D37910 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Material::ToString(MaterialHandle*);" 
 141C963D0 "Vector4 Material::GetParamVector4(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141C964A0 "float Material::GetParamNumber(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141C7CDE0 "MaterialHandle Material::FindSubMaterial(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int, bool);" 
 141D27FD0 "void Material::SetParamVector4(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const Vector4&);" 
 141D27EC0 "void Material::SetParamNumber(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float);" 
 141C7CB30 "MaterialHandle Material::FindByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141D27F30 "void Material::SetParamVector3(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const Vector3&);" 
 141D27DD0 "void Material::SetParamColor(MaterialHandle*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const Color&);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[148] C: "AZStd::vector<WarPhaseData, allocator>"
T: 93A87A38-91A9-5DED-80DD-19C97A9353F9, S: 20
 Ctor: 1401DF120, Dtor: 143F13820, Alloc: 14418C8F0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513E0 "void AZStd::vector<WarPhaseData, allocator>::pop_back(AZStd::vector<WarPhaseData, allocator>*);" 
 14069EE90 "void AZStd::vector<WarPhaseData, allocator>::clear(AZStd::vector<WarPhaseData, allocator>*);" 
 1428384F0 "int AZStd::vector<WarPhaseData, allocator>::size(AZStd::vector<WarPhaseData, allocator>*);" 
 1428A7A10 "WarPhaseData& AZStd::vector<WarPhaseData, allocator>::at(AZStd::vector<WarPhaseData, allocator>*, AZ::u64);" 
 14421E4B0 "void AZStd::vector<WarPhaseData, allocator>::insert(AZStd::vector<WarPhaseData, allocator>*, int, WarPhaseData&);" 
 144251AD0 "void AZStd::vector<WarPhaseData, allocator>::push_back(AZStd::vector<WarPhaseData, allocator>*, const WarPhaseData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[149] C: "AZStd::vector<const char*, allocator>"
T: E97A92AA-AD4D-542C-9645-0CE24B725C2D, S: 20
 Ctor: 1401DF120, Dtor: 140573E10, Alloc: 142675A20, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<const char*, allocator>::pop_back(AZStd::vector<const char*, allocator>*);" 
 14069EE90 "void AZStd::vector<const char*, allocator>::clear(AZStd::vector<const char*, allocator>*);" 
 14045A440 "int AZStd::vector<const char*, allocator>::size(AZStd::vector<const char*, allocator>*);" 
 14031C0C0 "const char*& AZStd::vector<const char*, allocator>::at(AZStd::vector<const char*, allocator>*, AZ::u64);" 
 142684330 "void AZStd::vector<const char*, allocator>::insert(AZStd::vector<const char*, allocator>*, int, const char*&);" 
 1426964B0 "void AZStd::vector<const char*, allocator>::push_back(AZStd::vector<const char*, allocator>*, const const char*&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[150] C: "AZStd::vector<GuildPrivilegeData, allocator>"
T: C3D31DC1-00B7-5107-AD26-A8CFEDBC3811, S: 20
 Ctor: 1401DF120, Dtor: 143F135B0, Alloc: 14418C370, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251290 "void AZStd::vector<GuildPrivilegeData, allocator>::pop_back(AZStd::vector<GuildPrivilegeData, allocator>*);" 
 14424FE60 "void AZStd::vector<GuildPrivilegeData, allocator>::clear(AZStd::vector<GuildPrivilegeData, allocator>*);" 
 143EB8540 "int AZStd::vector<GuildPrivilegeData, allocator>::size(AZStd::vector<GuildPrivilegeData, allocator>*);" 
 14424FE00 "GuildPrivilegeData& AZStd::vector<GuildPrivilegeData, allocator>::at(AZStd::vector<GuildPrivilegeData, allocator>*, AZ::u64);" 
 14421DB90 "void AZStd::vector<GuildPrivilegeData, allocator>::insert(AZStd::vector<GuildPrivilegeData, allocator>*, int, GuildPrivilegeData&);" 
 144251530 "void AZStd::vector<GuildPrivilegeData, allocator>::push_back(AZStd::vector<GuildPrivilegeData, allocator>*, const GuildPrivilegeData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[151] C: "AZStd::pair<int, int>"
T: 64503325-ECF4-5F02-95F9-E37D00810E59, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 1445EF4C0, Dealloc: 141C5EAE0, RTTI: 0
m_properties:
 140923030 "int AZStd::pair<int, int>::first::Getter(AZStd::pair<int, int>*);" 
 1401DF3E0 "void AZStd::pair<int, int>::first::Setter(AZStd::pair<int, int>*, const int&);" 
 143B093F0 "int AZStd::pair<int, int>::second::Getter(AZStd::pair<int, int>*);" 
 1414D2A50 "void AZStd::pair<int, int>::second::Setter(AZStd::pair<int, int>*, const int&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[152] C: "CraftingGemSlotModifier"
T: 9F9254AB-946E-46F4-99E8-69749BF858C7, S: 38
 Ctor: 144281AA0, Dtor: 144282BA0, Alloc: 144375580, Dealloc: 140630440, RTTI: 14619D6F0
m_properties:
 1401E7820 "float& CraftingGemSlotModifier::resourcePercentageCeiling::Getter(CraftingGemSlotModifier*);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CraftingGemSlotModifier::locString::Getter(CraftingGemSlotModifier*);" 
 140782520 "float& CraftingGemSlotModifier::gemSlotBonus::Getter(CraftingGemSlotModifier*);" 
 
[153] C: "AsyncSocialWrapper<OtherGuildData >"
T: EBFE158A-CDA3-5B0B-A638-EB43065D64A8, S: 20
 Ctor: 143F10AA0, Dtor: 140190D00, Alloc: 14418B100, Dealloc: 1406307C0, RTTI: 0
m_properties:
 142F4BA10 "bool AsyncSocialWrapper<OtherGuildData >::dataReady::Getter(AsyncSocialWrapper<OtherGuildData >*);" 
 143EB85A0 "OtherGuildData AsyncSocialWrapper<OtherGuildData >::dataCopy::Getter(AsyncSocialWrapper<OtherGuildData >*);" 
 143EB7DA0 "AZ::Uuid AsyncSocialWrapper<OtherGuildData >::dataRequestId::Getter(AsyncSocialWrapper<OtherGuildData >*);" 
 14019CDD0 "const OtherGuildData* AsyncSocialWrapper<OtherGuildData >::data::Getter(AsyncSocialWrapper<OtherGuildData >*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[154] C: "AZStd::vector<Entitlement, allocator>"
T: 8AA13E96-B84C-51CD-A194-187173812196, S: 20
 Ctor: 1401DF120, Dtor: 144282CB0, Alloc: 144376560, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1443D0240 "void AZStd::vector<Entitlement, allocator>::pop_back(AZStd::vector<Entitlement, allocator>*);" 
 1443CE1F0 "void AZStd::vector<Entitlement, allocator>::clear(AZStd::vector<Entitlement, allocator>*);" 
 1442528F0 "int AZStd::vector<Entitlement, allocator>::size(AZStd::vector<Entitlement, allocator>*);" 
 1443CE170 "Entitlement& AZStd::vector<Entitlement, allocator>::at(AZStd::vector<Entitlement, allocator>*, AZ::u64);" 
 1443B5130 "void AZStd::vector<Entitlement, allocator>::insert(AZStd::vector<Entitlement, allocator>*, int, Entitlement&);" 
 1443D04E0 "void AZStd::vector<Entitlement, allocator>::push_back(AZStd::vector<Entitlement, allocator>*, const Entitlement&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[155] C: "MetaAchievementData"
T: ACF1DD8C-489E-4BDF-A1DF-0739AC1E54E3, S: 288
 Ctor: 143F11850, Dtor: 1401DF450, Alloc: 14418AC60, Dealloc: 144218900, RTTI: 1461B0F20
m_properties:
 140400B50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MetaAchievementData::hiddenText::Getter(MetaAchievementData*);" 
 1403F2E80 "AZStd::vector<Crc32, allocator>& MetaAchievementData::predecessorIds::Getter(MetaAchievementData*);" 
 1440B4F20 "void MetaAchievementData::predecessorIds::Setter(MetaAchievementData*, const AZStd::vector<Crc32, allocator>&);" 
 1401E7820 "Crc32& MetaAchievementData::id::Getter(MetaAchievementData*);" 
 1406499D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MetaAchievementData::icon::Getter(MetaAchievementData*);" 
 1403FAEA0 "int MetaAchievementData::type::Getter(MetaAchievementData*);" 
 1401E7830 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MetaAchievementData::entitlementID::Getter(MetaAchievementData*);" 
 143FBB910 "int& MetaAchievementData::total::Getter(MetaAchievementData*);" 
 1405842F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MetaAchievementData::title::Getter(MetaAchievementData*);" 
 1407E7270 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MetaAchievementData::description::Getter(MetaAchievementData*);" 
 140AFC3C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MetaAchievementData::tier::Getter(MetaAchievementData*);" 
 1406414D0 "Crc32& MetaAchievementData::category::Getter(MetaAchievementData*);" 
 141AAD930 "void MetaAchievementData::category::Setter(MetaAchievementData*, const Crc32&);" 
 143EB8340 "int MetaAchievementData::status::Getter(MetaAchievementData*);" 
 
[156] C: "LensFlareComponentState"
T: 1A63ED6B-C2D2-4D3C-AC27-5FDBF22B5B38, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141BAABC0, Dealloc: 141C5E360, RTTI: 0
m_properties:
 14018FB20 "int LensFlareComponentState::Off::Getter();" 
 140190B20 "int LensFlareComponentState::On::Getter();" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[157] C: "Math"
T: 35D44724-7470-42F2-A0E3-4E4349793B98, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 1403659B0, Dealloc: 1403D7900, RTTI: 0
m_methods:
 14019CDF0 "Crc32 Math::CreateCrc32(AZStd::basic_string_view<char, AZStd::char_traits<char>>);" 
 140408E40 "bool Math::IsClose(double, double, double);" 
 1401E95F0 "void Math::GetSinCos(VectorFloat, VectorFloat&, VectorFloat&);" 
 1403FAE70 "float Math::Mod(float, float);" 
 1401EA920 "bool Math::IsEven(int);" 
 1450C7CC0 "float Math::ArcTan(float);" 
 1401EA930 "bool Math::IsOdd(int);" 
 1450C7CAE "float Math::ArcCos(float);" 
 1450C7CB4 "float Math::ArcSin(float);" 
 1401E7C70 "float Math::Min(float, float);" 
 14019D220 "const char* Math::GetDebugString(const Crc32&);" 
 1450C7CD2 "float Math::Floor(float);" 
 1403DB600 "float Math::DegToRad(float);" 
 1450C7CDE "float Math::Sin(float);" 
 4FFD7E8B0 "float Math::Round(float);" 
 140439680 "float Math::RadToDeg(float);" 
 1450C7CC6 "float Math::Ceil(float);" 
 14040C840 "float Math::Lerp(float, float, float);" 
 1450C7CEA "float Math::Tan(float);" 
 1450C7CCC "float Math::Cos(float);" 
 1401E7840 "float Math::Clamp(float, float, float);" 
 140400EA0 "float Math::Sign(float);" 
 14040C8B0 "float Math::LerpInverse(float, float, float);" 
 1450C7CBA "float Math::ArcTan2(float, float);" 
 1450C7CE4 "float Math::Sqrt(float);" 
 1450C7CD8 "float Math::Pow(float, float);" 
 1401E7C50 "float Math::Max(float, float);" 
 
[158] C: "AsyncSocialWrapper<bool >"
T: 393B51E0-D3AF-52A9-97B5-406F8ACCB521, S: 20
 Ctor: 143F10AA0, Dtor: 140190D00, Alloc: 14418B470, Dealloc: 1406307C0, RTTI: 0
m_properties:
 142F4BA10 "bool AsyncSocialWrapper<bool >::dataReady::Getter(AsyncSocialWrapper<bool >*);" 
 1412644E0 "bool AsyncSocialWrapper<bool >::dataCopy::Getter(AsyncSocialWrapper<bool >*);" 
 143EB7DA0 "AZ::Uuid AsyncSocialWrapper<bool >::dataRequestId::Getter(AsyncSocialWrapper<bool >*);" 
 14019CDD0 "const bool* AsyncSocialWrapper<bool >::data::Getter(AsyncSocialWrapper<bool >*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[159] C: "AsyncSocialWrapper<unsigned int >"
T: 5BF6AEAF-82E2-581D-AFA0-85298AB8DAAA, S: 20
 Ctor: 143F10AA0, Dtor: 140190D00, Alloc: 14418B050, Dealloc: 1406307C0, RTTI: 0
m_properties:
 142F4BA10 "bool AsyncSocialWrapper<unsigned int >::dataReady::Getter(AsyncSocialWrapper<unsigned int >*);" 
 143EB7F30 "unsigned int AsyncSocialWrapper<unsigned int >::dataCopy::Getter(AsyncSocialWrapper<unsigned int >*);" 
 143EB7DA0 "AZ::Uuid AsyncSocialWrapper<unsigned int >::dataRequestId::Getter(AsyncSocialWrapper<unsigned int >*);" 
 14019CDD0 "const unsigned int* AsyncSocialWrapper<unsigned int >::data::Getter(AsyncSocialWrapper<unsigned int >*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[160] C: "MarkerParams"
T: 15989BE9-8533-4359-8EBF-AE7145903BE1, S: 90
 Ctor: 144281500, Dtor: 144282AE0, Alloc: 144375D10, Dealloc: 144219100, RTTI: 0
m_properties:
 141A5CE80 "float& MarkerParams::interactWorldZOffset::Getter(MarkerParams*);" 
 141AAD940 "void MarkerParams::interactWorldZOffset::Setter(MarkerParams*, const float&);" 
 1406414D0 "float& MarkerParams::delayBeforeApplyDeathOffset::Getter(MarkerParams*);" 
 141AAD930 "void MarkerParams::delayBeforeApplyDeathOffset::Setter(MarkerParams*, const float&);" 
 1442D0270 "bool& MarkerParams::clampYToScreen::Getter(MarkerParams*);" 
 144320F70 "void MarkerParams::clampYToScreen::Setter(MarkerParams*, const bool&);" 
 1442D0260 "bool& MarkerParams::keepOnScreen::Getter(MarkerParams*);" 
 144320F60 "void MarkerParams::keepOnScreen::Setter(MarkerParams*, const bool&);" 
 1403F2E80 "float& MarkerParams::maxAlpha::Getter(MarkerParams*);" 
 141AAD8B0 "void MarkerParams::maxAlpha::Setter(MarkerParams*, const float&);" 
 140F7A790 "float& MarkerParams::scaleStart::Getter(MarkerParams*);" 
 141AAD8E0 "void MarkerParams::scaleStart::Setter(MarkerParams*, const float&);" 
 140F82F50 "bool& MarkerParams::allowWorldOcclusion::Getter(MarkerParams*);" 
 144320F40 "void MarkerParams::allowWorldOcclusion::Setter(MarkerParams*, const bool&);" 
 140D88940 "float& MarkerParams::fadeDelta::Getter(MarkerParams*);" 
 141AAD910 "void MarkerParams::fadeDelta::Setter(MarkerParams*, const float&);" 
 1403F2E90 "float& MarkerParams::sY::Getter(MarkerParams*);" 
 141AAD890 "void MarkerParams::sY::Setter(MarkerParams*, const float&);" 
 140AF0A30 "float& MarkerParams::fadeStart::Getter(MarkerParams*);" 
 1440B4F30 "void MarkerParams::fadeStart::Setter(MarkerParams*, const float&);" 
 1442D0280 "float& MarkerParams::minAlpha::Getter(MarkerParams*);" 
 144320F80 "void MarkerParams::minAlpha::Setter(MarkerParams*, const float&);" 
 1403F11C0 "float& MarkerParams::maxScale::Getter(MarkerParams*);" 
 141AAD8D0 "void MarkerParams::maxScale::Setter(MarkerParams*, const float&);" 
 1417B81E0 "float& MarkerParams::wY::Getter(MarkerParams*);" 
 1417BFF20 "void MarkerParams::wY::Setter(MarkerParams*, const float&);" 
 1405842F0 "AZStd::vector<float, allocator>& MarkerParams::distancePriorities::Getter(MarkerParams*);" 
 144320FB0 "void MarkerParams::distancePriorities::Setter(MarkerParams*, const AZStd::vector<float, allocator>&);" 
 1417B81F0 "float& MarkerParams::sX::Getter(MarkerParams*);" 
 1417BFF40 "void MarkerParams::sX::Setter(MarkerParams*, const float&);" 
 14096B150 "float& MarkerParams::scaleDistance::Getter(MarkerParams*);" 
 141AAD8F0 "void MarkerParams::scaleDistance::Setter(MarkerParams*, const float&);" 
 1411D8420 "float& MarkerParams::deathPosOffset::Getter(MarkerParams*);" 
 141AAD920 "void MarkerParams::deathPosOffset::Setter(MarkerParams*, const float&);" 
 140780AF0 "float& MarkerParams::wX::Getter(MarkerParams*);" 
 1417BFF10 "void MarkerParams::wX::Setter(MarkerParams*, const float&);" 
 1403F11B0 "float& MarkerParams::wZ::Getter(MarkerParams*);" 
 1417BFF30 "void MarkerParams::wZ::Setter(MarkerParams*, const float&);" 
 1442D02A0 "float& MarkerParams::fadeDistance::Getter(MarkerParams*);" 
 144320F90 "void MarkerParams::fadeDistance::Setter(MarkerParams*, const float&);" 
 141A5CE70 "float& MarkerParams::minScale::Getter(MarkerParams*);" 
 141AAD900 "void MarkerParams::minScale::Setter(MarkerParams*, const float&);" 
 1442D0250 "bool& MarkerParams::offsetOnDeath::Getter(MarkerParams*);" 
 144320F50 "void MarkerParams::offsetOnDeath::Setter(MarkerParams*, const bool&);" 
 
[161] C: "AsyncSocialWrapper<GuildId >"
T: 88B7B050-0A57-557A-9E21-BE1B4BFAC9A6, S: 20
 Ctor: 143F10AA0, Dtor: 140190D00, Alloc: 14418B310, Dealloc: 1406307C0, RTTI: 0
m_properties:
 142F4BA10 "bool AsyncSocialWrapper<GuildId >::dataReady::Getter(AsyncSocialWrapper<GuildId >*);" 
 143EB7CD0 "GuildId AsyncSocialWrapper<GuildId >::dataCopy::Getter(AsyncSocialWrapper<GuildId >*);" 
 143EB7DA0 "AZ::Uuid AsyncSocialWrapper<GuildId >::dataRequestId::Getter(AsyncSocialWrapper<GuildId >*);" 
 14019CDD0 "const GuildId* AsyncSocialWrapper<GuildId >::data::Getter(AsyncSocialWrapper<GuildId >*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[162] C: "PostEffects"
T: 4DF6AE85-E113-4B7C-9BDC-BD07A457B057, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141344DF0, Dealloc: 141356C50, RTTI: 0
m_methods:
 141359C30 "void PostEffects::EnableEffectGroup(AZStd::basic_string_view<char, AZStd::char_traits<char>>);" 
 141357F00 "void PostEffects::DisableDirectionalBlur();" 
 14135A310 "void PostEffects::EnableSharpen(float);" 
 1413581E0 "void PostEffects::DisableRainDrops();" 
 14135A110 "void PostEffects::EnableRainDrops(float, float, float, float);" 
 141358270 "void PostEffects::DisableSharpen();" 
 1413593F0 "void PostEffects::EnableColorCorrection(float, float, float, float, float, float, float, float);" 
 141358A10 "void PostEffects::DisableVolumetricScattering();" 
 141359EF0 "void PostEffects::EnableRadialBlur(float, const Vector2&, float);" 
 141358150 "void PostEffects::DisableRadialBlur();" 
 141358AA0 "void PostEffects::DisableWaterDroplets();" 
 14135A3A0 "void PostEffects::EnableVisualArtifacts(float, float, float, float, float, float, float, float, float, float, const Color&, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141358B30 "void PostEffects::DisableWaterFlow();" 
 141359770 "void PostEffects::EnableDepthOfField(float, float, float, float, float);" 
 141357900 "void PostEffects::DisableBlur();" 
 14135AB50 "void PostEffects::EnableWaterDroplets(float);" 
 1413580C0 "void PostEffects::DisableGhosting();" 
 141358030 "void PostEffects::DisableFrost();" 
 141345600 "void PostEffects::ApplyEffectGroupAtPosition(AZStd::basic_string_view<char, AZStd::char_traits<char>>, const Vector3&);" 
 141357CD0 "void PostEffects::DisableDepthOfField();" 
 141359360 "void PostEffects::EnableBlur(float);" 
 141359B70 "void PostEffects::EnableDirectionalBlur(const Vector2&);" 
 141357990 "void PostEffects::DisableColorCorrection();" 
 141358300 "void PostEffects::DisableVisualArtifacts();" 
 14135A930 "void PostEffects::EnableVolumetricScattering(float, float, float, const Color&);" 
 141359D10 "void PostEffects::EnableFrost(float, float);" 
 14135ABE0 "void PostEffects::EnableWaterFlow(float);" 
 141357F90 "void PostEffects::DisableEffectGroup(AZStd::basic_string_view<char, AZStd::char_traits<char>>);" 
 141359E20 "void PostEffects::EnableGhosting(float);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[163] C: "AsyncSocialWrapper<PlayerIconData >"
T: 44364018-EE20-50C8-B0DF-9EA60A2D3784, S: 20
 Ctor: 143F10AA0, Dtor: 140190D00, Alloc: 14418B1B0, Dealloc: 1406307C0, RTTI: 0
m_properties:
 142F4BA10 "bool AsyncSocialWrapper<PlayerIconData >::dataReady::Getter(AsyncSocialWrapper<PlayerIconData >*);" 
 143EB7F10 "PlayerIconData AsyncSocialWrapper<PlayerIconData >::dataCopy::Getter(AsyncSocialWrapper<PlayerIconData >*);" 
 143EB7DA0 "AZ::Uuid AsyncSocialWrapper<PlayerIconData >::dataRequestId::Getter(AsyncSocialWrapper<PlayerIconData >*);" 
 14019CDD0 "const PlayerIconData* AsyncSocialWrapper<PlayerIconData >::data::Getter(AsyncSocialWrapper<PlayerIconData >*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[164] C: "StaticResourceData"
T: 72549E22-7F8C-4DE3-B101-220862EE60C8, S: 40
 Ctor: 1446F2650, Dtor: 140573E50, Alloc: 1449183D0, Dealloc: 144663E40, RTTI: 0
m_methods:
 140D40400 "bool StaticResourceData::IsValid(StaticResourceData*);" 
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticResourceData::key::Getter(StaticResourceData*);" 
 1403F11B0 "bool& StaticResourceData::isGem::Getter(StaticResourceData*);" 
 1401AD7A0 "Crc32& StaticResourceData::id::Getter(StaticResourceData*);" 
 14478DFC0 "bool& StaticResourceData::isAttributePerkItem::Getter(StaticResourceData*);" 
 14478DF90 "bool& StaticResourceData::isGemSlotPerkItem::Getter(StaticResourceData*);" 
 1417B81F0 "Crc32& StaticResourceData::perkBucketCrc::Getter(StaticResourceData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[165] C: "AZStd::vector<Product, allocator>"
T: ED685783-83A5-5F39-930A-107B6B9C33BD, S: 20
 Ctor: 1401DF120, Dtor: 144282CD0, Alloc: 1443766C0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1443D02C0 "void AZStd::vector<Product, allocator>::pop_back(AZStd::vector<Product, allocator>*);" 
 1443CE2B0 "void AZStd::vector<Product, allocator>::clear(AZStd::vector<Product, allocator>*);" 
 143EB7FF0 "int AZStd::vector<Product, allocator>::size(AZStd::vector<Product, allocator>*);" 
 14424FE20 "Product& AZStd::vector<Product, allocator>::at(AZStd::vector<Product, allocator>*, AZ::u64);" 
 1443B5420 "void AZStd::vector<Product, allocator>::insert(AZStd::vector<Product, allocator>*, int, Product&);" 
 1443D0790 "void AZStd::vector<Product, allocator>::push_back(AZStd::vector<Product, allocator>*, const Product&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[166] C: "ScriptBindScriptEvent"
T: 2ACBDACC-9F79-42D2-A488-4687EB1F3F13, S: 58
 Ctor: 1446F2B20, Dtor: 143F13460, Alloc: 144919CE0, Dealloc: 144218A00, RTTI: 0
m_properties:
 1401AD7A0 "EntityId& ScriptBindScriptEvent::entityId::Getter(ScriptBindScriptEvent*);" 
 1401DF2C0 "void ScriptBindScriptEvent::entityId::Setter(ScriptBindScriptEvent*, const EntityId&);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ScriptBindScriptEvent::scriptId::Getter(ScriptBindScriptEvent*);" 
 142F33410 "void ScriptBindScriptEvent::scriptId::Setter(ScriptBindScriptEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ScriptBindScriptEvent::eventName::Getter(ScriptBindScriptEvent*);" 
 141AAD7E0 "void ScriptBindScriptEvent::eventName::Setter(ScriptBindScriptEvent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[167] C: "InputChannel"
T: 1C88625D-D297-4A1C-AE07-E17F88D138F3, S: 38
 Ctor: 0, Dtor: 140573E40, Alloc: 140609E40, Dealloc: 140630440, RTTI: 146128570
m_properties:
 140541A60 "unsigned int InputChannel::deviceIndex::Getter(InputChannel*);" 
 1403F26A0 "const char* InputChannel::channelName::Getter(InputChannel*);" 
 140541B00 "const char* InputChannel::deviceName::Getter(InputChannel*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578130A8
 
[168] C: "AsyncSocialWrapper<SimplePlayerIdentification >"
T: 849ECE52-79EE-58D5-A3BE-651B5AF91191, S: 20
 Ctor: 143F10AA0, Dtor: 140190D00, Alloc: 14418B260, Dealloc: 1406307C0, RTTI: 0
m_properties:
 142F4BA10 "bool AsyncSocialWrapper<SimplePlayerIdentification >::dataReady::Getter(AsyncSocialWrapper<SimplePlayerIdentification >*);" 
 143EB7E30 "SimplePlayerIdentification AsyncSocialWrapper<SimplePlayerIdentification >::dataCopy::Getter(AsyncSocialWrapper<SimplePlayerIdentification >*);" 
 143EB7DA0 "AZ::Uuid AsyncSocialWrapper<SimplePlayerIdentification >::dataRequestId::Getter(AsyncSocialWrapper<SimplePlayerIdentification >*);" 
 14019CDD0 "const SimplePlayerIdentification* AsyncSocialWrapper<SimplePlayerIdentification >::data::Getter(AsyncSocialWrapper<SimplePlayerIdentification >*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[169] C: "RayCastConfiguration"
T: FC4E13C6-33D7-4015-91C4-ECBE08F7C5BE, S: 60
 Ctor: 1419A7CF0, Dtor: 1419A8820, Alloc: 141BAA980, Dealloc: 141C5E1E0, RTTI: 0
m_properties:
 140F7A790 "int& RayCastConfiguration::physicalEntityTypes::Getter(RayCastConfiguration*);" 
 141AAD8E0 "void RayCastConfiguration::physicalEntityTypes::Setter(RayCastConfiguration*, const int&);" 
 1403EE8B0 "float& RayCastConfiguration::maxDistance::Getter(RayCastConfiguration*);" 
 1417BFEF0 "void RayCastConfiguration::maxDistance::Setter(RayCastConfiguration*, const float&);" 
 140780AF0 "AZStd::vector<EntityId, allocator>& RayCastConfiguration::ignoreEntityIds::Getter(RayCastConfiguration*);" 
 141AAD860 "void RayCastConfiguration::ignoreEntityIds::Setter(RayCastConfiguration*, const AZStd::vector<EntityId, allocator>&);" 
 1403F11A0 "Vector3& RayCastConfiguration::direction::Getter(RayCastConfiguration*);" 
 140454D90 "void RayCastConfiguration::direction::Setter(RayCastConfiguration*, const Vector3&);" 
 1401AD7A0 "Vector3& RayCastConfiguration::origin::Getter(RayCastConfiguration*);" 
 1401DF220 "void RayCastConfiguration::origin::Setter(RayCastConfiguration*, const Vector3&);" 
 140AF0A30 "AZ::u64& RayCastConfiguration::maxHits::Getter(RayCastConfiguration*);" 
 141AAD8C0 "void RayCastConfiguration::maxHits::Setter(RayCastConfiguration*, const AZ::u64&);" 
 1403F11C0 "int& RayCastConfiguration::piercesSurfacesGreaterThan::Getter(RayCastConfiguration*);" 
 141AAD8D0 "void RayCastConfiguration::piercesSurfacesGreaterThan::Setter(RayCastConfiguration*, const int&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[170] C: "Platform"
T: 0635D08E-DDD2-48DE-A7AE-73CC563C57C3, S: 4
 Ctor: 1401DF1E0, Dtor: 140190D00, Alloc: 1403680A0, Dealloc: 1403D8A20, RTTI: 0
m_methods:
 1403FF7F0 "const char* Platform::GetName(int);" 
m_properties:
 140190B20 "int Platform::Current::Getter();" 
 14019D050 "int Platform::tvOS::Getter();" 
 14019D360 "int Platform::iOS::Getter();" 
 14019D270 "int Platform::Android64::Getter();" 
 14019CD90 "int Platform::Linux::Getter();" 
 14019D330 "int Platform::OSX::Getter();" 
 14019D060 "int Platform::PS3::Getter();" 
 14018FB20 "int Platform::Windows32::Getter();" 
 14019CEA0 "int Platform::Xbox360::Getter();" 
 140190B20 "int Platform::Windows64::Getter();" 
 14019CF00 "int Platform::PS4::Getter();" 
 14019CF10 "int Platform::XboxOne::Getter();" 
 14019D350 "int Platform::Wii::Getter();" 
 14019D2F0 "int Platform::Android::Getter();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[171] C: "TransactionEntitlement"
T: 676FEED4-C088-4948-8D1F-005A1CD86D6E, S: F0
 Ctor: 144281950, Dtor: 144282C10, Alloc: 1443754F0, Dealloc: 1443B3A80, RTTI: 1461B0FD8
m_methods:
 141EBB900 "TransactionEntitlement TransactionEntitlement::CreateWithId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 141EBB8A0 "TransactionEntitlement TransactionEntitlement::CreateWithAlias(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
m_properties:
 14096B150 "int& TransactionEntitlement::amount::Getter(TransactionEntitlement*);" 
 141AAD8F0 "void TransactionEntitlement::amount::Setter(TransactionEntitlement*, const int&);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TransactionEntitlement::alias::Getter(TransactionEntitlement*);" 
 141AAD7E0 "void TransactionEntitlement::alias::Setter(TransactionEntitlement*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TransactionEntitlement::id::Getter(TransactionEntitlement*);" 
 142F33410 "void TransactionEntitlement::id::Setter(TransactionEntitlement*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140D88940 "AZStd::unordered_map<AZStd::basic_string<char, AZStd::char_trai TransactionEntitlement::metadata::Getter(TransactionEntitlement*);" 
 144320FA0 "void TransactionEntitlement::metadata::Setter(TransactionEntitlement*, const AZStd::unordered_map<AZStd::basic_string<char, AZStd::cha);" 
 
[172] C: "LoreData"
T: A37B66D4-73AE-4785-9F66-F80355628164, S: 118
 Ctor: 144423210, Dtor: 1401DF450, Alloc: 1445EF160, Dealloc: 144663840, RTTI: 1461B1058
m_properties:
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LoreData::title::Getter(LoreData*);" 
 143EB82E0 "void LoreData::title::Setter(LoreData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LoreData::subtitle::Getter(LoreData*);" 
 1440B4F60 "void LoreData::subtitle::Setter(LoreData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140400B50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LoreData::imagePath::Getter(LoreData*);" 
 14171C3C0 "void LoreData::imagePath::Setter(LoreData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F3C00 "Crc32& LoreData::type::Getter(LoreData*);" 
 1440B5030 "void LoreData::type::Setter(LoreData*, const Crc32&);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LoreData::body::Getter(LoreData*);" 
 141AAD9C0 "void LoreData::body::Setter(LoreData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140F838C0 "Crc32& LoreData::achievementId::Getter(LoreData*);" 
 1440B5090 "void LoreData::achievementId::Setter(LoreData*, const Crc32&);" 
 140641920 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& LoreData::locationName::Getter(LoreData*);" 
 1417123C0 "void LoreData::locationName::Setter(LoreData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "unsigned short& LoreData::index::Getter(LoreData*);" 
 14453DD00 "void LoreData::index::Setter(LoreData*, const unsigned short&);" 
 1403F1560 "Vector2& LoreData::location::Getter(LoreData*);" 
 14453DAF0 "void LoreData::location::Setter(LoreData*, const Vector2&);" 
 
[173] C: "GuildTreasuryData"
T: 7FEFA5BC-1889-4A03-BA67-4F35EC95B2C2, S: 20
 Ctor: 143F10D70, Dtor: 140190D00, Alloc: 14418A3F0, Dealloc: 144218580, RTTI: 1461A2A98
m_methods:
 143EB7B20 "GuildTreasuryData GuildTreasuryData::Clone(const GuildTreasuryData*);" 
m_properties:
 1406413D0 "AZ::u64& GuildTreasuryData::dailyWithdrawalLimit::Getter(GuildTreasuryData*);" 
 1403F11A0 "AZ::u64& GuildTreasuryData::totalWithdrawnToday::Getter(GuildTreasuryData*);" 
 1401E7820 "AZ::u64& GuildTreasuryData::currentFunds::Getter(GuildTreasuryData*);" 
 
[174] C: "UiRect"
T: BA0569C3-E952-4581-BEF9-9F38B73E1D50, S: 10
 Ctor: 1403BE7D0, Dtor: 140190D00, Alloc: 1415915B0, Dealloc: 141665DF0, RTTI: 0
m_methods:
 141551930 "bool UiRect::Equal(Rect*, const Rect&);" 
 14167D740 "Vector2 UiRect::GetCenter(Rect*);" 
 1416839F0 "float UiRect::GetHeight(Rect*);" 
 14167D8B0 "float UiRect::GetCenterX(Rect*);" 
 141694770 "Vector2 UiRect::GetSize(Rect*);" 
 14169B480 "float UiRect::GetWidth(Rect*);" 
 14167D8D0 "float UiRect::GetCenterY(Rect*);" 
 1416B4320 "void UiRect::MoveBy(Rect*, Vector2);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[175] C: "TimeOfDay"
T: 4DBE4E73-196D-4DD6-8627-0693BD3072CE, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141344F10, Dealloc: 141356C50, RTTI: 0
m_methods:
 14135F5C0 "float TimeOfDay::GetTime();" 
 1413766D0 "void TimeOfDay::SetSpeed(float);" 
 1413769A0 "void TimeOfDay::SetTime(float, bool);" 
 14135F340 "float TimeOfDay::GetSpeed();" 
 141363F70 "bool TimeOfDay::LoadDefinitionFile(AZStd::basic_string_view<char, AZStd::char_traits<char>>);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[176] C: "UiVitalsStat"
T: EE96ACCD-D888-44B5-BEF2-CD8A0569908C, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 14418BF40, Dealloc: 141C5EAE0, RTTI: 0
m_properties:
 1401AD7A0 "float& UiVitalsStat::value::Getter(UiVitalsStat*);" 
 1401DF3E0 "void UiVitalsStat::value::Setter(UiVitalsStat*, const float&);" 
 140916660 "float& UiVitalsStat::maxValue::Getter(UiVitalsStat*);" 
 1414D2A50 "void UiVitalsStat::maxValue::Setter(UiVitalsStat*, const float&);" 
 
[177] C: "GuildRankData"
T: E756A995-93ED-F487-1A76-23B1AD74DF11, S: C8
 Ctor: 143F10C40, Dtor: 143F132A0, Alloc: 14418A2D0, Dealloc: 144218500, RTTI: 1461A26E0
m_properties:
 1403F11B0 "unsigned int& GuildRankData::securityLevel::Getter(GuildRankData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GuildRankData::name::Getter(GuildRankData*);" 
 
[178] C: "AZStd::vector<SubArmyClientItem, allocator>"
T: F674BF82-EAE0-569C-9460-83B78BF6B84B, S: 20
 Ctor: 1401DF120, Dtor: 144425070, Alloc: 1445F0820, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693760 "void AZStd::vector<SubArmyClientItem, allocator>::pop_back(AZStd::vector<SubArmyClientItem, allocator>*);" 
 144691040 "void AZStd::vector<SubArmyClientItem, allocator>::clear(AZStd::vector<SubArmyClientItem, allocator>*);" 
 142F4B9E0 "int AZStd::vector<SubArmyClientItem, allocator>::size(AZStd::vector<SubArmyClientItem, allocator>*);" 
 142FA6150 "SubArmyClientItem& AZStd::vector<SubArmyClientItem, allocator>::at(AZStd::vector<SubArmyClientItem, allocator>*, AZ::u64);" 
 144666D80 "void AZStd::vector<SubArmyClientItem, allocator>::insert(AZStd::vector<SubArmyClientItem, allocator>*, int, SubArmyClientItem&);" 
 144693B60 "void AZStd::vector<SubArmyClientItem, allocator>::push_back(AZStd::vector<SubArmyClientItem, allocator>*, const SubArmyClientItem&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[179] C: "UnifiedInteractOption"
T: D43E3D53-10B1-43EC-A503-E83D4208BC30, S: 50
 Ctor: 143F119A0, Dtor: 143F13910, Alloc: 14418CEC0, Dealloc: 142A1EE10, RTTI: 0
m_properties:
 140780AF0 "EntityId& UnifiedInteractOption::interactionEntityId::Getter(UnifiedInteractOption*);" 
 141270360 "void UnifiedInteractOption::interactionEntityId::Setter(UnifiedInteractOption*, const EntityId&);" 
 1403F11B0 "EntityId& UnifiedInteractOption::interactEntityId::Getter(UnifiedInteractOption*);" 
 141AAD880 "void UnifiedInteractOption::interactEntityId::Setter(UnifiedInteractOption*, const EntityId&);" 
 1401AD7A0 "Crc32& UnifiedInteractOption::interactionOptionId::Getter(UnifiedInteractOption*);" 
 1401DF3E0 "void UnifiedInteractOption::interactionOptionId::Setter(UnifiedInteractOption*, const Crc32&);" 
 140AF0A30 "Crc32& UnifiedInteractOption::requiredAchievement::Getter(UnifiedInteractOption*);" 
 1440B4F30 "void UnifiedInteractOption::requiredAchievement::Setter(UnifiedInteractOption*, const Crc32&);" 
 
[180] C: "AZStd::vector<PeriodicRewardsData, allocator>"
T: 0F0FE579-84C1-5DD6-92AD-34A8EF422333, S: 20
 Ctor: 1401DF120, Dtor: 1446F4520, Alloc: 144919290, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAE50 "void AZStd::vector<PeriodicRewardsData, allocator>::pop_back(AZStd::vector<PeriodicRewardsData, allocator>*);" 
 1449D7690 "void AZStd::vector<PeriodicRewardsData, allocator>::clear(AZStd::vector<PeriodicRewardsData, allocator>*);" 
 1443D0EC0 "int AZStd::vector<PeriodicRewardsData, allocator>::size(AZStd::vector<PeriodicRewardsData, allocator>*);" 
 144690F40 "PeriodicRewardsData& AZStd::vector<PeriodicRewardsData, allocator>::at(AZStd::vector<PeriodicRewardsData, allocator>*, AZ::u64);" 
 1449A5630 "void AZStd::vector<PeriodicRewardsData, allocator>::insert(AZStd::vector<PeriodicRewardsData, allocator>*, int, PeriodicRewardsData&);" 
 1449DB550 "void AZStd::vector<PeriodicRewardsData, allocator>::push_back(AZStd::vector<PeriodicRewardsData, allocator>*, const PeriodicRewardsData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[181] C: "AZStd::vector<PlayerDataView, allocator>"
T: D331D23F-D554-5E7D-BEE8-CB37CB828AF6, S: 20
 Ctor: 1401DF120, Dtor: 143F136D0, Alloc: 14418C580, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251330 "void AZStd::vector<PlayerDataView, allocator>::pop_back(AZStd::vector<PlayerDataView, allocator>*);" 
 14424FF70 "void AZStd::vector<PlayerDataView, allocator>::clear(AZStd::vector<PlayerDataView, allocator>*);" 
 142F4B970 "int AZStd::vector<PlayerDataView, allocator>::size(AZStd::vector<PlayerDataView, allocator>*);" 
 142FA6120 "PlayerDataView& AZStd::vector<PlayerDataView, allocator>::at(AZStd::vector<PlayerDataView, allocator>*, AZ::u64);" 
 14421DF90 "void AZStd::vector<PlayerDataView, allocator>::insert(AZStd::vector<PlayerDataView, allocator>*, int, PlayerDataView&);" 
 1435589B0 "void AZStd::vector<PlayerDataView, allocator>::push_back(AZStd::vector<PlayerDataView, allocator>*, const PlayerDataView&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[182] C: "ProfileHook"
T: C392F1E4-319A-40A6-BFEE-381A681F2DE8, S: 4
 Ctor: 143F11970, Dtor: 140190D00, Alloc: 14418CDA0, Dealloc: 1406E7CF0, RTTI: 0
 
[183] C: "AZStd::vector<AZ::s8, allocator>"
T: B67E8CBF-05C1-5939-8847-71F825417198, S: 20
 Ctor: 1401DF120, Dtor: 143F13580, Alloc: 14418C2C0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251280 "void AZStd::vector<AZ::s8, allocator>::pop_back(AZStd::vector<AZ::s8, allocator>*);" 
 14069EE90 "void AZStd::vector<AZ::s8, allocator>::clear(AZStd::vector<AZ::s8, allocator>*);" 
 14019D0F0 "int AZStd::vector<AZ::s8, allocator>::size(AZStd::vector<AZ::s8, allocator>*);" 
 14424FDF0 "AZ::s8& AZStd::vector<AZ::s8, allocator>::at(AZStd::vector<AZ::s8, allocator>*, AZ::u64);" 
 14421DAE0 "void AZStd::vector<AZ::s8, allocator>::insert(AZStd::vector<AZ::s8, allocator>*, int, AZ::s8&);" 
 1442514F0 "void AZStd::vector<AZ::s8, allocator>::push_back(AZStd::vector<AZ::s8, allocator>*, const AZ::s8&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[184] C: "AZStd::pair<Crc32, unsigned short>"
T: A6CAEA9B-C54D-5D78-AACA-BF66428D7912, S: 8
 Ctor: 1442810E0, Dtor: 140190D00, Alloc: 144375970, Dealloc: 141C5EAE0, RTTI: 0
m_properties:
 144252980 "Crc32 AZStd::pair<Crc32, unsigned short>::first::Getter(AZStd::pair<Crc32, unsigned short>*);" 
 1401DF3E0 "void AZStd::pair<Crc32, unsigned short>::first::Setter(AZStd::pair<Crc32, unsigned short>*, const Crc32&);" 
 144252920 "unsigned short AZStd::pair<Crc32, unsigned short>::second::Getter(AZStd::pair<Crc32, unsigned short>*);" 
 1442528B0 "void AZStd::pair<Crc32, unsigned short>::second::Setter(AZStd::pair<Crc32, unsigned short>*, const unsigned short&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[185] C: "UiSliderComponent"
T: 2913D76B-36A0-45E0-A104-33C668EB612D, S: 4D8
 Ctor: 1413CB050, Dtor: 1401DF450, Alloc: 141591130, Dealloc: 141665B70, RTTI: 1461490E8
m_requestBuses:
 "UiSliderBus"
 
[186] C: "PlayerDataView"
T: 7FEF73C8-7DDF-4299-8F58-474BCE765124, S: 130
 Ctor: 143F10F10, Dtor: 143F13300, Alloc: 14418A5A0, Dealloc: 144218680, RTTI: 1461A2AC8
m_methods:
 143EB7EF0 "PlayerDataView PlayerDataView::Clone(const PlayerDataView*);" 
m_properties:
 143FBB8B0 "bool& PlayerDataView::isOnline::Getter(PlayerDataView*);" 
 140AEC940 "GuildId& PlayerDataView::playerGuildId::Getter(PlayerDataView*);" 
 140968720 "unsigned int& PlayerDataView::playerLevel::Getter(PlayerDataView*);" 
 1406414D0 "PlayerIconData& PlayerDataView::playerIcon::Getter(PlayerDataView*);" 
 1403F11A0 "SimplePlayerIdentification& PlayerDataView::playerId::Getter(PlayerDataView*);" 
 143EB8180 "int PlayerDataView::playerFaction::Getter(PlayerDataView*);" 
 
[187] C: "DyeData"
T: 2FA619C9-D71E-4E88-9BE9-16056F7E38FA, S: 10
 Ctor: 144281160, Dtor: 140190D00, Alloc: 144375100, Dealloc: 1406303C0, RTTI: 146189CA0
m_constructors:
 144280E70 "void DyeData::Constructor(DyeData*, unsigned char, unsigned char, unsigned char, unsigned char);" 
m_methods:
 14267FF40 "const Color& DyeData::GetAColor(DyeData*);" 
 1426826C0 "const Color& DyeData::GetRColor(DyeData*);" 
 142680850 "const Color& DyeData::GetBColor(DyeData*);" 
 142681BE0 "const Color& DyeData::GetGColor(DyeData*);" 
m_properties:
 143FBB950 "unsigned char& DyeData::aColorId::Getter(DyeData*);" 
 1440B5020 "void DyeData::aColorId::Setter(DyeData*, const unsigned char&);" 
 1401E7820 "unsigned char& DyeData::rColorId::Getter(DyeData*);" 
 141AAD800 "void DyeData::rColorId::Setter(DyeData*, const unsigned char&);" 
 143FBB8A0 "unsigned char& DyeData::bColorId::Getter(DyeData*);" 
 1440B4CA0 "void DyeData::bColorId::Setter(DyeData*, const unsigned char&);" 
 143FBB890 "unsigned char& DyeData::gColorId::Getter(DyeData*);" 
 1440B4C80 "void DyeData::gColorId::Setter(DyeData*, const unsigned char&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[188] C: "ItemContainerSlot"
T: 1D6C8193-04CC-5F12-1ACF-81C6C425C6F0, S: 20
 Ctor: 143F11810, Dtor: 1401DF450, Alloc: 14418AB40, Dealloc: 144218580, RTTI: 14618B888
m_methods:
 1427A4230 "void ItemContainerSlot::PlayItemSound(ItemContainerSlot*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140ED6660 "unsigned char ItemContainerSlot::GetActionCausingSync(ItemContainerSlot*);" 
 14279FD70 "bool ItemContainerSlot::IsBoundToPlayer(ItemContainerSlot*);" 
 14279DB30 "EntityId ItemContainerSlot::GetSpawnedSliceRootId(ItemContainerSlot*);" 
 142799C40 "float ItemContainerSlot::GetCoreDamage(ItemContainerSlot*, EntityId);" 
 142799910 "UiArmorAttributes ItemContainerSlot::GetArmorAttributes(ItemContainerSlot*);" 
 14279E060 "UiWeaponAttributes ItemContainerSlot::GetWeaponAttributes(ItemContainerSlot*);" 
 142799A50 "unsigned int ItemContainerSlot::GetContainerChrono(ItemContainerSlot*);" 
 14279C430 "unsigned int ItemContainerSlot::GetMaxStackSize(ItemContainerSlot*);" 
 142799FF0 "const DyeData& ItemContainerSlot::GetDyeData(ItemContainerSlot*);" 
 142799A20 "float ItemContainerSlot::GetBaseDamage(ItemContainerSlot*);" 
 14279DD30 "int ItemContainerSlot::GetTierNumber(ItemContainerSlot*);" 
 14279B5B0 "AZ::Uuid ItemContainerSlot::GetItemInstanceId(ItemContainerSlot*);" 
 14279FE70 "bool ItemContainerSlot::IsEquippable(ItemContainerSlot*);" 
 142794530 "bool ItemContainerSlot::CanRepairItem(ItemContainerSlot*);" 
 14279F230 "bool ItemContainerSlot::HasDyeData(ItemContainerSlot*);" 
 1427A0060 "bool ItemContainerSlot::IsNonRemovableFromInventory(ItemContainerSlot*);" 
 142794640 "bool ItemContainerSlot::CanUseItem(ItemContainerSlot*, const EntityId&);" 
 1427A0390 "bool ItemContainerSlot::IsQuickSlottable(ItemContainerSlot*);" 
 14279F200 "bool ItemContainerSlot::HasDurability(ItemContainerSlot*);" 
 1427940D0 "bool ItemContainerSlot::CanEquipItem(ItemContainerSlot*, const EntityId&);" 
 1427A00C0 "bool ItemContainerSlot::IsNonRemovableFromPlayer(ItemContainerSlot*, bool);" 
 14279F4E0 "bool ItemContainerSlot::HasItemClass(ItemContainerSlot*, AZ::u64);" 
 142794130 "bool ItemContainerSlot::CanEquipInSlot(ItemContainerSlot*, int);" 
 1427998A0 "UiAmmoAttributes ItemContainerSlot::GetAmmoAttributes(ItemContainerSlot*);" 
 14279B5F0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc ItemContainerSlot::GetItemName(ItemContainerSlot*);" 
 14279E0E0 "int ItemContainerSlot::GetWeight(ItemContainerSlot*);" 
 14279F250 "bool ItemContainerSlot::HasEntitlements(ItemContainerSlot*);" 
 14279FE90 "bool ItemContainerSlot::IsEquipped(ItemContainerSlot*);" 
 14279C3F0 "unsigned int ItemContainerSlot::GetMaxDurability(ItemContainerSlot*);" 
 14279FE50 "bool ItemContainerSlot::IsConsumable(ItemContainerSlot*);" 
 143EB7D50 "ItemContainerSlot ItemContainerSlot::Clone(const ItemContainerSlot*);" 
 14279A130 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> ItemContainerSlot::GetEquipSlots(ItemContainerSlot*);" 
 1427A0920 "bool ItemContainerSlot::IsValid(ItemContainerSlot*);" 
 142794620 "bool ItemContainerSlot::CanSalvageItem(ItemContainerSlot*);" 
 14288D130 "const ItemDescriptor ItemContainerSlot::GetItemDescriptor(ItemContainerSlot*);" 
 14279FD40 "bool ItemContainerSlot::IsBindOnEquip(ItemContainerSlot*);" 
 1427998F0 "AZ::u64 ItemContainerSlot::GetAmmoType(ItemContainerSlot*);" 
 1427A03B0 "bool ItemContainerSlot::IsSellable(ItemContainerSlot*);" 
 14279A380 "float ItemContainerSlot::GetGearScoreRangeMod(ItemContainerSlot*);" 
 14279B930 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ItemContainerSlot::GetJson(ItemContainerSlot*);" 
 14279B570 "Crc32 ItemContainerSlot::GetItemId(ItemContainerSlot*);" 
 14279A920 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc ItemContainerSlot::GetIconPath(ItemContainerSlot*);" 
 14279CE30 "unsigned int ItemContainerSlot::GetOnRepairMaxDurabilityPenalty(ItemContainerSlot*);" 
 14279FD50 "bool ItemContainerSlot::IsBlueprint(ItemContainerSlot*);" 
 14279CE10 "float ItemContainerSlot::GetOnDeathDurabilityPenalty(ItemContainerSlot*);" 
 14279FDF0 "bool ItemContainerSlot::IsBroken(ItemContainerSlot*);" 
 14279D860 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc ItemContainerSlot::GetRepairRecipe(ItemContainerSlot*);" 
 1427A94A0 "bool ItemContainerSlot::ShouldConfirmBeforeUse(ItemContainerSlot*);" 
 14279FE30 "bool ItemContainerSlot::IsConfirmDestroy(ItemContainerSlot*);" 
 142790950 "bool ItemContainerSlot::Equal(ItemContainerSlot*, const ItemContainerSlot&);" 
 14279B910 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc ItemContainerSlot::GetItemType(ItemContainerSlot*);" 
 142799F30 "unsigned int ItemContainerSlot::GetDurability(ItemContainerSlot*);" 
 14279DBE0 "unsigned int ItemContainerSlot::GetStackSize(ItemContainerSlot*);" 
 142799F70 "float ItemContainerSlot::GetDurabilityPercent(ItemContainerSlot*);" 
 14279FF70 "bool ItemContainerSlot::IsLocked(ItemContainerSlot*);" 
 1427940B0 "bool ItemContainerSlot::CanBeLocked(ItemContainerSlot*);" 
 14279D880 "const Crc32 ItemContainerSlot::GetResourceGemPerkForItem(ItemContainerSlot*, Crc32);" 
 
[189] C: "ContractCompletionParams"
T: FD73E0CD-C487-4091-B7DE-3FCDA1357237, S: D8
 Ctor: 144421D90, Dtor: 144424BD0, Alloc: 1445EE620, Dealloc: 1446634C0, RTTI: 14618C160
m_properties:
 1406413D0 "ItemDescriptor& ContractCompletionParams::itemDescriptor::Getter(ContractCompletionParams*);" 
 14453DBC0 "void ContractCompletionParams::itemDescriptor::Setter(ContractCompletionParams*, const ItemDescriptor&);" 
 140402330 "int ContractCompletionParams::type::Getter(const ContractCompletionParams*);" 
 14108B590 "void ContractCompletionParams::type::Setter(ContractCompletionParams*, int);" 
 14019D150 "int ContractCompletionParams::reason::Getter(const ContractCompletionParams*);" 
 14081A4F0 "void ContractCompletionParams::reason::Setter(ContractCompletionParams*, int);" 
 140782520 "int& ContractCompletionParams::count::Getter(ContractCompletionParams*);" 
 1414D2A60 "void ContractCompletionParams::count::Setter(ContractCompletionParams*, const int&);" 
 
[190] C: "ItemDescriptor"
T: E1DE5E43-3921-C70C-FEEB-8061FF7CE1D5, S: C0
 Ctor: 143F11830, Dtor: 1401DF450, Alloc: 14418ABD0, Dealloc: 144218880, RTTI: 14618B8C8
m_constructors:
 143F0F460 "void ItemDescriptor::Constructor(ItemDescriptor*, Crc32, int);" 
m_methods:
 142E92BC0 "float ItemDescriptor::GetEstimatedConsumablePotency(ItemDescriptor*, bool);" 
 142E9F3D0 "void ItemDescriptor::SetPerks(ItemDescriptor*, const AZStd::vector<Crc32, allocator>&);" 
 142E95D80 "const Crc32 ItemDescriptor::GetPerk(ItemDescriptor*, int);" 
 142E95DC0 "const unsigned int ItemDescriptor::GetPerkCount(ItemDescriptor*);" 
 142EA0EF0 "bool ItemDescriptor::UsesRarity(ItemDescriptor*);" 
 142E95AE0 "int ItemDescriptor::GetPaperdollSlot(ItemDescriptor*);" 
 142E93040 "unsigned short ItemDescriptor::GetGearScore(ItemDescriptor*);" 
 142E969E0 "UiWeaponAttributes ItemDescriptor::GetWeaponAttributes(ItemDescriptor*);" 
 142E96080 "unsigned char ItemDescriptor::GetRarityLevel(ItemDescriptor*);" 
 142E930B0 "Crc32 ItemDescriptor::GetGemPerk(ItemDescriptor*);" 
 142E93640 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ItemDescriptor::GetItemDisplayName(ItemDescriptor*);" 
 142E93A60 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ItemDescriptor::GetJson(ItemDescriptor*);" 
 142E930A0 "float ItemDescriptor::GetGearScoreRangeMod(ItemDescriptor*, bool);" 
 142E92EB0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc ItemDescriptor::GetFullName(ItemDescriptor*);" 
 141699B00 "bool ItemDescriptor::IsLootTable(ItemDescriptor*);" 
 142E98BF0 "bool ItemDescriptor::MatchesDescriptorExactly(ItemDescriptor*, const ItemDescriptor&, bool);" 
 14040AF90 "bool ItemDescriptor::IsValid(ItemDescriptor*);" 
 142E936A0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc ItemDescriptor::GetItemKey(ItemDescriptor*);" 
 142E913E0 "float ItemDescriptor::GetCoreDamageForOwner(ItemDescriptor*, EntityId, bool, int);" 
 142E90EA0 "UiAmmoAttributes ItemDescriptor::GetAmmoAttributes(ItemDescriptor*);" 
 142E97110 "bool ItemDescriptor::HasItemClass(ItemDescriptor*, AZ::u64);" 
 142E8B8E0 "void ItemDescriptor::ApplyStaticPerkSettings(ItemDescriptor*);" 
 142E91AE0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ItemDescriptor::GetDisplayName(ItemDescriptor*);" 
 142EA0EC0 "bool ItemDescriptor::UsesGearScore(ItemDescriptor*);" 
 142E90FF0 "UiArmorAttributes ItemDescriptor::GetArmorAttributes(ItemDescriptor*);" 
 142E98AF0 "bool ItemDescriptor::MatchesDescriptor(ItemDescriptor*, const ItemDescriptor&);" 
 142E96E40 "int ItemDescriptor::GetWeight(ItemDescriptor*);" 
 142E8C240 "void ItemDescriptor::Clear(ItemDescriptor*);" 
 142E951B0 "int ItemDescriptor::GetLevelRequirement(ItemDescriptor*);" 
m_properties:
 1401E7820 "Crc32& ItemDescriptor::itemId::Getter(ItemDescriptor*);" 
 14028DC50 "void ItemDescriptor::itemId::Setter(ItemDescriptor*, const Crc32&);" 
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ItemDescriptor::slotIndex::Getter(ItemDescriptor*);" 
 14380DF20 "void ItemDescriptor::slotIndex::Setter(ItemDescriptor*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F2E90 "unsigned int& ItemDescriptor::quantity::Getter(ItemDescriptor*);" 
 141AAD890 "void ItemDescriptor::quantity::Setter(ItemDescriptor*, const unsigned int&);" 
 140782520 "unsigned short& ItemDescriptor::gearScore::Getter(ItemDescriptor*);" 
 1440B50A0 "void ItemDescriptor::gearScore::Setter(ItemDescriptor*, const unsigned short&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[191] C: "StaminaState"
T: B14BE320-96D3-4852-8C50-7D15C1B20BD5, S: 20
 Ctor: 144423580, Dtor: 140190D00, Alloc: 1445EF430, Dealloc: 144218580, RTTI: 1461A8CA0
m_methods:
 1443D10D0 "float StaminaState::GetStaminaPercent(const StaminaState*);" 
 
[192] C: "SimpleGuildView"
T: 7FFB1DC2-2AF0-4D36-BF17-179B47CFC412, S: 60
 Ctor: 143F111C0, Dtor: 143F133F0, Alloc: 14418A900, Dealloc: 141C5E1E0, RTTI: 1461A2AD0
m_methods:
 143EB7F40 "SimpleGuildView SimpleGuildView::Clone(const SimpleGuildView*);" 
m_properties:
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimpleGuildView::guildName::Getter(SimpleGuildView*);" 
 14096B150 "unsigned int& SimpleGuildView::index::Getter(SimpleGuildView*);" 
 1403F11A0 "GuildId& SimpleGuildView::guildId::Getter(SimpleGuildView*);" 
 
[193] C: "UiOwnershipBind"
T: F26DC19B-BE5C-4286-8EDB-306AAE2455CD, S: E0
 Ctor: 143F11690, Dtor: 140BEB930, Alloc: 14418BEB0, Dealloc: 144219600, RTTI: 0
m_methods:
 1403F11A0 "const UiOwnership& UiOwnershipBind::GetOwnership(const UiOwnershipBind*);" 
m_properties:
 140C46640 "EntityId& UiOwnershipBind::ownershipBindEntityId::Getter(UiOwnershipBind*);" 
 1440B50C0 "void UiOwnershipBind::ownershipBindEntityId::Setter(UiOwnershipBind*, const EntityId&);" 
 
[194] C: "CompletedTerritoryProgressionData"
T: 98597765-F094-4153-80A1-7E3A61D9FC2F, S: 20
 Ctor: 144421D50, Dtor: 144424BC0, Alloc: 1445EE590, Dealloc: 144218580, RTTI: 146185250
m_properties:
 1401E7820 "Crc32& CompletedTerritoryProgressionData::projectId::Getter(CompletedTerritoryProgressionData*);" 
 14028DC50 "void CompletedTerritoryProgressionData::projectId::Setter(CompletedTerritoryProgressionData*, const Crc32&);" 
 1403F11A0 "WallClockTimePoint& CompletedTerritoryProgressionData::expirationTime::Getter(CompletedTerritoryProgressionData*);" 
 14453DA80 "void CompletedTerritoryProgressionData::expirationTime::Setter(CompletedTerritoryProgressionData*, const WallClockTimePoint&);" 
 
[195] C: "IngredientEntry"
T: 3259301F-74CA-479B-97E8-78693A76F4E0, S: 10
 Ctor: 143F117E0, Dtor: 140190D00, Alloc: 14418AAB0, Dealloc: 1406303C0, RTTI: 14618CB00
m_methods:
 143AB96B0 "ItemDescriptor IngredientEntry::CreateItemDescriptor(IngredientEntry*);" 
 143ABC6E0 "bool IngredientEntry::IsItem(IngredientEntry*);" 
 143ABC6C0 "bool IngredientEntry::IsCurrency(IngredientEntry*);" 
m_properties:
 14040B9C0 "int IngredientEntry::type::Getter(const IngredientEntry*);" 
 140C94FC0 "void IngredientEntry::type::Setter(IngredientEntry*, int);" 
 140782520 "Crc32& IngredientEntry::ingredientId::Getter(IngredientEntry*);" 
 1414D2A60 "void IngredientEntry::ingredientId::Setter(IngredientEntry*, const Crc32&);" 
 143FBB8A0 "unsigned short& IngredientEntry::quantity::Getter(IngredientEntry*);" 
 1440B4C90 "void IngredientEntry::quantity::Setter(IngredientEntry*, const unsigned short&);" 
 
[196] C: "StaticItemData"
T: A580940B-F96B-4962-99C7-B1AE11EC6094, S: 550
 Ctor: 1446F25F0, Dtor: 1446F4310, Alloc: 144916E30, Dealloc: 1449A0F40, RTTI: 14618C9A8
m_methods:
 143A72D90 "unsigned int StaticItemData::GetPerkCount(StaticItemData*);" 
 143A728D0 "unsigned int StaticItemData::GetNumPossibleInherentPerks(StaticItemData*);" 
 143A73E70 "bool StaticItemData::HasGem(StaticItemData*);" 
 143A72DB0 "Crc32 StaticItemData::GetPerkId(StaticItemData*, unsigned int);" 
 1449A7880 "bool StaticItemData::IsValid(StaticItemData*);" 
 143A73E40 "bool StaticItemData::HasDyeSlots(StaticItemData*);" 
 143A72C10 "unsigned int StaticItemData::GetPerkBucketCount(StaticItemData*);" 
m_properties:
 143B72E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::category::Getter(StaticItemData*);" 
 14478E0B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::magicAffix::Getter(StaticItemData*);" 
 14478E080 "bool& StaticItemData::useTypeAffix::Getter(StaticItemData*);" 
 14478E0C0 "bool& StaticItemData::hideInLootTicker::Getter(StaticItemData*);" 
 14478E110 "bool& StaticItemData::aDyeSlotDisabled::Getter(StaticItemData*);" 
 1432C7E70 "int& StaticItemData::tier::Getter(StaticItemData*);" 
 1406414D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::description::Getter(StaticItemData*);" 
 14478E0A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::typeAffix::Getter(StaticItemData*);" 
 1442D0230 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::family::Getter(StaticItemData*);" 
 14478DFB0 "int& StaticItemData::weight::Getter(StaticItemData*);" 
 14478E070 "bool& StaticItemData::useMaterialAffix::Getter(StaticItemData*);" 
 140ED5EE0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::itemType::Getter(StaticItemData*);" 
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::displayName::Getter(StaticItemData*);" 
 14478DF50 "bool& StaticItemData::canHavePerks::Getter(StaticItemData*);" 
 1417B81C0 "Crc32& StaticItemData::id::Getter(StaticItemData*);" 
 1410530F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::icon::Getter(StaticItemData*);" 
 14167B890 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::group::Getter(StaticItemData*);" 
 14478E0F0 "bool& StaticItemData::gDyeSlotDisabled::Getter(StaticItemData*);" 
 1406413D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::key::Getter(StaticItemData*);" 
 14478E0D0 "bool& StaticItemData::hideFromRewardOpenPopup::Getter(StaticItemData*);" 
 14478DEB0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::itemTypeDisplayName::Getter(StaticItemData*);" 
 14478DFF0 "bool& StaticItemData::confirmDestroy::Getter(StaticItemData*);" 
 14478E090 "bool& StaticItemData::useMagicAffix::Getter(StaticItemData*);" 
 14309FA60 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticItemData::materialAffix::Getter(StaticItemData*);" 
 14478DFD0 "bool& StaticItemData::nonremovable::Getter(StaticItemData*);" 
 14478DF40 "NumberRange& StaticItemData::gearScoreRange::Getter(StaticItemData*);" 
 1432C7F80 "bool& StaticItemData::bindOnPickup::Getter(StaticItemData*);" 
 14478DF60 "bool& StaticItemData::canReplaceGem::Getter(StaticItemData*);" 
 14478DFA0 "unsigned int& StaticItemData::maxStackSize::Getter(StaticItemData*);" 
 14478DFE0 "bool& StaticItemData::isUniqueItem::Getter(StaticItemData*);" 
 14478E0E0 "bool& StaticItemData::rDyeSlotDisabled::Getter(StaticItemData*);" 
 14478E050 "Crc32& StaticItemData::salvageGameEventId::Getter(StaticItemData*);" 
 143B72F80 "unsigned short& StaticItemData::gearScoreOverride::Getter(StaticItemData*);" 
 14478E060 "Crc32& StaticItemData::salvageAchievementId::Getter(StaticItemData*);" 
 14478E100 "bool& StaticItemData::bDyeSlotDisabled::Getter(StaticItemData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[197] C: "GenericInviteRequest"
T: E5B43693-166A-4132-BAC1-1C87DA5FEB31, S: 30
 Ctor: 142C7EB60, Dtor: 142C7EC10, Alloc: 142C98CE0, Dealloc: 141665EF0, RTTI: 146194448
m_properties:
 1401E7820 "Crc32& GenericInviteRequest::activityCrc::Getter(GenericInviteRequest*);" 
 14028DC50 "void GenericInviteRequest::activityCrc::Setter(GenericInviteRequest*, const Crc32&);" 
 142BF6190 "int GenericInviteRequest::forwardType::Getter(const GenericInviteRequest*);" 
 142BEE650 "void GenericInviteRequest::forwardType::Setter(GenericInviteRequest*, int);" 
 142C78A20 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GenericInviteRequest::targetCharacterIdString::Getter(const GenericInviteRequest*);" 
 142C78A10 "void GenericInviteRequest::targetCharacterIdString::Setter(GenericInviteRequest*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[198] C: "WorldMetrics"
T: 74C595B6-5E94-48F2-8516-9A5BEBD6698D, S: 38
 Ctor: 143F11740, Dtor: 143F13310, Alloc: 14418C180, Dealloc: 1406306C0, RTTI: 0
m_properties:
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldMetrics::worldPopulationStatus::Getter(WorldMetrics*);" 
 1439CD010 "void WorldMetrics::worldPopulationStatus::Setter(WorldMetrics*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "int& WorldMetrics::worldAgeDays::Getter(WorldMetrics*);" 
 1401DF3E0 "void WorldMetrics::worldAgeDays::Setter(WorldMetrics*, const int&);" 
 140916660 "int& WorldMetrics::queueSize::Getter(WorldMetrics*);" 
 1414D2A50 "void WorldMetrics::queueSize::Setter(WorldMetrics*, const int&);" 
 1401E7820 "int& WorldMetrics::queueWaitTimeSec::Getter(WorldMetrics*);" 
 14028DC50 "void WorldMetrics::queueWaitTimeSec::Setter(WorldMetrics*, const int&);" 
 
[199] C: "TerritoryProgressionData"
T: 6E6D7E1D-BC58-4F8F-8386-DC2C4DF7BAFA, S: 1B8
 Ctor: 144422B90, Dtor: 144424F40, Alloc: 1445F0020, Dealloc: 144664440, RTTI: 0
m_methods:
 14184EBF0 "bool TerritoryProgressionData::IsValid(TerritoryProgressionData*);" 
m_properties:
 1444A9F60 "int& TerritoryProgressionData::lifestyleBuffEffectDuration::Getter(TerritoryProgressionData*);" 
 14453DC50 "void TerritoryProgressionData::lifestyleBuffEffectDuration::Setter(TerritoryProgressionData*, const int&);" 
 141681D30 "Crc32& TerritoryProgressionData::lifestyleBuffEffectId::Getter(TerritoryProgressionData*);" 
 14453DC40 "void TerritoryProgressionData::lifestyleBuffEffectId::Setter(TerritoryProgressionData*, const Crc32&);" 
 14183CAA0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::image::Getter(TerritoryProgressionData*);" 
 1440B50F0 "void TerritoryProgressionData::image::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140E5C920 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::categoryDisplayName::Getter(TerritoryProgressionData*);" 
 14453DB90 "void TerritoryProgressionData::categoryDisplayName::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1410530F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::chatNotificationTitle::Getter(TerritoryProgressionData*);" 
 1440B4FF0 "void TerritoryProgressionData::chatNotificationTitle::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1423D88B0 "unsigned char& TerritoryProgressionData::currentTier::Getter(TerritoryProgressionData*);" 
 14453DAE0 "void TerritoryProgressionData::currentTier::Setter(TerritoryProgressionData*, const unsigned char&);" 
 1401E7830 "Crc32& TerritoryProgressionData::nextLevelProjectId::Getter(TerritoryProgressionData*);" 
 14453DB50 "void TerritoryProgressionData::nextLevelProjectId::Setter(TerritoryProgressionData*, const Crc32&);" 
 1403F11B0 "AZ::u64& TerritoryProgressionData::cost::Getter(TerritoryProgressionData*);" 
 141AAD880 "void TerritoryProgressionData::cost::Setter(TerritoryProgressionData*, const AZ::u64&);" 
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::icon::Getter(TerritoryProgressionData*);" 
 14380DF20 "void TerritoryProgressionData::icon::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "Crc32& TerritoryProgressionData::id::Getter(TerritoryProgressionData*);" 
 1417BFF10 "void TerritoryProgressionData::id::Setter(TerritoryProgressionData*, const Crc32&);" 
 140AE8B90 "int TerritoryProgressionData::progressionCategory::Getter(TerritoryProgressionData*);" 
 140F838C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::buttonLabel::Getter(TerritoryProgressionData*);" 
 1440B5070 "void TerritoryProgressionData::buttonLabel::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406414D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::title::Getter(TerritoryProgressionData*);" 
 1440B4F80 "void TerritoryProgressionData::title::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F1560 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::description::Getter(TerritoryProgressionData*);" 
 14171D170 "void TerritoryProgressionData::description::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140940080 "int& TerritoryProgressionData::progressionNeeded::Getter(TerritoryProgressionData*);" 
 14453DB60 "void TerritoryProgressionData::progressionNeeded::Setter(TerritoryProgressionData*, const int&);" 
 1403F2E90 "unsigned char& TerritoryProgressionData::level::Getter(TerritoryProgressionData*);" 
 141AAD8A0 "void TerritoryProgressionData::level::Setter(TerritoryProgressionData*, const unsigned char&);" 
 1416A48F0 "int TerritoryProgressionData::projectType::Getter(TerritoryProgressionData*);" 
 1403FB4D0 "unsigned char& TerritoryProgressionData::progressionLevel::Getter(TerritoryProgressionData*);" 
 14453DB80 "void TerritoryProgressionData::progressionLevel::Setter(TerritoryProgressionData*, const unsigned char&);" 
 140ED5EF0 "int& TerritoryProgressionData::totalCompletionTime::Getter(TerritoryProgressionData*);" 
 14453DB20 "void TerritoryProgressionData::totalCompletionTime::Setter(TerritoryProgressionData*, const int&);" 
 1403F53D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryProgressionData::categoryDisplayImage::Getter(TerritoryProgressionData*);" 
 14453DBE0 "void TerritoryProgressionData::categoryDisplayImage::Setter(TerritoryProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[200] C: "UiLayoutCellComponent"
T: A0568E58-4382-47F8-8B88-77C64B99AC80, S: 60
 Ctor: 1413CAF40, Dtor: 1401DF450, Alloc: 141590DD0, Dealloc: 1416658F0, RTTI: 1461490B8
m_requestBuses:
 "UiLayoutCellBus"
 
[201] C: "DataSheetIndex"
T: F8C10F89-CE90-4D00-809C-0ED5208D3D2B, S: 4
 Ctor: 1406D1C00, Dtor: 140190D00, Alloc: 1406E5560, Dealloc: 1406E7CF0, RTTI: 0
m_methods:
 1406CEB80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> DataSheetIndex::ToString(const TypedIndex*);" 
 1406CEB70 "bool DataSheetIndex::IsValid(const TypedIndex*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[202] C: "StaticStatusEffectData"
T: E85A319C-C7E9-42EB-B764-C4B56782B615, S: 4F0
 Ctor: 144422700, Dtor: 144424F00, Alloc: 1445EEB30, Dealloc: 144663640, RTTI: 1461B1038
m_properties:
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticStatusEffectData::description::Getter(StaticStatusEffectData*);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticStatusEffectData::id::Getter(StaticStatusEffectData*);" 
 1410530F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticStatusEffectData::icon::Getter(StaticStatusEffectData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticStatusEffectData::name::Getter(StaticStatusEffectData*);" 
 141A5CEF0 "float& StaticStatusEffectData::potencyMax::Getter(StaticStatusEffectData*);" 
 
[203] C: "AZStd::vector<unsigned short, allocator>"
T: F54891FA-D2F9-503D-9E59-3680D40B1262, S: 20
 Ctor: 1401DF120, Dtor: 1428C83D0, Alloc: 1428E0100, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428F6E70 "void AZStd::vector<unsigned short, allocator>::pop_back(AZStd::vector<unsigned short, allocator>*);" 
 14069EE90 "void AZStd::vector<unsigned short, allocator>::clear(AZStd::vector<unsigned short, allocator>*);" 
 1428BDDA0 "int AZStd::vector<unsigned short, allocator>::size(AZStd::vector<unsigned short, allocator>*);" 
 1428F5640 "unsigned short& AZStd::vector<unsigned short, allocator>::at(AZStd::vector<unsigned short, allocator>*, AZ::u64);" 
 1428E9B30 "void AZStd::vector<unsigned short, allocator>::insert(AZStd::vector<unsigned short, allocator>*, int, unsigned short&);" 
 1428F6E80 "void AZStd::vector<unsigned short, allocator>::push_back(AZStd::vector<unsigned short, allocator>*, const unsigned short&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[204] C: "GenericInviteStaticData"
T: 54E26936-0156-4182-8EEA-28F5B021B3AE, S: 70
 Ctor: 142C7EAF0, Dtor: 142C7EBE0, Alloc: 142C98C50, Dealloc: 142C9E1C0, RTTI: 146194440
m_methods:
 141699B00 "bool GenericInviteStaticData::IsValid(GenericInviteStaticData*);" 
m_properties:
 142C789C0 "bool GenericInviteStaticData::allowInWar::Getter(const GenericInviteStaticData*);" 
 142C78A90 "unsigned int GenericInviteStaticData::maxLevel::Getter(const GenericInviteStaticData*);" 
 142C78A80 "bool GenericInviteStaticData::allowInSanctuary::Getter(const GenericInviteStaticData*);" 
 142C789F0 "bool GenericInviteStaticData::allowInFtue::Getter(const GenericInviteStaticData*);" 
 1401E7820 "Crc32& GenericInviteStaticData::activityCrc::Getter(GenericInviteStaticData*);" 
 1403F11A0 "unsigned int& GenericInviteStaticData::durationSec::Getter(GenericInviteStaticData*);" 
 142C78AB0 "unsigned int GenericInviteStaticData::minLevel::Getter(const GenericInviteStaticData*);" 
 142C78A00 "unsigned char GenericInviteStaticData::factionType::Getter(const GenericInviteStaticData*);" 
 142C78A40 "AZStd::vector<Crc32, allocator> GenericInviteStaticData::disallowInGameModes::Getter(const GenericInviteStaticData*);" 
 142C789D0 "float GenericInviteStaticData::minDistance::Getter(const GenericInviteStaticData*);" 
 142C78AA0 "bool GenericInviteStaticData::allowInArena::Getter(const GenericInviteStaticData*);" 
 142C78A60 "float GenericInviteStaticData::maxDistance::Getter(const GenericInviteStaticData*);" 
 
[205] C: "PerkTierData"
T: 1C7129EC-C7B6-471C-A6FF-278A2B3205A8, S: 80
 Ctor: 144281BA0, Dtor: 144282DC0, Alloc: 144375730, Dealloc: 1443B3B80, RTTI: 14619D6D8
m_methods:
 1432CC0C0 "unsigned int PerkTierData::GetMaxPerksForGearScore(PerkTierData*, unsigned short, bool);" 
m_properties:
 140782520 "float& PerkTierData::gemSlotProbability::Getter(PerkTierData*);" 
 1401E7820 "int& PerkTierData::maxPerkChannel::Getter(PerkTierData*);" 
 
[206] C: "VertexContainer<Vector3 >"
T: A6F50685-C884-50C6-AD08-123028C77954, S: 110
 Ctor: 1401DF0A0, Dtor: 1401DF400, Alloc: 140365820, Dealloc: 1403D77A0, RTTI: 0
m_methods:
 14045A450 "AZ::u64 VertexContainer<Vector3 >::Size(VertexContainer<Vector3 >*);" 
 140406290 "bool VertexContainer<Vector3 >::InsertVertex(VertexContainer<Vector3 >*, AZ::u64, const Vector3&);" 
 1403E35F0 "bool VertexContainer<Vector3 >::Empty(VertexContainer<Vector3 >*);" 
 1403656D0 "void VertexContainer<Vector3 >::AddVertex(VertexContainer<Vector3 >*, const Vector3&);" 
 1404787D0 "bool VertexContainer<Vector3 >::UpdateVertex(VertexContainer<Vector3 >*, AZ::u64, const Vector3&);" 
 1403B7200 "void VertexContainer<Vector3 >::Clear(VertexContainer<Vector3 >*);" 
 14031C0D0 "const Vector3& VertexContainer<Vector3 >::IndexRead(VertexContainer<Vector3 >*, AZ::u64);" 
 14044EFE0 "bool VertexContainer<Vector3 >::RemoveVertex(VertexContainer<Vector3 >*, AZ::u64);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[207] C: "AZStd::vector<const StaticEmoteData*, allocator>"
T: 45665909-A41C-50C0-8ABD-76704E813F49, S: 20
 Ctor: 1401DF120, Dtor: 140573E10, Alloc: 1443762A0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<const StaticEmoteData*, allocator>::pop_back(AZStd::vector<const StaticEmoteData*, allocator>*);" 
 14069EE90 "void AZStd::vector<const StaticEmoteData*, allocator>::clear(AZStd::vector<const StaticEmoteData*, allocator>*);" 
 14045A440 "int AZStd::vector<const StaticEmoteData*, allocator>::size(AZStd::vector<const StaticEmoteData*, allocator>*);" 
 14031C0C0 "const StaticEmoteData*& AZStd::vector<const StaticEmoteData*, allocator>::at(AZStd::vector<const StaticEmoteData*, allocator>*, AZ::u64);" 
 142684330 "void AZStd::vector<const StaticEmoteData*, allocator>::insert(AZStd::vector<const StaticEmoteData*, allocator>*, int, const StaticEmoteData*&);" 
 1426964B0 "void AZStd::vector<const StaticEmoteData*, allocator>::push_back(AZStd::vector<const StaticEmoteData*, allocator>*, const const StaticEmoteData*&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[208] C: "UiMarkerComponent"
T: EE5C91F4-3111-40D9-8549-FBD657FC326B, S: 1B0
 Ctor: 143E4CD40, Dtor: 1401DF450, Alloc: 143E58640, Dealloc: 143E5BA70, RTTI: 1461B0B00
m_methods:
 143E5D3D0 "void UiMarkerComponent::SetFadeDistance(UiMarkerComponent*, float, float);" 
 14031EC2C "void UiMarkerComponent::Uninitialize(UiMarkerComponent*);" 
 143E5D3F0 "void UiMarkerComponent::SetKeepOnScreen(UiMarkerComponent*, bool);" 
 14031EC24 "void UiMarkerComponent::Initialize(UiMarkerComponent*, EntityId);" 
 143E5D400 "void UiMarkerComponent::SetMarkerType(UiMarkerComponent*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14031EC24 "void UiMarkerComponent::OnDistanceChanged(UiMarkerComponent*, float, bool);" 
 143E5C800 "bool UiMarkerComponent::OnWorldPositionChanged(UiMarkerComponent*, const Vector3&);" 
m_properties:
 140F838C0 "EntityId& UiMarkerComponent::markerId::Getter(UiMarkerComponent*);" 
 1418849E0 "void UiMarkerComponent::markerId::Setter(UiMarkerComponent*, const EntityId&);" 
 143E4B910 "SimplePlayerIdentification UiMarkerComponent::playerId::Getter(const UiMarkerComponent*);" 
 
[209] C: "JournalDataEntry"
T: F569007E-6A40-4675-AC4D-6EC33A778BCA, S: B0
 Ctor: 144423170, Dtor: 1401DF450, Alloc: 1445EF0D0, Dealloc: 1446637C0, RTTI: 1461B1050
m_properties:
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& JournalDataEntry::achievementId::Getter(JournalDataEntry*);" 
 141AAD9C0 "void JournalDataEntry::achievementId::Setter(JournalDataEntry*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& JournalDataEntry::topicId::Getter(JournalDataEntry*);" 
 141AAD7E0 "void JournalDataEntry::topicId::Setter(JournalDataEntry*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& JournalDataEntry::pageId::Getter(JournalDataEntry*);" 
 141716790 "void JournalDataEntry::pageId::Setter(JournalDataEntry*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& JournalDataEntry::chapterId::Getter(JournalDataEntry*);" 
 142F33410 "void JournalDataEntry::chapterId::Setter(JournalDataEntry*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141692540 "unsigned short& JournalDataEntry::order::Getter(JournalDataEntry*);" 
 14453DDF0 "void JournalDataEntry::order::Setter(JournalDataEntry*, const unsigned short&);" 
 
[210] C: "AZStd::vector<UnifiedInteractOption, allocator>"
T: 3F597068-805C-5515-B313-C901DC05060E, S: 20
 Ctor: 1401DF120, Dtor: 143F138A0, Alloc: 14418CB00, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251410 "void AZStd::vector<UnifiedInteractOption, allocator>::pop_back(AZStd::vector<UnifiedInteractOption, allocator>*);" 
 144250000 "void AZStd::vector<UnifiedInteractOption, allocator>::clear(AZStd::vector<UnifiedInteractOption, allocator>*);" 
 1429E8E30 "int AZStd::vector<UnifiedInteractOption, allocator>::size(AZStd::vector<UnifiedInteractOption, allocator>*);" 
 142A30EA0 "UnifiedInteractOption& AZStd::vector<UnifiedInteractOption, allocator>::at(AZStd::vector<UnifiedInteractOption, allocator>*, AZ::u64);" 
 14421E7B0 "void AZStd::vector<UnifiedInteractOption, allocator>::insert(AZStd::vector<UnifiedInteractOption, allocator>*, int, UnifiedInteractOption&);" 
 1437D7430 "void AZStd::vector<UnifiedInteractOption, allocator>::push_back(AZStd::vector<UnifiedInteractOption, allocator>*, const UnifiedInteractOption&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[211] C: "UiOwnership"
T: 1D1C19AF-3F37-4A13-AAEC-A56B07965054, S: C0
 Ctor: 143F11600, Dtor: 140BEB930, Alloc: 14418BE20, Dealloc: 144219500, RTTI: 0
m_properties:
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiOwnership::ownedByName::Getter(UiOwnership*);" 
 1439CD010 "void UiOwnership::ownedByName::Setter(UiOwnership*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1410530F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiOwnership::ownedStructureName::Getter(UiOwnership*);" 
 1440B4FF0 "void UiOwnership::ownedStructureName::Setter(UiOwnership*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F2E90 "int& UiOwnership::ownedByType::Getter(UiOwnership*);" 
 141AAD890 "void UiOwnership::ownedByType::Setter(UiOwnership*, const int&);" 
 1405842F0 "GuildId& UiOwnership::ownedByGuildId::Getter(UiOwnership*);" 
 1440B4FA0 "void UiOwnership::ownedByGuildId::Setter(UiOwnership*, const GuildId&);" 
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiOwnership::ownershipPermissionType::Getter(UiOwnership*);" 
 14380DF20 "void UiOwnership::ownershipPermissionType::Setter(UiOwnership*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140F82F50 "unsigned int& UiOwnership::ownershipSecurityLevel::Getter(UiOwnership*);" 
 1440B4F00 "void UiOwnership::ownershipSecurityLevel::Setter(UiOwnership*, const unsigned int&);" 
 
[212] C: "AZStd::vector<SimplePlayerIdentification, allocator>"
T: C93D765B-F3FC-56C6-9BDF-92184DB24A7C, S: 20
 Ctor: 1401DF120, Dtor: 143F13790, Alloc: 14418C6E0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513A0 "void AZStd::vector<SimplePlayerIdentification, allocator>::pop_back(AZStd::vector<SimplePlayerIdentification, allocator>*);" 
 14424FFD0 "void AZStd::vector<SimplePlayerIdentification, allocator>::clear(AZStd::vector<SimplePlayerIdentification, allocator>*);" 
 143EB84F0 "int AZStd::vector<SimplePlayerIdentification, allocator>::size(AZStd::vector<SimplePlayerIdentification, allocator>*);" 
 14424FE30 "SimplePlayerIdentification& AZStd::vector<SimplePlayerIdentification, allocator>::at(AZStd::vector<SimplePlayerIdentification, allocator>*, AZ::u64);" 
 14421E2A0 "void AZStd::vector<SimplePlayerIdentification, allocator>::insert(AZStd::vector<SimplePlayerIdentification, allocator>*, int, SimplePlayerIdentification&);" 
 1442519C0 "void AZStd::vector<SimplePlayerIdentification, allocator>::push_back(AZStd::vector<SimplePlayerIdentification, allocator>*, const SimplePlayerIdentification&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[213] C: "EntitlementProductPriceInfo"
T: ECBAF445-26C5-4437-AB04-55821EE35209, S: 38
 Ctor: 144281620, Dtor: 144282BA0, Alloc: 1443753D0, Dealloc: 140630440, RTTI: 14617A518
m_properties:
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& EntitlementProductPriceInfo::currency::Getter(PriceInfo*);" 
 1401E7820 "unsigned int& EntitlementProductPriceInfo::initialPrice::Getter(PriceInfo*);" 
 140782520 "unsigned int& EntitlementProductPriceInfo::finalPrice::Getter(PriceInfo*);" 
 
[214] C: "DataSheetCellAddress"
T: 02409B43-DCBB-4714-A99B-BE9D9ACC05EA, S: C
 Ctor: 1406D1BF0, Dtor: 140190D00, Alloc: 1406E54D0, Dealloc: 1406E7BF0, RTTI: 0
m_methods:
 1406CE840 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> DataSheetCellAddress::ToString(const CellAddress*);" 
 1406CE9C0 "bool DataSheetCellAddress::IsValid(const CellAddress*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[215] C: "AZStd::array<Vector3, 2>"
T: E65D74A8-908B-51B4-94CC-7226AC363DD5, S: 20
 Ctor: 1419A7D90, Dtor: 140190D00, Alloc: 141BABAA0, Dealloc: 1406307C0, RTTI: 0
m_methods:
 141D47100 "Vector3& AZStd::array<Vector3, 2>::at(AZStd::array<Vector3, 2>*, AZ::u64);" 
 14019CEA0 "int AZStd::array<Vector3, 2>::size(AZStd::array<Vector3, 2>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[216] C: "SplineAddress"
T: 865BA2EC-43C5-4E1F-9B6F-2D63F6DC2E70, S: 10
 Ctor: 1401DF080, Dtor: 140190D00, Alloc: 140366420, Dealloc: 1403D7FA0, RTTI: 0
m_constructors:
 1401D4780 "void SplineAddress::Constructor(SplineAddress*, AZ::u64, float);" 
m_properties:
 1401AD7A0 "AZ::u64& SplineAddress::segmentIndex::Getter(SplineAddress*);" 
 1401DF2C0 "void SplineAddress::segmentIndex::Setter(SplineAddress*, const AZ::u64&);" 
 1401E7820 "float& SplineAddress::segmentFraction::Getter(SplineAddress*);" 
 14028DC50 "void SplineAddress::segmentFraction::Setter(SplineAddress*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void SplineAddress* ScriptDataContext& >" ED34265E-A3A4-559B-AC81-8AABEA3DCDA6), VT: 1454219B8, V: 0x7FF75285ADD0
 ("AZ::AttributeFunction<R(Args...)><void SplineAddress* >" 49AECB06-24E8-500B-88AD-FCB4113504E0), VT: 145421A00, V: 0x7FF7525DF080
 
[217] C: "AZStd::vector<OtherGuildData, allocator>"
T: FEA8739A-50FC-5154-9C97-D46C46E9EB1F, S: 20
 Ctor: 1401DF120, Dtor: 143F13660, Alloc: 14418C420, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442512C0 "void AZStd::vector<OtherGuildData, allocator>::pop_back(AZStd::vector<OtherGuildData, allocator>*);" 
 14424FEE0 "void AZStd::vector<OtherGuildData, allocator>::clear(AZStd::vector<OtherGuildData, allocator>*);" 
 1429E8E60 "int AZStd::vector<OtherGuildData, allocator>::size(AZStd::vector<OtherGuildData, allocator>*);" 
 142A30EB0 "OtherGuildData& AZStd::vector<OtherGuildData, allocator>::at(AZStd::vector<OtherGuildData, allocator>*, AZ::u64);" 
 14421DCD0 "void AZStd::vector<OtherGuildData, allocator>::insert(AZStd::vector<OtherGuildData, allocator>*, int, OtherGuildData&);" 
 144251610 "void AZStd::vector<OtherGuildData, allocator>::push_back(AZStd::vector<OtherGuildData, allocator>*, const OtherGuildData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[218] C: "FactionInfluenceConfigData"
T: 8ED959C4-B0E3-4D45-84D1-FCAEC1C7D1A4, S: 38
 Ctor: 144281AE0, Dtor: 140190D00, Alloc: 144375610, Dealloc: 140630440, RTTI: 14619D5F0
m_properties:
 1401E7820 "float& FactionInfluenceConfigData::maxInfluence::Getter(FactionInfluenceConfigData*);" 
 
[219] C: "StaticConsumableData"
T: 72E8577D-6E6E-49F3-BED9-12A9B494806B, S: 308
 Ctor: 1446F23B0, Dtor: 1446F4290, Alloc: 144918070, Dealloc: 1443B3D80, RTTI: 0
m_methods:
 1449A7870 "bool StaticConsumableData::IsValid(StaticConsumableData*);" 
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticConsumableData::key::Getter(StaticConsumableData*);" 
 143B72FA0 "float& StaticConsumableData::effectDuration::Getter(StaticConsumableData*);" 
 1401AD7A0 "Crc32& StaticConsumableData::id::Getter(StaticConsumableData*);" 
 140AEA690 "float& StaticConsumableData::cooldownDuration::Getter(StaticConsumableData*);" 
 14478DF80 "Crc32& StaticConsumableData::cooldownId::Getter(StaticConsumableData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[220] C: "Spline"
T: 6E2D31AF-5CB0-4A50-BD68-B00E2D2FD0A4, S: 120
 Ctor: 0, Dtor: 1401DF450, Alloc: 140365E20, Dealloc: 1403D7A50, RTTI: 146126858
m_methods:
 140408FC0 "bool Spline::IsClosed(Spline*);" 
 14019CFF0 "Aabb Spline::GetAabb(Spline*, const Transform&);" 
 14031EBE0 "Vector3 Spline::GetTangent(Spline*, const SplineAddress&);" 
 14031EC70 "unsigned short Spline::GetSegmentGranularity(Spline*);" 
 14031EBD0 "Vector3 Spline::GetPosition(Spline*, const SplineAddress&);" 
 14031EC5C "float Spline::GetSegmentLength(Spline*, AZ::u64);" 
 14031EBF4 "RaySplineQueryResult Spline::GetNearestAddressRay(Spline*, const Vector3&, const Vector3&);" 
 14031EC0C "float Spline::GetLength(Spline*, const SplineAddress&);" 
 14031EBE8 "AZ::u64 Spline::GetSegmentCount(Spline*);" 
 14031EBFC "SplineAddress Spline::GetAddressByDistance(Spline*, float);" 
 14031EC04 "SplineAddress Spline::GetAddressByFraction(Spline*, float);" 
 14031EC68 "PositionSplineQueryResult Spline::GetNearestAddressPosition(Spline*, const Vector3&);" 
 14031EBD8 "Vector3 Spline::GetNormal(Spline*, const SplineAddress&);" 
 14031EC54 "float Spline::GetSplineLength(Spline*);" 
m_properties:
 1401E7820 "VertexContainer<Vector3 >& Spline::vertexContainer::Getter(Spline*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[221] C: "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>"
T: 03AAAB3F-5C47-5A66-9EBC-D5FA4DB353C9, S: 28
 Ctor: 1401DF100, Dtor: 1401DF410, Alloc: 140366720, Dealloc: 1403D8240, RTTI: 0
m_constructors:
 1401D4790 "void AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Constructor(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*, char*);" 
m_methods:
 14019D300 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Join(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14019CD50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Replace(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14019CD00 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Split(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14019D0B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Substring(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*, const int&, const int&);" 
 14019D130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::ToUpper(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*);" 
 14048F810 "const char* AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::c_str(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*);" 
 14019CC70 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::ReplaceByIndex(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*, const int&, const int&, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14019D2C0 "int AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Find(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const int&);" 
 14019D150 "int AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Length(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*);" 
 14019CC20 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::Add(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14019D160 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::TrimLeft(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*);" 
 14019D190 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::TrimRight(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*);" 
 14019CFB0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string<char, AZStd::char_traits<char>, allocator>::ToLower(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void AZStd::basic_string<char, AZStd::char_traits<char>, allocator>* ScriptDataContext& >" 47DC4508-65D1-5037-94BD-6696FA428847), VT: 1454229F0, V: 0x7FF7527D7330
 ("CustomReaderWriter" 2F7D4EC7-5477-59F4-8EF1-6390D19DCF08), VT: 145421B48, V: 0x7FF752871810
 
[222] C: "UiPadding"
T: DE5C18B0-4214-4A37-B590-8D45CC450A96, S: 10
 Ctor: 1401DF090, Dtor: 140190D00, Alloc: 141591520, Dealloc: 141665DF0, RTTI: 0
m_properties:
 140782520 "int& UiPadding::bottom::Getter(Padding*);" 
 1414D2A60 "void UiPadding::bottom::Setter(Padding*, const int&);" 
 1401AD7A0 "int& UiPadding::left::Getter(Padding*);" 
 1401DF3E0 "void UiPadding::left::Setter(Padding*, const int&);" 
 1401E7820 "int& UiPadding::top::Getter(Padding*);" 
 14028DC50 "void UiPadding::top::Setter(Padding*, const int&);" 
 140916660 "int& UiPadding::right::Getter(Padding*);" 
 1414D2A50 "void UiPadding::right::Setter(Padding*, const int&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[223] C: "AZStd::pair<Crc32, unsigned int>"
T: ED3CACB4-07A1-5881-BA12-E4FCF39447B9, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 144375A20, Dealloc: 141C5EAE0, RTTI: 0
m_properties:
 144252980 "Crc32 AZStd::pair<Crc32, unsigned int>::first::Getter(AZStd::pair<Crc32, unsigned int>*);" 
 1401DF3E0 "void AZStd::pair<Crc32, unsigned int>::first::Setter(AZStd::pair<Crc32, unsigned int>*, const Crc32&);" 
 143B093F0 "unsigned int AZStd::pair<Crc32, unsigned int>::second::Getter(AZStd::pair<Crc32, unsigned int>*);" 
 1414D2A50 "void AZStd::pair<Crc32, unsigned int>::second::Setter(AZStd::pair<Crc32, unsigned int>*, const unsigned int&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[224] C: "CrestData"
T: 64AB17AB-0592-47E8-820D-81D89429A8D6, S: 90
 Ctor: 1434E8E80, Dtor: 1434E8FB0, Alloc: 1434F41C0, Dealloc: 1434F6720, RTTI: 1461A1C58
m_properties:
 1434E60A0 "int CrestData::faction::Getter(const CrestData*);" 
 1434E60B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> CrestData::imagePath::Getter(const CrestData*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CrestData::entitlementId::Getter(CrestData*);" 
 140584310 "bool& CrestData::isSelectable::Getter(CrestData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CrestData::displayName::Getter(CrestData*);" 
 1434E9330 "bool& CrestData::isEntitlement::Getter(CrestData*);" 
 
[225] C: "DeathRecapData"
T: 0894CB27-376B-46F0-9084-E34881236C8F, S: 220
 Ctor: 1446F1FF0, Dtor: 1446F41F0, Alloc: 144916A40, Dealloc: 1443B3A00, RTTI: 1461A8CC0
m_properties:
 140AF0A30 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& DeathRecapData::guildName::Getter(DeathRecapData*);" 
 14453DD40 "void DeathRecapData::guildName::Setter(DeathRecapData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1405842F0 "GuildIconData& DeathRecapData::guildCrestData::Getter(DeathRecapData*);" 
 144848640 "void DeathRecapData::guildCrestData::Setter(DeathRecapData*, const GuildIconData&);" 
 1403F2E90 "bool& DeathRecapData::isStreaming::Getter(DeathRecapData*);" 
 141AAD8A0 "void DeathRecapData::isStreaming::Setter(DeathRecapData*, const bool&);" 
 140E5C920 "ItemDescriptor& DeathRecapData::itemDescriptor::Getter(DeathRecapData*);" 
 144848230 "void DeathRecapData::itemDescriptor::Setter(DeathRecapData*, const ItemDescriptor&);" 
 140400B50 "PlayerIconData& DeathRecapData::playerIconData::Getter(DeathRecapData*);" 
 144848740 "void DeathRecapData::playerIconData::Setter(DeathRecapData*, const PlayerIconData&);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& DeathRecapData::killerName::Getter(DeathRecapData*);" 
 1439CD010 "void DeathRecapData::killerName::Setter(DeathRecapData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F2E80 "float& DeathRecapData::secondsSinceLastRevive::Getter(DeathRecapData*);" 
 141AAD8B0 "void DeathRecapData::secondsSinceLastRevive::Setter(DeathRecapData*, const float&);" 
 1442D0280 "float& DeathRecapData::bestSurvivalTimeSeconds::Getter(DeathRecapData*);" 
 144320F80 "void DeathRecapData::bestSurvivalTimeSeconds::Setter(DeathRecapData*, const float&);" 
 140F82F50 "unsigned int& DeathRecapData::viewerCount::Getter(DeathRecapData*);" 
 1440B4F00 "void DeathRecapData::viewerCount::Setter(DeathRecapData*, const unsigned int&);" 
 1403FB4D0 "bool& DeathRecapData::isKilledByPlayer::Getter(DeathRecapData*);" 
 14453DB80 "void DeathRecapData::isKilledByPlayer::Setter(DeathRecapData*, const bool&);" 
 14478DE90 "bool& DeathRecapData::isWarTarget::Getter(DeathRecapData*);" 
 144848220 "void DeathRecapData::isWarTarget::Setter(DeathRecapData*, const bool&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[226] C: "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>"
T: 99DAD0BC-740E-5E82-826B-8FC7968CC02C, S: 20
 Ctor: 1401DF120, Dtor: 1401DF440, Alloc: 140366A20, Dealloc: 1403D8390, RTTI: 0
m_methods:
 1404A4430 "void AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>::pop_back(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char);" 
 140490150 "void AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>::clear(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char);" 
 14019CC40 "int AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>::size(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char);" 
 14048F800 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>::at(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char, AZ::u64);" 
 140404CF0 "void AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>::insert(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char, int, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&);" 
 1404A6170 "void AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>::push_back(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[227] C: "OtherGuildData"
T: E8F5AFB1-1BE0-46F2-A108-08744CB79FD4, S: F0
 Ctor: 143F10E10, Dtor: 143F132E0, Alloc: 14418A510, Dealloc: 144218600, RTTI: 1461A2A50
m_methods:
 143EB7E70 "OtherGuildData OtherGuildData::Clone(const OtherGuildData*);" 
 14356BE40 "bool OtherGuildData::IsValid(OtherGuildData*);" 
m_properties:
 140D49C30 "int& OtherGuildData::numClaims::Getter(OtherGuildData*);" 
 1440B5110 "void OtherGuildData::numClaims::Setter(OtherGuildData*, const int&);" 
 14183CAA0 "int& OtherGuildData::numMembers::Getter(OtherGuildData*);" 
 1440B50E0 "void OtherGuildData::numMembers::Setter(OtherGuildData*, const int&);" 
 1403F11A0 "GuildId& OtherGuildData::guildId::Getter(OtherGuildData*);" 
 1440B4CB0 "void OtherGuildData::guildId::Setter(OtherGuildData*, const GuildId&);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& OtherGuildData::guildMasterCharacterIdString::Getter(OtherGuildData*);" 
 141716790 "void OtherGuildData::guildMasterCharacterIdString::Setter(OtherGuildData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& OtherGuildData::guildName::Getter(OtherGuildData*);" 
 142F33410 "void OtherGuildData::guildName::Setter(OtherGuildData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14092AD10 "int OtherGuildData::faction::Getter(const OtherGuildData*);" 
 1410530F0 "GuildIconData& OtherGuildData::crestData::Getter(OtherGuildData*);" 
 1440B4FE0 "void OtherGuildData::crestData::Setter(OtherGuildData*, const GuildIconData&);" 
 143FBB970 "float& OtherGuildData::siegeWindow::Getter(OtherGuildData*);" 
 1440B5160 "void OtherGuildData::siegeWindow::Setter(OtherGuildData*, const float&);" 
 
[228] C: "UiParticleEmitterComponent"
T: E8B1288C-CB49-4CAD-B366-AF1B40C47E74, S: 790
 Ctor: 1413CAFF0, Dtor: 1401DF450, Alloc: 141590F80, Dealloc: 1416659F0, RTTI: 1461490D0
m_requestBuses:
 "UiParticleEmitterBus"
 
[229] C: "PositionSplineQueryResult"
T: E35DCF28-1AC3-49E8-A0AB-2F6115348F45, S: 20
 Ctor: 1401DF040, Dtor: 140190D00, Alloc: 140366120, Dealloc: 1403D7D00, RTTI: 0
m_properties:
 14019CCF0 "SplineAddress PositionSplineQueryResult::splineAddress::Getter(PositionSplineQueryResult*);" 
 14019CE90 "VectorFloat PositionSplineQueryResult::distanceSq::Getter(PositionSplineQueryResult*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[230] C: "UiImageSequenceComponent"
T: BFAC7909-3A56-4980-AF7C-261A99D6371B, S: 1C0
 Ctor: 1413CAF20, Dtor: 1401DF450, Alloc: 141590D40, Dealloc: 1406304C0, RTTI: 146149098
m_requestBuses:
 "UiImageSequenceBus"
 
[231] C: "EntityId"
T: 6383F1D3-BB27-4E6B-A49A-6409B2059EAA, S: 8
 Ctor: 1401DF150, Dtor: 140190D00, Alloc: 140366EA0, Dealloc: 1403D84E0, RTTI: 0
m_methods:
 14031BF00 "bool EntityId::Equal(EntityId*, const EntityId&);" 
 14040C630 "bool EntityId::IsValid(EntityId*);" 
 1404720F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> EntityId::ToString(EntityId*);" 
m_properties:
 14031C100 "AZ::u64 EntityId::value::Getter(EntityId*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[232] C: "UiGatherableBind"
T: DF4815E9-65AF-44D8-8311-394903EBFF5D, S: 18
 Ctor: 1401DF150, Dtor: 140190D00, Alloc: 1449187C0, Dealloc: 144218B00, RTTI: 0
m_properties:
 1401AD7A0 "EntityId& UiGatherableBind::gatherableEntityId::Getter(UiGatherableBind*);" 
 1401DF2C0 "void UiGatherableBind::gatherableEntityId::Setter(UiGatherableBind*, const EntityId&);" 
 1401E7820 "UiGatherableAmount& UiGatherableBind::gatherableAmount::Getter(UiGatherableBind*);" 
 144848140 "void UiGatherableBind::gatherableAmount::Setter(UiGatherableBind*, const UiGatherableAmount&);" 
 
[233] C: "AZStd::basic_string_view<char, AZStd::char_traits<char>>"
T: 7114E998-A8B4-519B-9342-A86D1587B4F7, S: 10
 Ctor: 1401DF090, Dtor: 140190D00, Alloc: 1403668A0, Dealloc: 1403D7FA0, RTTI: 0
m_constructors:
 1401D4820 "void AZStd::basic_string_view<char, AZStd::char_traits<char>>::Constructor(AZStd::basic_string_view<char, AZStd::char_traits<char>>*, char*);" 
m_methods:
 14019CF20 "void AZStd::basic_string_view<char, AZStd::char_traits<char>>::remove_suffix(AZStd::basic_string_view<char, AZStd::char_traits<char>>*, int);" 
 14019CBC0 "AZStd::basic_string_view<char, AZStd::char_traits<char>> AZStd::basic_string_view<char, AZStd::char_traits<char>>::substr(AZStd::basic_string_view<char, AZStd::char_traits<char>>*, int, int);" 
 14019D1E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> AZStd::basic_string_view<char, AZStd::char_traits<char>>::ToString(const AZStd::basic_string_view<char, AZStd::char_traits<char>>&);" 
 14031C100 "const char* AZStd::basic_string_view<char, AZStd::char_traits<char>>::data(AZStd::basic_string_view<char, AZStd::char_traits<char>>*);" 
 14019D0F0 "int AZStd::basic_string_view<char, AZStd::char_traits<char>>::length(AZStd::basic_string_view<char, AZStd::char_traits<char>>*);" 
 14019D0F0 "int AZStd::basic_string_view<char, AZStd::char_traits<char>>::size(AZStd::basic_string_view<char, AZStd::char_traits<char>>*);" 
 14019CF80 "int AZStd::basic_string_view<char, AZStd::char_traits<char>>::find(AZStd::basic_string_view<char, AZStd::char_traits<char>>*, AZStd::basic_string_view<char, AZStd::char_traits<char>>, int);" 
 14019D100 "void AZStd::basic_string_view<char, AZStd::char_traits<char>>::remove_prefix(AZStd::basic_string_view<char, AZStd::char_traits<char>>*, int);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF757830518
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void AZStd::basic_string_view<char, AZStd::char_traits<char>>* ScriptDataContext& >" A70FFF1C-6CF5-59D8-9D84-18B5B676A94F), VT: 1454308C0, V: 0x7FF7527D74D0
 ("CustomReaderWriter" 2F7D4EC7-5477-59F4-8EF1-6390D19DCF08), VT: 145421B48, V: 0x7FF752871830
 
[234] C: "AZStd::vector<float, allocator>"
T: 6106BF95-5ACD-5071-8D0E-4F846C2138AD, S: 20
 Ctor: 1401DF120, Dtor: 142845130, Alloc: 1443761F0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428A96F0 "void AZStd::vector<float, allocator>::pop_back(AZStd::vector<float, allocator>*);" 
 14069EE90 "void AZStd::vector<float, allocator>::clear(AZStd::vector<float, allocator>*);" 
 1428384E0 "int AZStd::vector<float, allocator>::size(AZStd::vector<float, allocator>*);" 
 1428A7A00 "float& AZStd::vector<float, allocator>::at(AZStd::vector<float, allocator>*, AZ::u64);" 
 1428954F0 "void AZStd::vector<float, allocator>::insert(AZStd::vector<float, allocator>*, int, float&);" 
 1443D0360 "void AZStd::vector<float, allocator>::push_back(AZStd::vector<float, allocator>*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[235] C: "ElementalMutationStaticData"
T: 17AA2FED-E384-423A-9064-9B3458D2504A, S: 1A0
 Ctor: 144421FC0, Dtor: 144424C50, Alloc: 1445EF720, Dealloc: 144663A40, RTTI: 0
m_methods:
 1443D0FD0 "ElementalMutationStaticData ElementalMutationStaticData::Clone(const ElementalMutationStaticData*);" 
m_properties:
 140AEC940 "unsigned char& ElementalMutationStaticData::difficultyTier::Getter(ElementalMutationStaticData*);" 
 14453DAB0 "void ElementalMutationStaticData::difficultyTier::Setter(ElementalMutationStaticData*, const unsigned char&);" 
 1423D88B0 "AZStd::unordered_map<Crc32, Crc32, AZStd::hash<Crc32>, AZStd::e ElementalMutationStaticData::buffBucketForCreatureType::Getter(ElementalMutationStaticData*);" 
 14453DAC0 "void ElementalMutationStaticData::buffBucketForCreatureType::Setter(ElementalMutationStaticData*, const AZStd::unordered_map<Crc32, Crc32, AZStd::hash<Crc32>, AZ);" 
 140AFC3C0 "Vector3& ElementalMutationStaticData::backgroundColor::Getter(ElementalMutationStaticData*);" 
 14453DF20 "void ElementalMutationStaticData::backgroundColor::Setter(ElementalMutationStaticData*, const Vector3&);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ElementalMutationStaticData::description::Getter(ElementalMutationStaticData*);" 
 141AAD9C0 "void ElementalMutationStaticData::description::Setter(ElementalMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14183CAA0 "Vector3& ElementalMutationStaticData::textColor::Getter(ElementalMutationStaticData*);" 
 141886DA0 "void ElementalMutationStaticData::textColor::Setter(ElementalMutationStaticData*, const Vector3&);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ElementalMutationStaticData::name::Getter(ElementalMutationStaticData*);" 
 1440B4F60 "void ElementalMutationStaticData::name::Setter(ElementalMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "Crc32& ElementalMutationStaticData::elementalType::Getter(ElementalMutationStaticData*);" 
 1417BFF30 "void ElementalMutationStaticData::elementalType::Setter(ElementalMutationStaticData*, const Crc32&);" 
 1403F3C00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ElementalMutationStaticData::iconPath::Getter(ElementalMutationStaticData*);" 
 1440B5040 "void ElementalMutationStaticData::iconPath::Setter(ElementalMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[236] C: "RecipeData"
T: E30F3B94-F6BA-49D0-99B3-F3EE390AE818, S: 3A8
 Ctor: 1446F2320, Dtor: 1446F4280, Alloc: 144917EC0, Dealloc: 1449A16C0, RTTI: 0
m_methods:
 144694A40 "Crc32 RecipeData::GetAchievementId(const RecipeData*);" 
 1446947A0 "unsigned int RecipeData::GetIngredientCount(const RecipeData*);" 
 141F9D380 "bool RecipeData::GetUnlockedAchievementBlocksRecrafting(const RecipeData*);" 
 1446947F0 "bool RecipeData::GetSkipGrantItems(const RecipeData*);" 
m_properties:
 144694B10 "int RecipeData::itemTier::Getter(const RecipeData*);" 
 1434E9330 "bool& RecipeData::listedByDefault::Getter(RecipeData*);" 
 144848680 "void RecipeData::listedByDefault::Setter(RecipeData*, const bool&);" 
 1444A9F80 "unsigned int& RecipeData::baseGearScore::Getter(RecipeData*);" 
 14453DC70 "void RecipeData::baseGearScore::Setter(RecipeData*, const unsigned int&);" 
 1432C8C80 "AZStd::vector<IngredientEntry, allocator>& RecipeData::ingredients::Getter(RecipeData*);" 
 144848320 "void RecipeData::ingredients::Setter(RecipeData*, const AZStd::vector<IngredientEntry, allocator>&);" 
 1406417C0 "int& RecipeData::recipeLevel::Getter(RecipeData*);" 
 144320FD0 "void RecipeData::recipeLevel::Setter(RecipeData*, const int&);" 
 143B72EA0 "Crc32& RecipeData::requiredAchievement::Getter(RecipeData*);" 
 144848300 "void RecipeData::requiredAchievement::Setter(RecipeData*, const Crc32&);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeData::name::Getter(RecipeData*);" 
 143EB82E0 "void RecipeData::name::Setter(RecipeData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 144694640 "AZ::u64 RecipeData::numStationTypes::Getter(const RecipeData*);" 
 144694730 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RecipeData::resultItemId::Getter(const RecipeData*);" 
 140584310 "bool& RecipeData::knownByDefault::Getter(RecipeData*);" 
 1405A4D40 "void RecipeData::knownByDefault::Setter(RecipeData*, const bool&);" 
 1403F1550 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeData::tradeskill::Getter(RecipeData*);" 
 1417146E0 "void RecipeData::tradeskill::Setter(RecipeData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeData::id::Getter(RecipeData*);" 
 141AAD7E0 "void RecipeData::id::Setter(RecipeData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143B72E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeData::gameEventId::Getter(RecipeData*);" 
 144848380 "void RecipeData::gameEventId::Setter(RecipeData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeData::category::Getter(RecipeData*);" 
 1440B4F60 "void RecipeData::category::Setter(RecipeData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14478E1A0 "bool& RecipeData::isTemporary::Getter(RecipeData*);" 
 1448486A0 "void RecipeData::isTemporary::Setter(RecipeData*, const bool&);" 
 140ED5EE0 "unsigned int& RecipeData::baseTier::Getter(RecipeData*);" 
 1448482F0 "void RecipeData::baseTier::Setter(RecipeData*, const unsigned int&);" 
 
[237] C: "AZStd::array<RaidRosterGroup, 10>"
T: 2DDCDF70-9041-570E-9CF1-D8611578FA2C, S: 1E0
 Ctor: 143F11780, Dtor: 143F13560, Alloc: 14418C210, Dealloc: 144219800, RTTI: 0
m_methods:
 14424FDE0 "RaidRosterGroup& AZStd::array<RaidRosterGroup, 10>::at(AZStd::array<RaidRosterGroup, 10>*, AZ::u64);" 
 14019D330 "int AZStd::array<RaidRosterGroup, 10>::size(AZStd::array<RaidRosterGroup, 10>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[238] C: "SequenceComponent"
T: 027CE988-CF48-4589-A73A-73CD8D02F783, S: 38
 Ctor: 14179BC30, Dtor: 1401DF450, Alloc: 141806640, Dealloc: 140630440, RTTI: 14616E260
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
m_requestBuses:
 "SequenceComponentRequestBus"
 
[239] C: "ReflectionFlags"
T: 1A340FFB-5458-46B3-8421-D5E0B2BAD6F5, S: 4
 Ctor: 1401DF1E0, Dtor: 140190D00, Alloc: 141806AC0, Dealloc: 1406E7CF0, RTTI: 0
m_properties:
 14019D350 "int ReflectionFlags::StaticObjects::Getter();" 
 14019D2F0 "int ReflectionFlags::Entities::Getter();" 
 14177EE00 "int ReflectionFlags::Particles::Getter();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[240] C: "ObjectiveTaskInstanceId"
T: E1838273-034D-47FB-B535-95FF1D52D8EE, S: 20
 Ctor: 143F11890, Dtor: 140190D00, Alloc: 14418AD80, Dealloc: 144218580, RTTI: 14619ACD8
m_methods:
 1431319A0 "bool ObjectiveTaskInstanceId::Equal(ObjectiveTaskInstanceId*, const ObjectiveTaskInstanceId&);" 
 14019CDE0 "AZ::u64 ObjectiveTaskInstanceId::Hash(ObjectiveTaskInstanceId*);" 
 14315E590 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ObjectiveTaskInstanceId::ToString(ObjectiveTaskInstanceId*);" 
m_properties:
 1401E7820 "ObjectiveInstanceId& ObjectiveTaskInstanceId::objectiveInstanceId::Getter(ObjectiveTaskInstanceId*);" 
 1440B4C40 "void ObjectiveTaskInstanceId::objectiveInstanceId::Setter(ObjectiveTaskInstanceId*, const ObjectiveInstanceId&);" 
 1406413D0 "unsigned char& ObjectiveTaskInstanceId::taskIndex::Getter(ObjectiveTaskInstanceId*);" 
 141AAD820 "void ObjectiveTaskInstanceId::taskIndex::Setter(ObjectiveTaskInstanceId*, const unsigned char&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[241] C: "Utilities"
T: CE7A4621-7E17-4DA3-801B-0CFC7B4E0563, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141344FA0, Dealloc: 141356C50, RTTI: 0
m_methods:
 141351FE0 "bool Utilities::ClipCapture(float, float, AZStd::basic_string_view<char, AZStd::char_traits<char>>, AZStd::basic_string_view<char, AZStd::char_traits<char>>, AZStd::basic_string_view<char, AZStd::char_traits<char>>);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[242] C: "RaidRosterPlayer"
T: F2EDEA15-1AE6-4391-9CC9-B347F2C3EAFF, S: 68
 Ctor: 143F110C0, Dtor: 143F133D0, Alloc: 14418A870, Dealloc: 144218780, RTTI: 1461A0968
m_methods:
 143EB7F80 "RaidRosterPlayer RaidRosterPlayer::Clone(const RaidRosterPlayer*);" 
m_properties:
 141057E00 "int RaidRosterPlayer::raidPermission::Getter(const RaidRosterPlayer*);" 
 14108F040 "void RaidRosterPlayer::raidPermission::Setter(RaidRosterPlayer*, int);" 
 143EB85E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RaidRosterPlayer::playerName::Getter(const RaidRosterPlayer*);" 
 143EB82E0 "void RaidRosterPlayer::playerName::Setter(RaidRosterPlayer*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7820 "SimplePlayerIdentification& RaidRosterPlayer::playerId::Getter(RaidRosterPlayer*);" 
 1440B4C60 "void RaidRosterPlayer::playerId::Setter(RaidRosterPlayer*, const SimplePlayerIdentification&);" 
 143EB8750 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RaidRosterPlayer::characterId::Getter(const RaidRosterPlayer*);" 
 1439CD010 "void RaidRosterPlayer::characterId::Setter(RaidRosterPlayer*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[243] C: "CrestColorData"
T: E13466E0-02EB-488D-9A83-1423E8490C30, S: 80
 Ctor: 1434E8E10, Dtor: 1434E8FA0, Alloc: 1434F4130, Dealloc: 1434F66A0, RTTI: 1461A1C60
m_properties:
 141EF8970 "int CrestColorData::faction::Getter(const CrestColorData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CrestColorData::entitlementId::Getter(CrestColorData*);" 
 1405842F0 "bool& CrestColorData::isSelectable::Getter(CrestColorData*);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CrestColorData::displayName::Getter(CrestColorData*);" 
 140D88940 "Color& CrestColorData::color::Getter(CrestColorData*);" 
 1434E9320 "bool& CrestColorData::isEntitlement::Getter(CrestColorData*);" 
 
[244] C: "AZStd::vector<ReplicatedOwnedHouseData, allocator>"
T: C91094DD-A78E-599A-89F9-1E3A8ABD00C2, S: 20
 Ctor: 1401DF120, Dtor: 144425310, Alloc: 1445F0DA0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1446938C0 "void AZStd::vector<ReplicatedOwnedHouseData, allocator>::pop_back(AZStd::vector<ReplicatedOwnedHouseData, allocator>*);" 
 1446911C0 "void AZStd::vector<ReplicatedOwnedHouseData, allocator>::clear(AZStd::vector<ReplicatedOwnedHouseData, allocator>*);" 
 1429E8E60 "int AZStd::vector<ReplicatedOwnedHouseData, allocator>::size(AZStd::vector<ReplicatedOwnedHouseData, allocator>*);" 
 142A30EB0 "ReplicatedOwnedHouseData& AZStd::vector<ReplicatedOwnedHouseData, allocator>::at(AZStd::vector<ReplicatedOwnedHouseData, allocator>*, AZ::u64);" 
 1446677F0 "void AZStd::vector<ReplicatedOwnedHouseData, allocator>::insert(AZStd::vector<ReplicatedOwnedHouseData, allocator>*, int, ReplicatedOwnedHouseData&);" 
 1446940B0 "void AZStd::vector<ReplicatedOwnedHouseData, allocator>::push_back(AZStd::vector<ReplicatedOwnedHouseData, allocator>*, const ReplicatedOwnedHouseData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[245] C: "InputEventNotificationId"
T: 9E0F0801-348B-4FF9-AF9B-858D59404968, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 141BABDF0, Dealloc: 141C5EAE0, RTTI: 0
m_constructors:
 141999AC0 "void InputEventNotificationId::Constructor(InputEventNotificationId*, const char*);" 
m_methods:
 141B671C0 "bool InputEventNotificationId::Equal(InputEventNotificationId*, const InputEventNotificationId&);" 
 141946FD0 "InputEventNotificationId InputEventNotificationId::CreateInputEventNotificationId(AZStd::basic_string_view<char, AZStd::char_traits<char>>);" 
 141D378E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> InputEventNotificationId::ToString(InputEventNotificationId*);" 
 14075E5C0 "InputEventNotificationId InputEventNotificationId::Clone(InputEventNotificationId*);" 
m_properties:
 1401AD7A0 "Crc32& InputEventNotificationId::profileCrc::Getter(InputEventNotificationId*);" 
 1401DF3E0 "void InputEventNotificationId::profileCrc::Setter(InputEventNotificationId*, const Crc32&);" 
 141946F70 "void InputEventNotificationId::actionName::Setter(InputEventNotificationId*, AZStd::basic_string_view<char, AZStd::char_traits<char>>);" 
 140916660 "Crc32& InputEventNotificationId::actionNameCrc::Getter(InputEventNotificationId*);" 
 1414D2A50 "void InputEventNotificationId::actionNameCrc::Setter(InputEventNotificationId*, const Crc32&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void InputEventNotificationId* ScriptDataContext& >" 12BB9203-BB0B-5E94-8933-1DA91C0F3059), VT: 1455BD048, V: 0x7FF75409DD20
 
[246] C: "VertexContainer<Vector2 >"
T: EBE98B36-0783-5226-9739-064BD41EBB52, S: 110
 Ctor: 1401DF0A0, Dtor: 1401DF3F0, Alloc: 140365810, Dealloc: 1403D77A0, RTTI: 0
m_methods:
 14045A440 "AZ::u64 VertexContainer<Vector2 >::Size(VertexContainer<Vector2 >*);" 
 140406210 "bool VertexContainer<Vector2 >::InsertVertex(VertexContainer<Vector2 >*, AZ::u64, const Vector2&);" 
 1403E35F0 "bool VertexContainer<Vector2 >::Empty(VertexContainer<Vector2 >*);" 
 140365640 "void VertexContainer<Vector2 >::AddVertex(VertexContainer<Vector2 >*, const Vector2&);" 
 140478770 "bool VertexContainer<Vector2 >::UpdateVertex(VertexContainer<Vector2 >*, AZ::u64, const Vector2&);" 
 1403B7200 "void VertexContainer<Vector2 >::Clear(VertexContainer<Vector2 >*);" 
 14031C0C0 "const Vector2& VertexContainer<Vector2 >::IndexRead(VertexContainer<Vector2 >*, AZ::u64);" 
 14044EF60 "bool VertexContainer<Vector2 >::RemoveVertex(VertexContainer<Vector2 >*, AZ::u64);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[247] C: "SimpleTreeCategoryData"
T: 1991F834-2E5C-4DE2-923C-D9E624F4F006, S: 90
 Ctor: 143F113A0, Dtor: 143F13440, Alloc: 14418BA30, Dealloc: 144219100, RTTI: 0
m_properties:
 1403F11B0 "Crc32& SimpleTreeCategoryData::parentCategory::Getter(SimpleTreeCategoryData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimpleTreeCategoryData::title::Getter(SimpleTreeCategoryData*);" 
 1417B81F0 "int& SimpleTreeCategoryData::index::Getter(SimpleTreeCategoryData*);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimpleTreeCategoryData::iconColorBackground::Getter(SimpleTreeCategoryData*);" 
 1401AD7A0 "Crc32& SimpleTreeCategoryData::id::Getter(SimpleTreeCategoryData*);" 
 
[248] C: "AZStd::vector<GovernanceEarningsPeriodData, allocator>"
T: E1998C13-B40B-561B-810F-D142112ED1AB, S: 20
 Ctor: 1401DF120, Dtor: 144424FE0, Alloc: 1445F0610, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693690 "void AZStd::vector<GovernanceEarningsPeriodData, allocator>::pop_back(AZStd::vector<GovernanceEarningsPeriodData, allocator>*);" 
 144690F80 "void AZStd::vector<GovernanceEarningsPeriodData, allocator>::clear(AZStd::vector<GovernanceEarningsPeriodData, allocator>*);" 
 1443D0EC0 "int AZStd::vector<GovernanceEarningsPeriodData, allocator>::size(AZStd::vector<GovernanceEarningsPeriodData, allocator>*);" 
 144690F40 "GovernanceEarningsPeriodData& AZStd::vector<GovernanceEarningsPeriodData, allocator>::at(AZStd::vector<GovernanceEarningsPeriodData, allocator>*, AZ::u64);" 
 144666980 "void AZStd::vector<GovernanceEarningsPeriodData, allocator>::insert(AZStd::vector<GovernanceEarningsPeriodData, allocator>*, int, GovernanceEarningsPeriodData&);" 
 1423C1EE0 "void AZStd::vector<GovernanceEarningsPeriodData, allocator>::push_back(AZStd::vector<GovernanceEarningsPeriodData, allocator>*, const GovernanceEarningsPeriodData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[249] C: "TerritoryProgressionActiveData"
T: 491678AF-7514-4676-8E77-DE9D8BD3E026, S: 28
 Ctor: 144422B40, Dtor: 140190D00, Alloc: 1445EED70, Dealloc: 143B3A670, RTTI: 1461851D8
m_methods:
 1423D9790 "bool TerritoryProgressionActiveData::IsActive(TerritoryProgressionActiveData*);" 
m_properties:
 1403EE8B0 "int& TerritoryProgressionActiveData::currentProgress::Getter(TerritoryProgressionActiveData*);" 
 1417BFEF0 "void TerritoryProgressionActiveData::currentProgress::Setter(TerritoryProgressionActiveData*, const int&);" 
 1401E7820 "Crc32& TerritoryProgressionActiveData::projectId::Getter(TerritoryProgressionActiveData*);" 
 14028DC50 "void TerritoryProgressionActiveData::projectId::Setter(TerritoryProgressionActiveData*, const Crc32&);" 
 1403F11A0 "WallClockTimePoint& TerritoryProgressionActiveData::timeProjectEnds::Getter(TerritoryProgressionActiveData*);" 
 14453DA80 "void TerritoryProgressionActiveData::timeProjectEnds::Setter(TerritoryProgressionActiveData*, const WallClockTimePoint&);" 
 
[250] C: "ComponentConfig"
T: 0A7929DF-2932-40EA-B2B3-79BC1C3490D0, S: 8
 Ctor: 1401DF140, Dtor: 1401DF450, Alloc: 140365830, Dealloc: 1403D77B0, RTTI: 1461267A8
 
[251] C: "PlayerIdentification"
T: 47142DC7-5ACE-4AFA-84C6-C38E4E059A7F, S: D0
 Ctor: 143F118D0, Dtor: 142F2E090, Alloc: 14418AE10, Dealloc: 141834CA0, RTTI: 146195E80
m_methods:
 141C88640 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc PlayerIdentification::ToString(PlayerIdentification*);" 
 143EB7BE0 "PlayerIdentification PlayerIdentification::Clone(const PlayerIdentification*);" 
 14096B150 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc PlayerIdentification::GetCharacterIdString(PlayerIdentification*);" 
 14415ECB0 "bool PlayerIdentification::Equal(PlayerIdentification*, const PlayerIdentification&);" 
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PlayerIdentification::playerName::Getter(PlayerIdentification*);" 
 141AAD7E0 "void PlayerIdentification::playerName::Setter(PlayerIdentification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[252] C: "GatherableData"
T: E14F8B53-BE23-40CF-864B-4FF5CE14969A, S: 268
 Ctor: 1444220D0, Dtor: 144424C70, Alloc: 1445EF8D0, Dealloc: 144663D40, RTTI: 0
m_properties:
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GatherableData::displayName::Getter(GatherableData*);" 
 140AFDD50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GatherableData::iconTypeUnlock::Getter(GatherableData*);" 
 143FBB960 "unsigned short& GatherableData::tradeskillLevel::Getter(GatherableData*);" 
 
[253] C: "AZStd::vector<UiSalvageData, allocator>"
T: 61EC57EE-042C-509B-A62C-94B29ADC7F9B, S: 20
 Ctor: 1401DF120, Dtor: 1446F4550, Alloc: 1449196B0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAF10 "void AZStd::vector<UiSalvageData, allocator>::pop_back(AZStd::vector<UiSalvageData, allocator>*);" 
 1449D7710 "void AZStd::vector<UiSalvageData, allocator>::clear(AZStd::vector<UiSalvageData, allocator>*);" 
 143EB8540 "int AZStd::vector<UiSalvageData, allocator>::size(AZStd::vector<UiSalvageData, allocator>*);" 
 14424FE00 "UiSalvageData& AZStd::vector<UiSalvageData, allocator>::at(AZStd::vector<UiSalvageData, allocator>*, AZ::u64);" 
 1449A5E10 "void AZStd::vector<UiSalvageData, allocator>::insert(AZStd::vector<UiSalvageData, allocator>*, int, UiSalvageData&);" 
 1449DB760 "void AZStd::vector<UiSalvageData, allocator>::push_back(AZStd::vector<UiSalvageData, allocator>*, const UiSalvageData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[254] C: "CatalogOffer"
T: CBCA8F10-18CF-49CA-852C-CC843100D45C, S: 2E0
 Ctor: 144281120, Dtor: 1442829C0, Alloc: 144375070, Dealloc: 1443B3900, RTTI: 1461B0FD0
m_properties:
 1442528C0 "bool CatalogOffer::hasFictionalPrice::Getter(const CatalogOffer*);" 
 143B72F80 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char CatalogOffer::bundledOffers::Getter(CatalogOffer*);" 
 1442D0230 "WallClockTimePoint& CatalogOffer::discountExpiration::Getter(CatalogOffer*);" 
 142681470 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::discountEndDate::Getter(CatalogOffer*);" 
 1405159B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::discountStartDate::Getter(CatalogOffer*);" 
 140AEC940 "Price& CatalogOffer::price::Getter(CatalogOffer*);" 
 144252850 "bool CatalogOffer::hasRealMoneyPrice::Getter(const CatalogOffer*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::offerId::Getter(CatalogOffer*);" 
 1403F3C00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::name::Getter(CatalogOffer*);" 
 144252800 "bool CatalogOffer::isStandalone::Getter(const CatalogOffer*);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::omniProductId::Getter(CatalogOffer*);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::productId::Getter(CatalogOffer*);" 
 1442D0240 "WallClockTimePoint& CatalogOffer::productExpiration::Getter(CatalogOffer*);" 
 140ED5EE0 "AZStd::vector<Entitlement, allocator>& CatalogOffer::entitlements::Getter(CatalogOffer*);" 
 1423B46B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::description::Getter(CatalogOffer*);" 
 1442529B0 "bool CatalogOffer::isBundle::Getter(const CatalogOffer*);" 
 142682980 "WallClockTimePoint& CatalogOffer::discountStart::Getter(CatalogOffer*);" 
 1410459C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::productStartDate::Getter(CatalogOffer*);" 
 142E63800 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CatalogOffer::productEndDate::Getter(CatalogOffer*);" 
 141681A10 "WallClockTimePoint& CatalogOffer::productStart::Getter(CatalogOffer*);" 
 144252810 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> CatalogOffer::metadata::Getter(const CatalogOffer*);" 
 1404012A0 "AZStd::vector<FictionalCurrencyPrice, allocator>& CatalogOffer::fictionalCurrencyPrices::Getter(CatalogOffer*);" 
 
[255] C: "GameModeMutationContext"
T: BCD9A4B1-AB11-4EA4-983B-0BB192B8A38A, S: 28
 Ctor: 144422020, Dtor: 140190D00, Alloc: 1445EE740, Dealloc: 143B3A670, RTTI: 1461937B8
m_methods:
 1443D0E30 "GameModeMutationContext GameModeMutationContext::Clone(const GameModeMutationContext*);" 
m_properties:
 1403EE8B0 "unsigned char& GameModeMutationContext::difficultyIndex::Getter(GameModeMutationContext*);" 
 14453DCB0 "void GameModeMutationContext::difficultyIndex::Setter(GameModeMutationContext*, const unsigned char&);" 
 1401E7820 "GameModeMutationSet& GameModeMutationContext::gameModeMutationSet::Getter(GameModeMutationContext*);" 
 14453DA40 "void GameModeMutationContext::gameModeMutationSet::Setter(GameModeMutationContext*, const GameModeMutationSet&);" 
 
[256] C: "CraftingFeeDiscountEntry"
T: 518B4D72-111D-4139-9EB2-DD0C1D7EFEA5, S: 30
 Ctor: 142845080, Dtor: 1401DF410, Alloc: 1428798F0, Dealloc: 141665EF0, RTTI: 0
m_properties:
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CraftingFeeDiscountEntry::discountName::Getter(CraftingFeeDiscountEntry*);" 
 140780AF0 "float& CraftingFeeDiscountEntry::discountPercent::Getter(CraftingFeeDiscountEntry*);" 
 
[257] C: "WarboardStatsEntry"
T: 57E7A140-1DE0-4BE4-827E-872C5C9ECB3B, S: 98
 Ctor: 143F11AC0, Dtor: 143F13950, Alloc: 14418AFC0, Dealloc: 144218980, RTTI: 1461A9308
m_methods:
 143EB7D20 "double WarboardStatsEntry::GetStatEntryValue(const WarboardStatsEntry*, int);" 
m_properties:
 140D4BEE0 "int WarboardStatsEntry::eWarboardStatType_AITakedowns::Getter();" 
 1409DE6F0 "int WarboardStatsEntry::eWarboardStatType_HealingDoneToSelf::Getter();" 
 14019CEA0 "int WarboardStatsEntry::eWarboardStatType_DamageTaken::Getter();" 
 14019CF00 "int WarboardStatsEntry::eWarboardStatType_Assists::Getter();" 
 14019D350 "int WarboardStatsEntry::eWarboardStatType_Deaths::Getter();" 
 1404D1B50 "int WarboardStatsEntry::eWarboardStatType_AzothEssenceDeposited::Getter();" 
 1409DE6C0 "int WarboardStatsEntry::eWarboardStatType_RepairsDone::Getter();" 
 143EB82C0 "int WarboardStatsEntry::eWarboardStatType_InfusedWoodGathered::Getter();" 
 1409DE6D0 "int WarboardStatsEntry::eWarboardStatType_AlliesRevived::Getter();" 
 141947010 "int WarboardStatsEntry::eWarboardStatType_InfusedHideGathered::Getter();" 
 14019D360 "int WarboardStatsEntry::eWarboardStatType_KillsWithWeapons::Getter();" 
 14018FB20 "int WarboardStatsEntry::eWarboardStatType_Score::Getter();" 
 14019D050 "int WarboardStatsEntry::eWarboardStatType_DamageFromWeapons::Getter();" 
 143EB7EA0 "int WarboardStatsEntry::eWarboardStatType_TotalResourcesDeposited::Getter();" 
 143EB84C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> WarboardStatsEntry::characterId::Getter(const WarboardStatsEntry*);" 
 141847B20 "int WarboardStatsEntry::eWarboardStatType_AIAssists::Getter();" 
 14019CD90 "int WarboardStatsEntry::eWarboardStatType_DamageWithWeapons::Getter();" 
 140D4BEF0 "int WarboardStatsEntry::eWarboardStatType_SiegeWeaponsDestroyed::Getter();" 
 143EB8350 "bool WarboardStatsEntry::isConnected::Getter(const WarboardStatsEntry*);" 
 142F4B960 "int WarboardStatsEntry::eWarboardStatType_PlayerAssists::Getter();" 
 14019D270 "int WarboardStatsEntry::eWarboardStatType_DamageFromSiegeWeapons::Getter();" 
 1409DE720 "int WarboardStatsEntry::eWarboardStatType_SiegeWeaponReloaded::Getter();" 
 1409DE6E0 "int WarboardStatsEntry::eWarboardStatType_AIKills::Getter();" 
 14019D2F0 "int WarboardStatsEntry::eWarboardStatType_DamageWithSiegeWeapons::Getter();" 
 140C4CA40 "int WarboardStatsEntry::eWarboardStatType_PlayerTakedowns::Getter();" 
 140190B20 "int WarboardStatsEntry::eWarboardStatType_TotalDamageDealt::Getter();" 
 14019D330 "int WarboardStatsEntry::eWarboardStatType_KillsWithSiegeWeapons::Getter();" 
 1409DE700 "int WarboardStatsEntry::eWarboardStatType_HealingDoneToAllies::Getter();" 
 143EB7E90 "int WarboardStatsEntry::eWarboardStatType_InfusedOreDeposited::Getter();" 
 143EB7B10 "int WarboardStatsEntry::eWarboardStatType_NumStats::Getter();" 
 14019CF10 "int WarboardStatsEntry::eWarboardStatType_Kills::Getter();" 
 14019D060 "int WarboardStatsEntry::eWarboardStatType_HealingDone::Getter();" 
 1409DE710 "int WarboardStatsEntry::eWarboardStatType_PlayerKills::Getter();" 
 143EB8110 "int WarboardStatsEntry::eWarboardStatType_InfusedOreGathered::Getter();" 
 1403B6070 "int WarboardStatsEntry::eWarboardStatType_AzothEssenceGathered::Getter();" 
 142F4B9A0 "int WarboardStatsEntry::eWarboardStatType_InfusedWoodDeposited::Getter();" 
 141C97420 "int WarboardStatsEntry::eWarboardStatType_InfusedHideDeposited::Getter();" 
 
[258] C: "GovernanceEarningStatementData"
T: 989BED9A-FDC2-4158-8152-A74757487CE4, S: 28
 Ctor: 144422130, Dtor: 140190D00, Alloc: 1445EE8F0, Dealloc: 143B3A670, RTTI: 14618E6F8
m_properties:
 14040B9C0 "int GovernanceEarningStatementData::taxId::Getter(const GovernanceEarningStatementData*);" 
 140C94FC0 "void GovernanceEarningStatementData::taxId::Setter(GovernanceEarningStatementData*, int);" 
 1403F11A0 "AZ::u64& GovernanceEarningStatementData::currencyAmount::Getter(GovernanceEarningStatementData*);" 
 140FCC860 "void GovernanceEarningStatementData::currencyAmount::Setter(GovernanceEarningStatementData*, const AZ::u64&);" 
 1403EE8B0 "AZ::u64& GovernanceEarningStatementData::transactionCount::Getter(GovernanceEarningStatementData*);" 
 1440B4E60 "void GovernanceEarningStatementData::transactionCount::Setter(GovernanceEarningStatementData*, const AZ::u64&);" 
 
[259] C: "RainComponent"
T: 9EECE8BD-2355-4600-BEF0-49415CAF72E8, S: 140
 Ctor: 14179BB20, Dtor: 1401DF450, Alloc: 141806520, Dealloc: 141834D20, RTTI: 14616E268
m_requestBuses:
 "RainComponentRequestBus"
 
[260] C: "ObjectiveInstanceId"
T: ADC3894F-B844-4A74-97C1-22DB237E7FD9, S: 10
 Ctor: 143F11870, Dtor: 140190D00, Alloc: 14418ACF0, Dealloc: 1406303C0, RTTI: 146199968
m_methods:
 14315E560 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ObjectiveInstanceId::ToString(ObjectiveInstanceId*);" 
 141E85710 "bool ObjectiveInstanceId::Equal(ObjectiveInstanceId*, const ObjectiveInstanceId&);" 
m_properties:
 1401E7820 "AZ::u64& ObjectiveInstanceId::value::Getter(ObjectiveInstanceId*);" 
 1440B4C30 "void ObjectiveInstanceId::value::Setter(ObjectiveInstanceId*, const AZ::u64&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[261] C: "UiScrollBarComponent"
T: 6B283F90-3519-47DA-A1DD-65A79CE119CF, S: 548
 Ctor: 1413CB010, Dtor: 1401DF450, Alloc: 141591010, Dealloc: 141665A70, RTTI: 1461490D8
m_requestBuses:
 "UiScrollBarBus"
 "UiScrollerBus"
 
[262] C: "WorldMetadata"
T: BE2C6248-49C1-4618-9715-B0E6F123DC61, S: 120
 Ctor: 143F11710, Dtor: 143F13550, Alloc: 14418C0F0, Dealloc: 144219700, RTTI: 0
m_properties:
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldMetadata::name::Getter(WorldMetadata*);" 
 142004F30 "void WorldMetadata::name::Setter(WorldMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldMetadata::worldId::Getter(WorldMetadata*);" 
 1403188A0 "void WorldMetadata::worldId::Setter(WorldMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldMetadata::version::Getter(WorldMetadata*);" 
 141AAD9C0 "void WorldMetadata::version::Setter(WorldMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldMetadata::status::Getter(WorldMetadata*);" 
 141716790 "void WorldMetadata::status::Setter(WorldMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140541A30 "int WorldMetadata::publicStatusCode::Getter(const WorldMetadata*);" 
 143EB8380 "void WorldMetadata::publicStatusCode::Setter(WorldMetadata*, int);" 
 1403F3C00 "int& WorldMetadata::connectionCount::Getter(WorldMetadata*);" 
 1440B5030 "void WorldMetadata::connectionCount::Setter(WorldMetadata*, const int&);" 
 140F838C0 "int& WorldMetadata::maxAccountCharacters::Getter(WorldMetadata*);" 
 1440B5090 "void WorldMetadata::maxAccountCharacters::Setter(WorldMetadata*, const int&);" 
 143FBB960 "int& WorldMetadata::maxConnectionCount::Getter(WorldMetadata*);" 
 1440B5060 "void WorldMetadata::maxConnectionCount::Setter(WorldMetadata*, const int&);" 
 140641920 "WorldMetrics& WorldMetadata::worldMetrics::Getter(WorldMetadata*);" 
 1440B5120 "void WorldMetadata::worldMetrics::Setter(WorldMetadata*, const WorldMetrics&);" 
 140400B50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WorldMetadata::worldSet::Getter(WorldMetadata*);" 
 14171C3C0 "void WorldMetadata::worldSet::Setter(WorldMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[263] C: "AZStd::vector<CatalogOffer, allocator>"
T: D9826DEF-7F1B-5A38-9073-91664943D09D, S: 20
 Ctor: 1401DF120, Dtor: 144282C20, Alloc: 1443764B0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1443D0200 "void AZStd::vector<CatalogOffer, allocator>::pop_back(AZStd::vector<CatalogOffer, allocator>*);" 
 1443CE190 "void AZStd::vector<CatalogOffer, allocator>::clear(AZStd::vector<CatalogOffer, allocator>*);" 
 144252950 "int AZStd::vector<CatalogOffer, allocator>::size(AZStd::vector<CatalogOffer, allocator>*);" 
 1443CE160 "CatalogOffer& AZStd::vector<CatalogOffer, allocator>::at(AZStd::vector<CatalogOffer, allocator>*, AZ::u64);" 
 1443B5010 "void AZStd::vector<CatalogOffer, allocator>::insert(AZStd::vector<CatalogOffer, allocator>*, int, CatalogOffer&);" 
 1443D0420 "void AZStd::vector<CatalogOffer, allocator>::push_back(AZStd::vector<CatalogOffer, allocator>*, const CatalogOffer&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[264] C: "SteamPresenseFriendInfo"
T: 1D775119-E2F4-4CC8-9299-0BD805A86D62, S: 50
 Ctor: 1429F4460, Dtor: 1429F46C0, Alloc: 14418BAC0, Dealloc: 142A1EE10, RTTI: 0
m_properties:
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SteamPresenseFriendInfo::worldId::Getter(SteamPresenseFriendInfo*);" 
 1403188A0 "void SteamPresenseFriendInfo::worldId::Setter(SteamPresenseFriendInfo*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SteamPresenseFriendInfo::friendName::Getter(SteamPresenseFriendInfo*);" 
 142004F30 "void SteamPresenseFriendInfo::friendName::Setter(SteamPresenseFriendInfo*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[265] C: "StaticPerkData"
T: FCBFB350-2593-4DB8-967C-36EF32481162, S: 2F8
 Ctor: 1446F2640, Dtor: 1446F4320, Alloc: 144918340, Dealloc: 1449A19C0, RTTI: 0
m_methods:
 142ECB680 "int StaticPerkData::GetAttributeBonus(StaticPerkData*, int, float, float);" 
 142ECCF40 "float StaticPerkData::GetPerkMultiplier(StaticPerkData*, unsigned short);" 
 1409141F0 "bool StaticPerkData::IsValid(StaticPerkData*);" 
 142ECE770 "bool StaticPerkData::HasExclusiveLabel(StaticPerkData*, const AZStd::vector<Crc32, allocator>&);" 
 142ECC470 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> StaticPerkData::GetGenericLocalizedDescription(StaticPerkData*);" 
m_properties:
 143B093F0 "int StaticPerkData::perkType::Getter(const StaticPerkData*);" 
 143B09400 "void StaticPerkData::perkType::Setter(StaticPerkData*, int);" 
 143B72E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticPerkData::iconPath::Getter(StaticPerkData*);" 
 14478DF70 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticPerkData::groupName::Getter(StaticPerkData*);" 
 14478DEB0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticPerkData::description::Getter(StaticPerkData*);" 
 140AEA6A0 "int& StaticPerkData::tier::Getter(StaticPerkData*);" 
 143079050 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticPerkData::displayName::Getter(StaticPerkData*);" 
 1401AD7A0 "Crc32& StaticPerkData::id::Getter(StaticPerkData*);" 
 1403F2E90 "AZStd::vector<Crc32, allocator>& StaticPerkData::exclusiveLabels::Getter(StaticPerkData*);" 
 1417B81F0 "unsigned int& StaticPerkData::channel::Getter(StaticPerkData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticPerkData::key::Getter(StaticPerkData*);" 
 
[266] C: "AudioTriggerOptions"
T: C996488E-B9FC-44A7-AA8A-654F6CD4CBF9, S: 70
 Ctor: 1439C5F40, Dtor: 1439C6040, Alloc: 1439D7120, Dealloc: 1439DA540, RTTI: 1461A9908
m_properties:
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AudioTriggerOptions::environmentName::Getter(AudioTriggerOptions*);" 
 14380DF20 "void AudioTriggerOptions::environmentName::Setter(AudioTriggerOptions*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140402330 "unsigned int AudioTriggerOptions::obstructionType::Getter(const AudioTriggerOptions*);" 
 14108B590 "void AudioTriggerOptions::obstructionType::Setter(AudioTriggerOptions*, unsigned int);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AudioTriggerOptions::rtpcName::Getter(AudioTriggerOptions*);" 
 1439CD010 "void AudioTriggerOptions::rtpcName::Setter(AudioTriggerOptions*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406414D0 "float& AudioTriggerOptions::environmentValue::Getter(AudioTriggerOptions*);" 
 141AAD930 "void AudioTriggerOptions::environmentValue::Setter(AudioTriggerOptions*, const float&);" 
 1403F2E90 "float& AudioTriggerOptions::rtpcValue::Getter(AudioTriggerOptions*);" 
 141AAD890 "void AudioTriggerOptions::rtpcValue::Setter(AudioTriggerOptions*, const float&);" 
 
[267] C: "AZStd::vector<GuildId, allocator>"
T: F8930C64-495B-5DFD-BA94-FA9E32CC607E, S: 20
 Ctor: 1401DF120, Dtor: 1419A8830, Alloc: 14418CA50, Dealloc: 1406305C0, RTTI: 0
m_methods:
 141D565E0 "void AZStd::vector<GuildId, allocator>::pop_back(AZStd::vector<GuildId, allocator>*);" 
 14069EE90 "void AZStd::vector<GuildId, allocator>::clear(AZStd::vector<GuildId, allocator>*);" 
 141946F60 "int AZStd::vector<GuildId, allocator>::size(AZStd::vector<GuildId, allocator>*);" 
 141D47110 "GuildId& AZStd::vector<GuildId, allocator>::at(AZStd::vector<GuildId, allocator>*, AZ::u64);" 
 14421E6E0 "void AZStd::vector<GuildId, allocator>::insert(AZStd::vector<GuildId, allocator>*, int, GuildId&);" 
 144251BF0 "void AZStd::vector<GuildId, allocator>::push_back(AZStd::vector<GuildId, allocator>*, const GuildId&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[268] C: "CraftingCategoryData"
T: B41E8B75-59F9-4D1F-B18C-F7C5BB6E75C1, S: A0
 Ctor: 1446F1ED0, Dtor: 1446F41D0, Alloc: 144917B60, Dealloc: 1449A12C0, RTTI: 0
m_properties:
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CraftingCategoryData::displayText::Getter(CraftingCategoryData*);" 
 142004F50 "void CraftingCategoryData::displayText::Setter(CraftingCategoryData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CraftingCategoryData::id::Getter(CraftingCategoryData*);" 
 1403188A0 "void CraftingCategoryData::id::Setter(CraftingCategoryData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CraftingCategoryData::imagePath::Getter(CraftingCategoryData*);" 
 142004F30 "void CraftingCategoryData::imagePath::Setter(CraftingCategoryData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406414E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CraftingCategoryData::description::Getter(CraftingCategoryData*);" 
 141714830 "void CraftingCategoryData::description::Setter(CraftingCategoryData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[269] C: "RaySplineQueryResult"
T: FE862126-C838-4999-9B7B-4AEEA5507A49, S: 30
 Ctor: 1401DF060, Dtor: 140190D00, Alloc: 1403662A0, Dealloc: 1403D7E50, RTTI: 0
m_properties:
 14019CE90 "VectorFloat RaySplineQueryResult::distanceSq::Getter(RaySplineQueryResult*);" 
 14019CCF0 "SplineAddress RaySplineQueryResult::splineAddress::Getter(RaySplineQueryResult*);" 
 14019CFD0 "VectorFloat RaySplineQueryResult::rayDistance::Getter(RaySplineQueryResult*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[270] C: "SearchContractsResponse"
T: CC2232BF-7AC4-468A-9865-5AA593978AA7, S: 68
 Ctor: 1444234F0, Dtor: 1444253C0, Alloc: 1445EF3A0, Dealloc: 144218780, RTTI: 1461B1040
m_properties:
 1401E7820 "AZStd::vector<AZStd::shared_ptr<Contract>, allocator>& SearchContractsResponse::contracts::Getter(SearchContractsResponse*);" 
 14453DA60 "void SearchContractsResponse::contracts::Setter(SearchContractsResponse*, const AZStd::vector<AZStd::shared_ptr<Contract>, allocator>&);" 
 1403F11C0 "int& SearchContractsResponse::numTotalContracts::Getter(SearchContractsResponse*);" 
 141AAD8D0 "void SearchContractsResponse::numTotalContracts::Setter(SearchContractsResponse*, const int&);" 
 
[271] C: "GameModeStaticData"
T: F431E78E-90CB-460B-84E0-BF4EC10EC37F, S: 340
 Ctor: 1444220C0, Dtor: 144424C60, Alloc: 1445EF840, Dealloc: 144663C40, RTTI: 0
m_methods:
 1416849E0 "bool GameModeStaticData::IsValid(GameModeStaticData*);" 
m_properties:
 1431AC5A0 "Crc32& GameModeStaticData::difficultyProgressionId::Getter(GameModeStaticData*);" 
 1432C7E80 "int& GameModeStaticData::teamCapacity::Getter(GameModeStaticData*);" 
 1444A9FB0 "int& GameModeStaticData::numTeams::Getter(GameModeStaticData*);" 
 1444A9FD0 "bool& GameModeStaticData::isDungeon::Getter(GameModeStaticData*);" 
 143B72EB0 "int& GameModeStaticData::victoryDelaySec::Getter(GameModeStaticData*);" 
 142E64E80 "AZStd::vector<Crc32, allocator>& GameModeStaticData::possibleItemDropIds::Getter(GameModeStaticData*);" 
 140AEE960 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GameModeStaticData::iconPath::Getter(GameModeStaticData*);" 
 140C46640 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GameModeStaticData::requirementText::Getter(GameModeStaticData*);" 
 1444A9FC0 "int& GameModeStaticData::minGroupSize::Getter(GameModeStaticData*);" 
 141C8A130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GameModeStaticData::description::Getter(GameModeStaticData*);" 
 1444A9FE0 "bool& GameModeStaticData::isMutable::Getter(GameModeStaticData*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GameModeStaticData::scriptName::Getter(GameModeStaticData*);" 
 140968720 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GameModeStaticData::backgroundImagePath::Getter(GameModeStaticData*);" 
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GameModeStaticData::displayName::Getter(GameModeStaticData*);" 
 14111BF40 "int& GameModeStaticData::requiredLevel::Getter(GameModeStaticData*);" 
 1404012A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GameModeStaticData::mapId::Getter(GameModeStaticData*);" 
 
[272] C: "PolygonPrism"
T: F01C8BDD-6F24-4344-8945-521A8750B30B, S: 170
 Ctor: 1401DF160, Dtor: 1401DF450, Alloc: 140365B20, Dealloc: 1403D7A40, RTTI: 146126820
m_properties:
 1401E7830 "float& PolygonPrism::height::Getter(PolygonPrism*);" 
 1401E7820 "VertexContainer<Vector2 >& PolygonPrism::vertexContainer::Getter(PolygonPrism*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[273] C: "UiWeaponAttributes"
T: A6292178-77F7-4A42-B507-5EA1AA31FE5A, S: A8
 Ctor: 1446F2900, Dtor: 142790200, Alloc: 144918B20, Dealloc: 1449A1CC0, RTTI: 0
m_properties:
 140AF2E90 "float& UiWeaponAttributes::elementalArmorRating::Getter(UiWeaponAttributes*);" 
 140541A70 "void UiWeaponAttributes::elementalArmorRating::Setter(UiWeaponAttributes*, const float&);" 
 141692540 "float& UiWeaponAttributes::physicalArmorRating::Getter(UiWeaponAttributes*);" 
 140541A20 "void UiWeaponAttributes::physicalArmorRating::Setter(UiWeaponAttributes*, const float&);" 
 140584310 "bool& UiWeaponAttributes::isMagic::Getter(UiWeaponAttributes*);" 
 1405A4D40 "void UiWeaponAttributes::isMagic::Setter(UiWeaponAttributes*, const bool&);" 
 143FBB940 "float& UiWeaponAttributes::gatheringEfficiency::Getter(UiWeaponAttributes*);" 
 144848690 "void UiWeaponAttributes::gatheringEfficiency::Setter(UiWeaponAttributes*, const float&);" 
 1401E7820 "float& UiWeaponAttributes::baseStaggerDamage::Getter(UiWeaponAttributes*);" 
 14028DC50 "void UiWeaponAttributes::baseStaggerDamage::Setter(UiWeaponAttributes*, const float&);" 
 140AF21A0 "int& UiWeaponAttributes::reqStrength::Getter(UiWeaponAttributes*);" 
 1448486D0 "void UiWeaponAttributes::reqStrength::Setter(UiWeaponAttributes*, const int&);" 
 1403F1550 "int& UiWeaponAttributes::reqSpirit::Getter(UiWeaponAttributes*);" 
 144848710 "void UiWeaponAttributes::reqSpirit::Setter(UiWeaponAttributes*, const int&);" 
 1401AD7A0 "bool& UiWeaponAttributes::isValid::Getter(UiWeaponAttributes*);" 
 140752130 "void UiWeaponAttributes::isValid::Setter(UiWeaponAttributes*, const bool&);" 
 1406413D0 "AZStd::vector<UiValuePair, allocator>& UiWeaponAttributes::primaryAttack::Getter(UiWeaponAttributes*);" 
 144848270 "void UiWeaponAttributes::primaryAttack::Setter(UiWeaponAttributes*, const AZStd::vector<UiValuePair, allocator>&);" 
 140584300 "int& UiWeaponAttributes::blockStability::Getter(UiWeaponAttributes*);" 
 144848650 "void UiWeaponAttributes::blockStability::Setter(UiWeaponAttributes*, const int&);" 
 140AEA6B0 "int& UiWeaponAttributes::maxCastDistance::Getter(UiWeaponAttributes*);" 
 144848720 "void UiWeaponAttributes::maxCastDistance::Setter(UiWeaponAttributes*, const int&);" 
 140782520 "float& UiWeaponAttributes::critChance::Getter(UiWeaponAttributes*);" 
 1414D2A60 "void UiWeaponAttributes::critChance::Setter(UiWeaponAttributes*, const float&);" 
 1410530F0 "float& UiWeaponAttributes::gatheringMultiplier::Getter(UiWeaponAttributes*);" 
 1448486C0 "void UiWeaponAttributes::gatheringMultiplier::Setter(UiWeaponAttributes*, const float&);" 
 140916660 "float& UiWeaponAttributes::baseDamage::Getter(UiWeaponAttributes*);" 
 1414D2A50 "void UiWeaponAttributes::baseDamage::Setter(UiWeaponAttributes*, const float&);" 
 1403F11A0 "float& UiWeaponAttributes::critDamageMultiplier::Getter(UiWeaponAttributes*);" 
 1417BFEB0 "void UiWeaponAttributes::critDamageMultiplier::Setter(UiWeaponAttributes*, const float&);" 
 140AF8A80 "int& UiWeaponAttributes::reqIntelligence::Getter(UiWeaponAttributes*);" 
 1448486F0 "void UiWeaponAttributes::reqIntelligence::Setter(UiWeaponAttributes*, const int&);" 
 1403F2E90 "AZStd::vector<UiValuePair, allocator>& UiWeaponAttributes::alternateAttack::Getter(UiWeaponAttributes*);" 
 144848490 "void UiWeaponAttributes::alternateAttack::Setter(UiWeaponAttributes*, const AZStd::vector<UiValuePair, allocator>&);" 
 1407E7270 "int& UiWeaponAttributes::reqDexterity::Getter(UiWeaponAttributes*);" 
 1448486E0 "void UiWeaponAttributes::reqDexterity::Setter(UiWeaponAttributes*, const int&);" 
 14096B150 "AZStd::vector<UiValuePair, allocator>& UiWeaponAttributes::tertiaryAttack::Getter(UiWeaponAttributes*);" 
 144848550 "void UiWeaponAttributes::tertiaryAttack::Setter(UiWeaponAttributes*, const AZStd::vector<UiValuePair, allocator>&);" 
 1406414E0 "float& UiWeaponAttributes::blockStaminaDamage::Getter(UiWeaponAttributes*);" 
 140541A40 "void UiWeaponAttributes::blockStaminaDamage::Setter(UiWeaponAttributes*, const float&);" 
 
[274] C: "RaidRoster"
T: F5D61C62-6FAE-4521-A335-74812936E0E5, S: 1E8
 Ctor: 143F10FE0, Dtor: 143F13340, Alloc: 14418A750, Dealloc: 144218700, RTTI: 1461A08E0
m_methods:
 143EB7B60 "RaidRoster RaidRoster::Clone(const RaidRoster*);" 
 14342A9B0 "AZ::u64 RaidRoster::NumManuallySelectedMembers(RaidRoster*);" 
m_properties:
 1401E7820 "AZStd::array<RaidRosterGroup, 10>& RaidRoster::groups::Getter(RaidRoster*);" 
 1440B4C50 "void RaidRoster::groups::Setter(RaidRoster*, const AZStd::array<RaidRosterGroup, 10>&);" 
 
[275] C: "UIGameChatMessage"
T: 43D9D4CF-CDCB-4E72-923C-3A32400BF6B5, S: 280
 Ctor: 144281990, Dtor: 140B5B0B0, Alloc: 1434CD900, Dealloc: 1443B3B00, RTTI: 1461A36C0
m_properties:
 1442D0340 "bool& UIGameChatMessage::isNew::Getter(BaseGameChatMessage*);" 
 14135D7C0 "AZStd::vector<ItemDescriptor, allocator>& UIGameChatMessage::itemDescriptors::Getter(UIGameChatMessage*);" 
 144252990 "SimplePlayerIdentification UIGameChatMessage::sender::Getter(UIGameChatMessage*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UIGameChatMessage::senderName::Getter(BaseGameChatMessage*);" 
 140D4ED90 "bool& UIGameChatMessage::isOwn::Getter(UIGameChatMessage*);" 
 1442D0320 "bool& UIGameChatMessage::isGameMasterClientMsg::Getter(BaseGameChatMessage*);" 
 1410459C0 "AZ::u64& UIGameChatMessage::timestamp::Getter(BaseGameChatMessage*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UIGameChatMessage::recipientName::Getter(BaseGameChatMessage*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UIGameChatMessage::senderId::Getter(BaseGameChatMessage*);" 
 14111BF40 "bool& UIGameChatMessage::alertOnReceive::Getter(UIGameChatMessage*);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UIGameChatMessage::body::Getter(BaseGameChatMessage*);" 
 140541A30 "int UIGameChatMessage::type::Getter(UIGameChatMessage*);" 
 1442D0330 "bool& UIGameChatMessage::isPingMsg::Getter(BaseGameChatMessage*);" 
 
[276] C: "UiGuild"
T: B6DA401D-7600-4C34-BC3B-3643E01D1F41, S: 50
 Ctor: 143F114D0, Dtor: 1401DF410, Alloc: 14418BBE0, Dealloc: 141C5E9E0, RTTI: 0
m_properties:
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiGuild::guildName::Getter(UiGuild*);" 
 1403188A0 "void UiGuild::guildName::Setter(UiGuild*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "GuildId& UiGuild::guildId::Getter(UiGuild*);" 
 1440B4EB0 "void UiGuild::guildId::Setter(UiGuild*, const GuildId&);" 
 
[277] C: "AZStd::vector<BehaviorComponentId, allocator>"
T: 8293031B-ABC3-5CD2-A1CB-1DB6792ADD5C, S: 20
 Ctor: 1401DF120, Dtor: 140573E10, Alloc: 140609FF0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<BehaviorComponentId, allocator>::pop_back(AZStd::vector<BehaviorComponentId, allocator>*);" 
 14069EE90 "void AZStd::vector<BehaviorComponentId, allocator>::clear(AZStd::vector<BehaviorComponentId, allocator>*);" 
 14045A440 "int AZStd::vector<BehaviorComponentId, allocator>::size(AZStd::vector<BehaviorComponentId, allocator>*);" 
 14031C0C0 "BehaviorComponentId& AZStd::vector<BehaviorComponentId, allocator>::at(AZStd::vector<BehaviorComponentId, allocator>*, AZ::u64);" 
 14064B4E0 "void AZStd::vector<BehaviorComponentId, allocator>::insert(AZStd::vector<BehaviorComponentId, allocator>*, int, BehaviorComponentId&);" 
 1406AE8D0 "void AZStd::vector<BehaviorComponentId, allocator>::push_back(AZStd::vector<BehaviorComponentId, allocator>*, const BehaviorComponentId&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[278] C: "RemotePlayerGuildData"
T: 84390958-E65C-1276-C70A-A4A5071FC240, S: E0
 Ctor: 144422420, Dtor: 144424DA0, Alloc: 1445EEAA0, Dealloc: 1446635C0, RTTI: 1461A2AA8
m_properties:
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RemotePlayerGuildData::guildName::Getter(RemotePlayerGuildData*);" 
 142F33410 "void RemotePlayerGuildData::guildName::Setter(RemotePlayerGuildData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11A0 "GuildId& RemotePlayerGuildData::guildId::Getter(RemotePlayerGuildData*);" 
 1440B4CB0 "void RemotePlayerGuildData::guildId::Setter(RemotePlayerGuildData*, const GuildId&);" 
 140D88940 "GuildIconData& RemotePlayerGuildData::crestData::Getter(RemotePlayerGuildData*);" 
 14453DD90 "void RemotePlayerGuildData::crestData::Setter(RemotePlayerGuildData*, const GuildIconData&);" 
 1423B46B0 "bool& RemotePlayerGuildData::isGuildSizeOfOne::Getter(RemotePlayerGuildData*);" 
 14453DEF0 "void RemotePlayerGuildData::isGuildSizeOfOne::Setter(RemotePlayerGuildData*, const bool&);" 
 
[279] C: "SimplePOI"
T: 8466132E-ADAC-4B12-AEC2-E22B30BC74F4, S: 188
 Ctor: 143F11200, Dtor: 143F13420, Alloc: 14418B9A0, Dealloc: 144219000, RTTI: 0
m_methods:
 143AD9E70 "bool SimplePOI::HasPoiTag(SimplePOI*, Crc32);" 
m_properties:
 143FBB8E0 "int& SimplePOI::recommendedLevel::Getter(SimplePOI*);" 
 1440B4DA0 "void SimplePOI::recommendedLevel::Setter(SimplePOI*, const int&);" 
 140F838C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::outpostId::Getter(SimplePOI*);" 
 1440B5070 "void SimplePOI::outpostId::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1410530F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::tooltipBackground::Getter(SimplePOI*);" 
 1440B4FF0 "void SimplePOI::tooltipBackground::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143FBB8C0 "bool& SimplePOI::isArea::Getter(SimplePOI*);" 
 1440B4D70 "void SimplePOI::isArea::Setter(SimplePOI*, const bool&);" 
 140E5C920 "int& SimplePOI::groupSize::Getter(SimplePOI*);" 
 1440B4D90 "void SimplePOI::groupSize::Setter(SimplePOI*, const int&);" 
 1406414D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::compassIconPath::Getter(SimplePOI*);" 
 1440B4F80 "void SimplePOI::compassIconPath::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143FBB8D0 "bool& SimplePOI::isCollapsible::Getter(SimplePOI*);" 
 1440B4D80 "void SimplePOI::isCollapsible::Setter(SimplePOI*, const bool&);" 
 1403F2E90 "float& SimplePOI::discoveryRadius::Getter(SimplePOI*);" 
 141AAD890 "void SimplePOI::discoveryRadius::Setter(SimplePOI*, const float&);" 
 1403F2E80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::mapIconPath::Getter(SimplePOI*);" 
 14380DF20 "void SimplePOI::mapIconPath::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14183CAA0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::monikerId::Getter(SimplePOI*);" 
 1440B50F0 "void SimplePOI::monikerId::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140916660 "bool& SimplePOI::isDiscovered::Getter(SimplePOI*);" 
 1440B4C10 "void SimplePOI::isDiscovered::Setter(SimplePOI*, const bool&);" 
 1423D88B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::debugText::Getter(SimplePOI*);" 
 1440B4CD0 "void SimplePOI::debugText::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "int& SimplePOI::id::Getter(SimplePOI*);" 
 1401DF3E0 "void SimplePOI::id::Setter(SimplePOI*, const int&);" 
 140C498D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::gameMode::Getter(SimplePOI*);" 
 1440B4DC0 "void SimplePOI::gameMode::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7820 "Vector2& SimplePOI::position::Getter(SimplePOI*);" 
 1440B4C70 "void SimplePOI::position::Setter(SimplePOI*, const Vector2&);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePOI::nameLocalizationKey::Getter(SimplePOI*);" 
 1439CD010 "void SimplePOI::nameLocalizationKey::Setter(SimplePOI*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143FBB880 "bool& SimplePOI::isCharted::Getter(SimplePOI*);" 
 1440B4C20 "void SimplePOI::isCharted::Setter(SimplePOI*, const bool&);" 
 1403FB4D0 "int& SimplePOI::settlementId::Getter(SimplePOI*);" 
 1440B4D60 "void SimplePOI::settlementId::Setter(SimplePOI*, const int&);" 
 141EEEFA0 "AZStd::vector<Crc32, allocator>& SimplePOI::poiTags::Getter(SimplePOI*);" 
 1440B4D20 "void SimplePOI::poiTags::Setter(SimplePOI*, const AZStd::vector<Crc32, allocator>&);" 
 
[280] C: "Duration"
T: 7C5B3129-8A83-418A-BFC0-E065C3AA3772, S: 10
 Ctor: 1446F2950, Dtor: 140190D00, Alloc: 144917070, Dealloc: 1406303C0, RTTI: 14617A858
m_methods:
 141EC86D0 "Duration Duration::FromSecondsUnrounded(double);" 
 141EC8590 "Duration Duration::FromHoursUnrounded(double);" 
 141F55190 "double Duration::ToNanosecondsUnrounded(Duration*);" 
 141F55150 "AZ::s64 Duration::ToMinutes(Duration*);" 
 141F550D0 "AZ::s64 Duration::ToMicroseconds(Duration*);" 
 141F52030 "double Duration::ToHoursUnrounded(Duration*);" 
 141F551A0 "AZ::s64 Duration::ToSeconds(Duration*);" 
 141F52010 "AZ::s64 Duration::ToHours(Duration*);" 
 141F55170 "double Duration::ToMinutesUnrounded(Duration*);" 
 1446949C0 "AZ::s64 Duration::ToSecondsRoundedUp(Duration*);" 
 141F550F0 "double Duration::ToMicrosecondsUnrounded(Duration*);" 
 141F551C0 "double Duration::ToSecondsUnrounded(Duration*);" 
 14019CDD0 "AZ::s64 Duration::ToNanoseconds(Duration*);" 
 141F55110 "AZ::s64 Duration::ToMilliseconds(Duration*);" 
 141EC8670 "Duration Duration::FromMinutesUnrounded(double);" 
 141F55130 "double Duration::ToMillisecondsUnrounded(Duration*);" 
 
[281] C: "ItemLocation"
T: 299A28A5-E9E7-4353-9AB0-7C3A2BD25095, S: 30
 Ctor: 143F10D90, Dtor: 140190D00, Alloc: 14418A480, Dealloc: 142F94D60, RTTI: 14618B890
m_methods:
 143EB8790 "ItemLocation ItemLocation::Clone(const ItemLocation*);" 
m_properties:
 14019D150 "int ItemLocation::containerType::Getter(const ItemLocation*);" 
 14081A4F0 "void ItemLocation::containerType::Setter(ItemLocation*, int);" 
 1403EE8B0 "AZ::Uuid& ItemLocation::itemInstanceId::Getter(ItemLocation*);" 
 1440B4E50 "void ItemLocation::itemInstanceId::Setter(ItemLocation*, const AZ::Uuid&);" 
 1417B81C0 "int& ItemLocation::containerSlotId::Getter(ItemLocation*);" 
 1417BFEC0 "void ItemLocation::containerSlotId::Setter(ItemLocation*, const int&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[282] C: "ComponentId"
T: 60A9A069-9C3D-465A-B7AD-0D6CC803990A, S: 8
 Ctor: 14056BF30, Dtor: 140190D00, Alloc: 140609D20, Dealloc: 140630340, RTTI: 0
m_constructors:
 14056BF30 "void ComponentId::Constructor(BehaviorComponentId*);" 
m_methods:
 14031BF00 "bool ComponentId::Equal(BehaviorComponentId*, const BehaviorComponentId&);" 
 140650820 "bool ComponentId::IsValid(BehaviorComponentId*);" 
 1404720F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ComponentId::ToString(BehaviorComponentId*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[283] C: "UiVitalsStatBind"
T: C3267259-A594-4B97-8B38-E340251C131E, S: 10
 Ctor: 143F116A0, Dtor: 140190D00, Alloc: 14418BFD0, Dealloc: 141C5EBE0, RTTI: 0
m_properties:
 1401E7820 "EntityId& UiVitalsStatBind::vitalsStatBindEntityId::Getter(UiVitalsStatBind*);" 
 1440B4C30 "void UiVitalsStatBind::vitalsStatBindEntityId::Setter(UiVitalsStatBind*, const EntityId&);" 
 1401AD7A0 "UiVitalsStat& UiVitalsStatBind::vitalsStat::Getter(UiVitalsStatBind*);" 
 1401DF380 "void UiVitalsStatBind::vitalsStat::Setter(UiVitalsStatBind*, const UiVitalsStat&);" 
 
[284] C: "BoxShapeConfig"
T: F034FBA2-AC2F-4E66-8152-14DFB90D6283, S: 20
 Ctor: 141999A30, Dtor: 1401DF450, Alloc: 141BAAC50, Dealloc: 141C5E3E0, RTTI: 146175670
m_constructors:
 141999A30 "void BoxShapeConfig::Constructor(BoxShapeConfig*);" 
 141999A60 "void BoxShapeConfig::Constructor(BoxShapeConfig*, Vector3&);" 
m_properties:
 1403F11A0 "Vector3& BoxShapeConfig::Dimensions::Getter(BoxShapeConfig*);" 
 140454D90 "void BoxShapeConfig::Dimensions::Setter(BoxShapeConfig*, const Vector3&);" 
 
[285] C: "GuildId"
T: 0252597E-4D49-49D3-A0A3-4169106BBABA, S: 20
 Ctor: 1434E8F20, Dtor: 140190D00, Alloc: 1434F4250, Dealloc: 1406307C0, RTTI: 14618D868
m_methods:
 1434F8060 "bool GuildId::IsValid(GuildId*);" 
 1434FA600 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GuildId::ToString(GuildId*);" 
 1434F3380 "bool GuildId::Equal(GuildId*, const GuildId&);" 
 1434FA310 "void GuildId::Reset(GuildId*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[286] C: "Entity"
T: 41CC88A4-FE07-48E6-943D-998DE68AFF5C, S: 10
 Ctor: 14056BF40, Dtor: 1401DF450, Alloc: 140609DB0, Dealloc: 1406303C0, RTTI: 146128558
m_constructors:
 14056BF40 "void Entity::Constructor(BehaviorEntity*);" 
 14056BF90 "void Entity::Constructor(BehaviorEntity*, EntityId);" 
 14056BF60 "void Entity::Constructor(BehaviorEntity*, AZ::Entity*);" 
m_methods:
 1406394F0 "bool Entity::Exists(BehaviorEntity*);" 
 14062DCD0 "BehaviorComponentId Entity::CreateComponent(BehaviorEntity*, const AZ::Uuid&, const ComponentConfig*);" 
 140639990 "AZStd::vector<BehaviorComponentId, allocator> Entity::FindAllComponentsOfType(BehaviorEntity*, const AZ::Uuid&);" 
 140684800 "void Entity::SetName(BehaviorEntity*, const char*);" 
 140632000 "bool Entity::DestroyComponent(BehaviorEntity*, BehaviorComponentId);" 
 140606E30 "void Entity::Activate(BehaviorEntity*);" 
 14063DF00 "bool Entity::GetComponentConfiguration(BehaviorEntity*, BehaviorComponentId, ComponentConfig&);" 
 140639C60 "BehaviorComponentId Entity::FindComponentOfType(BehaviorEntity*, const AZ::Uuid&);" 
 140642330 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Entity::GetName(BehaviorEntity*);" 
 140683D60 "bool Entity::SetComponentConfiguration(BehaviorEntity*, BehaviorComponentId, const ComponentConfig&);" 
 14064E3D0 "bool Entity::IsActivated(BehaviorEntity*);" 
 140641200 "EntityId Entity::GetId(BehaviorEntity*);" 
 1406462B0 "AZ::Uuid Entity::GetOwningContextId(BehaviorEntity*);" 
 1406309C0 "void Entity::Deactivate(BehaviorEntity*);" 
 14063E240 "AZStd::vector<BehaviorComponentId, allocator> Entity::GetComponents(BehaviorEntity*);" 
 140650830 "bool Entity::IsValid(BehaviorEntity*);" 
 14063E080 "AZ::Uuid Entity::GetComponentType(BehaviorEntity*, BehaviorComponentId);" 
 14063DF80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Entity::GetComponentName(BehaviorEntity*, BehaviorComponentId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void BehaviorEntity* ScriptDataContext& >" C894C5E4-ABB3-5F52-A2A4-CB4977CF01CE), VT: 1454437A0, V: 0x7FF752A0C740
 
[287] C: "Environment"
T: FBFF1A05-BD9C-4196-982B-A6F28ADBAE3C, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141344D60, Dealloc: 141356C50, RTTI: 0
m_methods:
 14135F430 "float Environment::GetSunLongitude();" 
 1413767B0 "void Environment::SetSunLongitude(float, bool);" 
 14135D740 "float Environment::GetMoonLatitude();" 
 141376580 "void Environment::SetSkyboxStretch(float);" 
 141360C60 "Vector3 Environment::GetWindDirection();" 
 141375FF0 "void Environment::SetMoonLatitude(float, bool);" 
 141377340 "void Environment::SetWindDirection(const Vector3&);" 
 141376530 "void Environment::SetSkyboxMaterial(MaterialHandle);" 
 1413764F0 "void Environment::SetSkyboxAngle(float);" 
 1413760A0 "void Environment::SetMoonLongitude(float, bool);" 
 14135F3F0 "float Environment::GetSunLatitude();" 
 141376730 "void Environment::SetSunLatitude(float, bool);" 
 14135D780 "float Environment::GetMoonLongitude();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[288] C: "AZStd::vector<Crc32, allocator>"
T: 287CEE87-6FF3-52FC-9D32-38255E2C7FE9, S: 20
 Ctor: 1401DF120, Dtor: 142845130, Alloc: 142879AE0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428A96F0 "void AZStd::vector<Crc32, allocator>::pop_back(AZStd::vector<Crc32, allocator>*);" 
 14069EE90 "void AZStd::vector<Crc32, allocator>::clear(AZStd::vector<Crc32, allocator>*);" 
 1428384E0 "int AZStd::vector<Crc32, allocator>::size(AZStd::vector<Crc32, allocator>*);" 
 1428A7A00 "Crc32& AZStd::vector<Crc32, allocator>::at(AZStd::vector<Crc32, allocator>*, AZ::u64);" 
 1428956F0 "void AZStd::vector<Crc32, allocator>::insert(AZStd::vector<Crc32, allocator>*, int, Crc32&);" 
 1428A9CF0 "void AZStd::vector<Crc32, allocator>::push_back(AZStd::vector<Crc32, allocator>*, const Crc32&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[289] C: "ParticleComponent"
T: 65BC817A-ABF6-440F-AD4F-581C40F92795, S: 1E0
 Ctor: 1419A7F20, Dtor: 1401DF450, Alloc: 141BAB160, Dealloc: 141C5E660, RTTI: 146175648
m_requestBuses:
 "ParticleComponentRequestBus"
 
[290] C: "WarboardStatClientData"
T: 89139052-3FD7-4D60-9E81-432E6EEC396A, S: 68
 Ctor: 143F11A50, Dtor: 14399B700, Alloc: 14418AF30, Dealloc: 144218780, RTTI: 1461A9300
m_methods:
 143EB8840 "AZStd::vector<WarboardStatsEntry, allocator> WarboardStatClientData::GetDefenderStatValues(const WarboardStatClientData*);" 
 1439A2670 "const int WarboardStatClientData::GetLocalPlayerRank(WarboardStatClientData*);" 
 1439A4F90 "bool WarboardStatClientData::IsValid(WarboardStatClientData*);" 
 14421DA90 "const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait WarboardStatClientData::GetStatNames();" 
 1439A28E0 "const WarboardStatsEntry WarboardStatClientData::GetLocalPlayerStats(WarboardStatClientData*);" 
 1439A15A0 "const int WarboardStatClientData::GetActivePlayersCount(WarboardStatClientData*);" 
 143EB7C30 "AZStd::vector<WarboardStatsEntry, allocator> WarboardStatClientData::GetAttackerStatValues(const WarboardStatClientData*);" 
 
[291] C: "PrismOverlayData"
T: 5F0ACBD9-31EF-4BBC-A45B-CF50899D5D9B, S: 48
 Ctor: 143F10FA0, Dtor: 143F13310, Alloc: 14418B7F0, Dealloc: 144218D00, RTTI: 0
m_properties:
 1401AD7A0 "int& PrismOverlayData::id::Getter(PrismOverlayData*);" 
 1401DF3E0 "void PrismOverlayData::id::Setter(PrismOverlayData*, const int&);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PrismOverlayData::territoryName::Getter(PrismOverlayData*);" 
 1439CD010 "void PrismOverlayData::territoryName::Setter(PrismOverlayData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140916660 "Vector2& PrismOverlayData::position::Getter(PrismOverlayData*);" 
 1440B4C00 "void PrismOverlayData::position::Setter(PrismOverlayData*, const Vector2&);" 
 140F82F50 "int& PrismOverlayData::height::Getter(PrismOverlayData*);" 
 1440B4F00 "void PrismOverlayData::height::Setter(PrismOverlayData*, const int&);" 
 1403F2E90 "int& PrismOverlayData::width::Getter(PrismOverlayData*);" 
 141AAD890 "void PrismOverlayData::width::Setter(PrismOverlayData*, const int&);" 
 
[292] C: "PlayerWarSignupData"
T: A3ABDAC2-C5FA-4FB5-ABC3-770A37F38DF0, S: 30
 Ctor: 143F10F50, Dtor: 140190D00, Alloc: 14418A6C0, Dealloc: 142F94D60, RTTI: 1461A0978
m_methods:
 143EB7EB0 "PlayerWarSignupData PlayerWarSignupData::Clone(const PlayerWarSignupData*);" 
m_properties:
 1408199F0 "int PlayerWarSignupData::side::Getter(const PlayerWarSignupData*);" 
 14081A4E0 "void PlayerWarSignupData::side::Setter(PlayerWarSignupData*, int);" 
 143462330 "int PlayerWarSignupData::permission::Getter(const PlayerWarSignupData*);" 
 143EB7F60 "void PlayerWarSignupData::permission::Setter(PlayerWarSignupData*, int);" 
 1403F11A0 "AZ::Uuid& PlayerWarSignupData::warId::Getter(PlayerWarSignupData*);" 
 141AAD810 "void PlayerWarSignupData::warId::Setter(PlayerWarSignupData*, const AZ::Uuid&);" 
 1417B81D0 "bool& PlayerWarSignupData::selected::Getter(PlayerWarSignupData*);" 
 1440B4EA0 "void PlayerWarSignupData::selected::Setter(PlayerWarSignupData*, const bool&);" 
 
[293] C: "Uuid"
T: E152C105-A133-4D03-BBF8-3D4B2FBA3E2A, S: 10
 Ctor: 1401DF090, Dtor: 140190D00, Alloc: 1403665A0, Dealloc: 1403D80F0, RTTI: 0
m_methods:
 1403D52C0 "AZ::Uuid Uuid::CreateRandom();" 
 1402FE980 "AZ::Uuid Uuid::CreateNull();" 
 14040ADE0 "bool Uuid::IsNull(AZ::Uuid*);" 
 14019CFE0 "AZ::Uuid Uuid::Clone(const AZ::Uuid&);" 
 14031C960 "bool Uuid::LessThan(AZ::Uuid*, const AZ::Uuid&);" 
 14031C070 "bool Uuid::Equal(AZ::Uuid*, const AZ::Uuid&);" 
 1403C5980 "AZ::Uuid Uuid::Create();" 
 140486690 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Uuid::ToString(const AZ::Uuid&);" 
 1403D6A10 "AZ::Uuid Uuid::CreateString(const char*, AZ::u64);" 
 1403D4F70 "AZ::Uuid Uuid::CreateName(const char*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void AZ::Uuid* ScriptDataContext& >" 9B7E4965-3AFC-5618-BD99-B4E74CAC7296), VT: 145421610, V: 0x7FF7528533D0
 ("AZ::AttributeFunction<R(Args...)><void AZ::Uuid* >" 57D09E8A-CB89-52FA-AAA8-A039F5D84EE0), VT: 145421658, V: 0x7FF7525DF090
 
[294] C: "SliceInstantiationTicket"
T: E6E7C0C5-07C9-44BB-A38C-930431948667, S: 20
 Ctor: 140573BE0, Dtor: 140190D00, Alloc: 14060A1E0, Dealloc: 1406307C0, RTTI: 0
m_methods:
 1405F5B40 "bool SliceInstantiationTicket::Equal(SliceInstantiationTicket*, const SliceInstantiationTicket&);" 
 1404D3F70 "bool SliceInstantiationTicket::IsValid(SliceInstantiationTicket*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[295] C: "AZStd::unordered_map<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_trai"
T: F8A7460C-2CC2-5755-AFDA-49B1109A751E, S: 90
 Ctor: 1442819D0, Dtor: 1408EFD90, Alloc: 144376140, Dealloc: 144219100, RTTI: 0
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[296] C: "AZStd::vector<TransactionEntitlement, allocator>"
T: 0C5A5642-2F7E-53FC-8D3E-BB09B175BE75, S: 20
 Ctor: 1401DF120, Dtor: 144282D30, Alloc: 144376770, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1443D02F0 "void AZStd::vector<TransactionEntitlement, allocator>::pop_back(AZStd::vector<TransactionEntitlement, allocator>*);" 
 1443CE2E0 "void AZStd::vector<TransactionEntitlement, allocator>::clear(AZStd::vector<TransactionEntitlement, allocator>*);" 
 1429E8E60 "int AZStd::vector<TransactionEntitlement, allocator>::size(AZStd::vector<TransactionEntitlement, allocator>*);" 
 142A30EB0 "TransactionEntitlement& AZStd::vector<TransactionEntitlement, allocator>::at(AZStd::vector<TransactionEntitlement, allocator>*, AZ::u64);" 
 1443B55A0 "void AZStd::vector<TransactionEntitlement, allocator>::insert(AZStd::vector<TransactionEntitlement, allocator>*, int, TransactionEntitlement&);" 
 1428A9B20 "void AZStd::vector<TransactionEntitlement, allocator>::push_back(AZStd::vector<TransactionEntitlement, allocator>*, const TransactionEntitlement&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[297] C: "GuildRankDisplayInfo"
T: 5B145D1D-1C56-4403-BDFB-7851EA71CF94, S: 38
 Ctor: 143F10D50, Dtor: 143F13260, Alloc: 14418A360, Dealloc: 140630440, RTTI: 1461A2A88
m_methods:
 140409510 "bool GuildRankDisplayInfo::IsValid(GuildRankDisplayInfo*);" 
m_properties:
 1417B81F0 "int& GuildRankDisplayInfo::numOnline::Getter(GuildRankDisplayInfo*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GuildRankDisplayInfo::name::Getter(GuildRankDisplayInfo*);" 
 1403F11B0 "int& GuildRankDisplayInfo::numMembers::Getter(GuildRankDisplayInfo*);" 
 
[298] C: "ValidGroupData"
T: 4F986681-3060-4A47-9A45-694A027E5F46, S: 88
 Ctor: 144281CA0, Dtor: 144282EB0, Alloc: 144375850, Dealloc: 1443B3980, RTTI: 14619D600
m_properties:
 140780AF0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char ValidGroupData::objectives::Getter(ValidGroupData*);" 
 1406414D0 "AZStd::vector<Color, allocator>& ValidGroupData::colors::Getter(ValidGroupData*);" 
 1401E7820 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char ValidGroupData::names::Getter(ValidGroupData*);" 
 140AF0A30 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char ValidGroupData::iconPaths::Getter(ValidGroupData*);" 
 
[299] C: "PhysicalEntityTypes"
T: 0D6FF6AB-3C2B-4D44-A6CA-B3C41478EF94, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141BAB1F0, Dealloc: 141C5E360, RTTI: 0
m_properties:
 141947010 "int PhysicalEntityTypes::All::Getter();" 
 14019CEA0 "int PhysicalEntityTypes::Dynamic::Getter();" 
 1409DE6C0 "int PhysicalEntityTypes::Terrain::Getter();" 
 14019D060 "int PhysicalEntityTypes::Living::Getter();" 
 140190B20 "int PhysicalEntityTypes::Static::Getter();" 
 14019D2F0 "int PhysicalEntityTypes::Independent::Getter();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[300] C: "UiOnInteractFocus"
T: 0E7B4CDF-A0EE-40A4-BAA5-E8F456C653B9, S: 190
 Ctor: 143F11540, Dtor: 143F134C0, Alloc: 14418BD90, Dealloc: 144219400, RTTI: 0
m_methods:
 1403F1560 "const UiVitalsStatBind& UiOnInteractFocus::GetHealthBind(const UiOnInteractFocus*);" 
 1403F11B0 "const UiOwnershipBind& UiOnInteractFocus::GetOwnershipBind(const UiOnInteractFocus*);" 
m_properties:
 143FBB900 "bool& UiOnInteractFocus::supportsCustomName::Getter(UiOnInteractFocus*);" 
 1440B4E00 "void UiOnInteractFocus::supportsCustomName::Setter(UiOnInteractFocus*, const bool&);" 
 143B72ED0 "AZStd::vector<UnifiedInteractOption, allocator>& UiOnInteractFocus::unifiedInteractOptions::Getter(UiOnInteractFocus*);" 
 1440B4E10 "void UiOnInteractFocus::unifiedInteractOptions::Setter(UiOnInteractFocus*, const AZStd::vector<UnifiedInteractOption, allocator>&);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiOnInteractFocus::interactName::Getter(UiOnInteractFocus*);" 
 1403188A0 "void UiOnInteractFocus::interactName::Setter(UiOnInteractFocus*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140968720 "EntityId& UiOnInteractFocus::interactorEntityId::Getter(UiOnInteractFocus*);" 
 1440B4D00 "void UiOnInteractFocus::interactorEntityId::Setter(UiOnInteractFocus*, const EntityId&);" 
 143FBB8F0 "bool& UiOnInteractFocus::isHomePoint::Getter(UiOnInteractFocus*);" 
 1440B4DF0 "void UiOnInteractFocus::isHomePoint::Setter(UiOnInteractFocus*, const bool&);" 
 1403F1560 "UiVitalsStatBind& UiOnInteractFocus::healthBind::Getter(UiOnInteractFocus*);" 
 1440B4CF0 "void UiOnInteractFocus::healthBind::Setter(UiOnInteractFocus*, const UiVitalsStatBind&);" 
 1403F11B0 "UiOwnershipBind& UiOnInteractFocus::ownershipBind::Getter(UiOnInteractFocus*);" 
 1440B4EC0 "void UiOnInteractFocus::ownershipBind::Setter(UiOnInteractFocus*, const UiOwnershipBind&);" 
 140E5C920 "EntityId& UiOnInteractFocus::markerEntityId::Getter(UiOnInteractFocus*);" 
 141848310 "void UiOnInteractFocus::markerEntityId::Setter(UiOnInteractFocus*, const EntityId&);" 
 14167D080 "EntityId& UiOnInteractFocus::interactableEntityId::Getter(UiOnInteractFocus*);" 
 1440B4D10 "void UiOnInteractFocus::interactableEntityId::Setter(UiOnInteractFocus*, const EntityId&);" 
 140C498D0 "bool& UiOnInteractFocus::showTerritoryInfo::Getter(UiOnInteractFocus*);" 
 1440B4DE0 "void UiOnInteractFocus::showTerritoryInfo::Setter(UiOnInteractFocus*, const bool&);" 
 141EEEFA0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiOnInteractFocus::markerId::Getter(UiOnInteractFocus*);" 
 1440B4D30 "void UiOnInteractFocus::markerId::Setter(UiOnInteractFocus*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[301] C: "PeriodicRewardsData"
T: 4E669F2B-FCFD-4C74-9959-AB57CBB93B83, S: 40
 Ctor: 1446F22E0, Dtor: 140573E50, Alloc: 144917DA0, Dealloc: 144663E40, RTTI: 0
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PeriodicRewardsData::goal::Getter(PeriodicRewardsData*);" 
 140916660 "int& PeriodicRewardsData::slotIndex::Getter(PeriodicRewardsData*);" 
 1403F11B0 "short& PeriodicRewardsData::minLevel::Getter(PeriodicRewardsData*);" 
 14478DFC0 "short& PeriodicRewardsData::maxLevel::Getter(PeriodicRewardsData*);" 
 140852A20 "int PeriodicRewardsData::frequency::Getter(const PeriodicRewardsData*);" 
 1401AD7A0 "int& PeriodicRewardsData::id::Getter(PeriodicRewardsData*);" 
 
[302] C: "OnInteractFail"
T: 1C034818-92CA-45FB-92CD-A8D2196679BD, S: 8
 Ctor: 1401DF150, Dtor: 140190D00, Alloc: 14418BD00, Dealloc: 144219300, RTTI: 0
m_properties:
 1401AD7A0 "EntityId& OnInteractFail::entityId::Getter(UiOnInteractFail*);" 
 1401DF2C0 "void OnInteractFail::entityId::Setter(UiOnInteractFail*, const EntityId&);" 
 
[303] C: "SearchContractsRequest"
T: 8E417C5D-D036-4956-AEC0-22783D81DE13, S: 1A0
 Ctor: 144423380, Dtor: 1401DF450, Alloc: 1445EF310, Dealloc: 1446638C0, RTTI: 14618C0F0
m_methods:
 1428A4BC0 "void SearchContractsRequest::SetPerks(SearchContractsRequestPayload*, const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait);" 
m_properties:
 140402330 "int SearchContractsRequest::sortOrder::Getter(const SearchContractsRequestPayload*);" 
 14108B590 "void SearchContractsRequest::sortOrder::Setter(SearchContractsRequestPayload*, int);" 
 1442D0250 "bool& SearchContractsRequest::includeExpired::Getter(SearchContractsRequestPayload*);" 
 144320F50 "void SearchContractsRequest::includeExpired::Setter(SearchContractsRequestPayload*, const bool&);" 
 140F82F50 "bool& SearchContractsRequest::sortDescending::Getter(SearchContractsRequestPayload*);" 
 144320F40 "void SearchContractsRequest::sortDescending::Setter(SearchContractsRequestPayload*, const bool&);" 
 1401E7830 "int& SearchContractsRequest::minGearScore::Getter(SearchContractsRequestPayload*);" 
 14453DB50 "void SearchContractsRequest::minGearScore::Setter(SearchContractsRequestPayload*, const int&);" 
 140ED5EF0 "int& SearchContractsRequest::minPrice::Getter(SearchContractsRequestPayload*);" 
 14453DB20 "void SearchContractsRequest::minPrice::Setter(SearchContractsRequestPayload*, const int&);" 
 1403F2E90 "int& SearchContractsRequest::countPerPage::Getter(SearchContractsRequestPayload*);" 
 141AAD890 "void SearchContractsRequest::countPerPage::Setter(SearchContractsRequestPayload*, const int&);" 
 140400B50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SearchContractsRequest::itemName::Getter(SearchContractsRequestPayload*);" 
 14171C3C0 "void SearchContractsRequest::itemName::Setter(SearchContractsRequestPayload*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406468B0 "int SearchContractsRequest::contractType::Getter(const SearchContractsRequestPayload*);" 
 140873E40 "void SearchContractsRequest::contractType::Setter(SearchContractsRequestPayload*, int);" 
 1406499D0 "AZStd::vector<AZStd::pair<int, int>, allocator>& SearchContractsRequest::maxGearScoresByRarity::Getter(SearchContractsRequestPayload*);" 
 14453DB10 "void SearchContractsRequest::maxGearScoresByRarity::Setter(SearchContractsRequestPayload*, const AZStd::vector<AZStd::pair<int, int>, allocator>&);" 
 140AF0A30 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SearchContractsRequest::itemCategory::Getter(SearchContractsRequestPayload*);" 
 14453DD40 "void SearchContractsRequest::itemCategory::Setter(SearchContractsRequestPayload*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140641920 "int& SearchContractsRequest::itemTier::Getter(SearchContractsRequestPayload*);" 
 14453DF10 "void SearchContractsRequest::itemTier::Setter(SearchContractsRequestPayload*, const int&);" 
 1444A9F40 "int& SearchContractsRequest::maxPrice::Getter(SearchContractsRequestPayload*);" 
 14453DB30 "void SearchContractsRequest::maxPrice::Setter(SearchContractsRequestPayload*, const int&);" 
 140AFC3C0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char SearchContractsRequest::outposts::Getter(SearchContractsRequestPayload*);" 
 14453DF30 "void SearchContractsRequest::outposts::Setter(SearchContractsRequestPayload*, const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait);" 
 1403F1560 "float& SearchContractsRequest::maxDistance::Getter(SearchContractsRequestPayload*);" 
 14453DB00 "void SearchContractsRequest::maxDistance::Setter(SearchContractsRequestPayload*, const float&);" 
 1405842F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SearchContractsRequest::itemFamily::Getter(SearchContractsRequestPayload*);" 
 14453DDB0 "void SearchContractsRequest::itemFamily::Setter(SearchContractsRequestPayload*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1407E7270 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SearchContractsRequest::itemGroup::Getter(SearchContractsRequestPayload*);" 
 14171C3E0 "void SearchContractsRequest::itemGroup::Setter(SearchContractsRequestPayload*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[304] C: "OnInteractExecute"
T: 6ED728AB-B995-4872-B00D-42ED61C2DA13, S: 60
 Ctor: 143F11500, Dtor: 143F13460, Alloc: 14418BC70, Dealloc: 141835120, RTTI: 0
m_properties:
 1401AD7A0 "EntityId& OnInteractExecute::entityId::Getter(UiOnInteractExecute*);" 
 1401DF2C0 "void OnInteractExecute::entityId::Setter(UiOnInteractExecute*, const EntityId&);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& OnInteractExecute::interactOptionEntry::Getter(UiOnInteractExecute*);" 
 141AAD7E0 "void OnInteractExecute::interactOptionEntry::Setter(UiOnInteractExecute*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& OnInteractExecute::markerId::Getter(UiOnInteractExecute*);" 
 142F33410 "void OnInteractExecute::markerId::Setter(UiOnInteractExecute*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[305] C: "DamageByTypeData"
T: 843378E2-37E3-490C-A1BF-BF89B0303C48, S: 18
 Ctor: 143F10B10, Dtor: 140190D00, Alloc: 14418B5B0, Dealloc: 144218B00, RTTI: 1461A60F0
m_methods:
 14292B6B0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc DamageByTypeData::GetDamageTypeString(DamageByTypeData*);" 
 143EB8080 "DamageByTypeData DamageByTypeData::Clone(const DamageByTypeData*);" 
m_properties:
 1403F11A0 "float& DamageByTypeData::damageMitigation::Getter(DamageByTypeData*);" 
 1401E7820 "unsigned char& DamageByTypeData::damageTypeId::Getter(DamageByTypeData*);" 
 140782520 "float& DamageByTypeData::damageAmount::Getter(DamageByTypeData*);" 
 
[306] C: "SiegeWeaponState"
T: 6175C203-9BED-4057-BA51-88CAD55D348D, S: 30
 Ctor: 144423570, Dtor: 140190D00, Alloc: 1445F0F70, Dealloc: 144664540, RTTI: 1461B1078
m_methods:
 143462340 "float SiegeWeaponState::GetHealthPct(SiegeWeaponState*);" 
m_properties:
 1403F11A0 "Vector3& SiegeWeaponState::worldPos::Getter(SiegeWeaponState*);" 
 140454D90 "void SiegeWeaponState::worldPos::Setter(SiegeWeaponState*, const Vector3&);" 
 1408199F0 "int SiegeWeaponState::weaponType::Getter(const SiegeWeaponState*);" 
 14081A4E0 "void SiegeWeaponState::weaponType::Setter(SiegeWeaponState*, int);" 
 
[307] C: "DataSheetAssetReference"
T: 25BF4DEE-2B7B-5A8D-8EBC-F83F012DE859, S: 70
 Ctor: 1406D1C10, Dtor: 1406D1CB0, Alloc: 1406E55F0, Dealloc: 1406E7DF0, RTTI: 0
m_methods:
 1406CE8B0 "int DataSheetAssetReference::GetTableCount(const Asset<DataSheetAsset >*);" 
 1406CEAF0 "float DataSheetAssetReference::GetCellValueBool(const Asset<DataSheetAsset >*, const CellAddress&);" 
 1406CEA30 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> DataSheetAssetReference::ToString(const Asset<DataSheetAsset >*);" 
 1406CE7D0 "bool DataSheetAssetReference::IsValid(const Asset<DataSheetAsset >*);" 
 1406CEC90 "CellAddress DataSheetAssetReference::GetCellAddress(const Asset<DataSheetAsset >*, Crc32, Crc32, Crc32);" 
 1406CEC50 "const char* DataSheetAssetReference::GetCellValueString(const Asset<DataSheetAsset >*, const CellAddress&);" 
 1406CEB30 "float DataSheetAssetReference::GetCellValueFloat(const Asset<DataSheetAsset >*, const CellAddress&);" 
 1406CEAB0 "int DataSheetAssetReference::GetCellValueInteger(const Asset<DataSheetAsset >*, const CellAddress&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[308] C: "WarDetails"
T: 31694A66-A3B2-49F0-A7B4-18D1B906CFBD, S: 280
 Ctor: 143F11A10, Dtor: 143F13940, Alloc: 14418AEA0, Dealloc: 141C5E860, RTTI: 1461A39A0
m_methods:
 1435C20B0 "unsigned short WarDetails::GetTerritoryId(WarDetails*);" 
 1435C10B0 "WallClockTimePoint WarDetails::GetConquestStartTime(WarDetails*);" 
 1435C20C0 "const unsigned char WarDetails::GetWarCampTier(WarDetails*);" 
 1435C1840 "AZStd::vector<WarPhaseData, allocator> WarDetails::GetRemainingWarSchedule(WarDetails*);" 
 1435C2EF0 "bool WarDetails::IsGuildInWar(WarDetails*, const GuildId&);" 
 141684AF0 "unsigned char WarDetails::GetDefenderFaction(WarDetails*);" 
 1435C2F40 "bool WarDetails::IsInConquestPhase(WarDetails*);" 
 1435C34D0 "bool WarDetails::IsWarActive(WarDetails*);" 
 140ED5EF0 "const RaidId& WarDetails::GetDefenderRaidId(WarDetails*);" 
 1435C1610 "int WarDetails::GetNextPhase(WarDetails*);" 
 140190B40 "bool WarDetails::CanConquestTimeBeRequested(WarDetails*);" 
 1435C3490 "bool WarDetails::IsValid(WarDetails*);" 
 14096B150 "const RaidId& WarDetails::GetAttackerRaidId(WarDetails*);" 
 1435C30D0 "bool WarDetails::IsPvp(WarDetails*);" 
 1435C3090 "bool WarDetails::IsPhaseEnabled(WarDetails*, int);" 
 1435C20D0 "WallClockTimePoint WarDetails::GetWarEndTime(WarDetails*);" 
 1435C1820 "const WallClockTimePoint& WarDetails::GetPhaseEndTime(WarDetails*);" 
 1403F11B0 "const GuildId& WarDetails::GetDefenderGuildId(WarDetails*);" 
 1435C2ED0 "bool WarDetails::IsAttackingGuild(WarDetails*, const GuildId&);" 
 1435C3080 "bool WarDetails::IsInvasion(WarDetails*);" 
 1435C2220 "int WarDetails::GetWarPhase(WarDetails*);" 
 140D4BF00 "const AZ::Uuid& WarDetails::GetWarId(WarDetails*);" 
 1435C17E0 "const GuildId& WarDetails::GetOtherGuild(WarDetails*, const GuildId&);" 
 143EB8490 "WarDetails WarDetails::Clone(const WarDetails*);" 
 1403F11A0 "const GuildId& WarDetails::GetAttackerGuildId(WarDetails*);" 
 1435C3500 "bool WarDetails::IsWarCombatEnabled(WarDetails*);" 
 1435C30E0 "bool WarDetails::IsRaidInWar(WarDetails*, const RaidId&);" 
 1435C2EE0 "bool WarDetails::IsAttackingRaid(WarDetails*, const RaidId&);" 
 140F9BC30 "unsigned char WarDetails::GetAttackerFaction(WarDetails*);" 
 140F7C950 "const Duration& WarDetails::GetConquestTime(WarDetails*);" 
 
[309] C: "DetailedGuildView"
T: A334F948-E51B-4212-9513-CB947ABB84FF, S: 110
 Ctor: 143F10B30, Dtor: 143F13200, Alloc: 14418A090, Dealloc: 144218380, RTTI: 1461A2AD8
m_methods:
 143EB81D0 "DetailedGuildView DetailedGuildView::Clone(const DetailedGuildView*);" 
m_properties:
 140AEC940 "unsigned int& DetailedGuildView::index::Getter(DetailedGuildView*);" 
 1403F11A0 "OtherGuildData& DetailedGuildView::guildData::Getter(DetailedGuildView*);" 
 
[310] C: "AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, allocator>"
T: 7131361B-C26B-524E-BE57-D820D80EDAF1, S: 20
 Ctor: 1401DF120, Dtor: 1446F4390, Alloc: 144918E70, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DACE0 "void AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, allocator>::pop_back(AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>);" 
 1449D7530 "void AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, allocator>::clear(AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>);" 
 14019CC40 "int AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, allocator>::size(AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>);" 
 14048F800 "AZStd::pair<int, AZStd::vector<Crc32, allocator>>& AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, allocator>::at(AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, AZ::u64);" 
 1449A4EF0 "void AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, allocator>::insert(AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, int, AZStd::pair<int, AZStd::vector<Crc32, allocator>>&);" 
 1449DB040 "void AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, allocator>::push_back(AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, allocator>>, const AZStd::pair<int, AZStd::vector<Crc32, allocator>>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[311] C: "GuildIconData"
T: 3F00228F-F80F-4C00-8B8C-B7AACCD8B580, S: 50
 Ctor: 143F10B70, Dtor: 140190D00, Alloc: 14418A120, Dealloc: 144218400, RTTI: 14618E6A0
m_methods:
 143565440 "bool GuildIconData::Equal(GuildIconData*, const GuildIconData&);" 
 143EB7B50 "bool GuildIconData::IsValid(const GuildIconData*);" 
 14356BE50 "bool GuildIconData::IsValidForFaction(GuildIconData*, unsigned char);" 
m_properties:
 1403F2E80 "Color& GuildIconData::foregroundColor::Getter(GuildIconData*);" 
 14171BD90 "void GuildIconData::foregroundColor::Setter(GuildIconData*, const Color&);" 
 143EB83E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GuildIconData::backgroundImagePath::Getter(const GuildIconData*);" 
 143EB8390 "void GuildIconData::backgroundImagePath::Setter(GuildIconData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143EB8650 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GuildIconData::foregroundImagePath::Getter(const GuildIconData*);" 
 143EB87F0 "void GuildIconData::foregroundImagePath::Setter(GuildIconData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403EE8B0 "Color& GuildIconData::backgroundColor::Getter(GuildIconData*);" 
 141AAD850 "void GuildIconData::backgroundColor::Setter(GuildIconData*, const Color&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[312] C: "AZStd::vector<const GatherableData*, allocator>"
T: BE45573D-C8B1-50C9-B510-3D38DCA81834, S: 20
 Ctor: 1401DF120, Dtor: 140573E10, Alloc: 1445F0350, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<const GatherableData*, allocator>::pop_back(AZStd::vector<const GatherableData*, allocator>*);" 
 14069EE90 "void AZStd::vector<const GatherableData*, allocator>::clear(AZStd::vector<const GatherableData*, allocator>*);" 
 14045A440 "int AZStd::vector<const GatherableData*, allocator>::size(AZStd::vector<const GatherableData*, allocator>*);" 
 14031C0C0 "const GatherableData*& AZStd::vector<const GatherableData*, allocator>::at(AZStd::vector<const GatherableData*, allocator>*, AZ::u64);" 
 142684330 "void AZStd::vector<const GatherableData*, allocator>::insert(AZStd::vector<const GatherableData*, allocator>*, int, const GatherableData*&);" 
 1426964B0 "void AZStd::vector<const GatherableData*, allocator>::push_back(AZStd::vector<const GatherableData*, allocator>*, const const GatherableData*&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[313] C: "PlayerIconData"
T: 09A08BF0-AB78-4CEF-A940-D8B919EBA830, S: 90
 Ctor: 143F10F30, Dtor: 143523700, Alloc: 14418A630, Dealloc: 1434F6720, RTTI: 146189310
m_methods:
 143EB7AD0 "PlayerIconData PlayerIconData::Clone(const PlayerIconData*);" 
 14356BEF0 "bool PlayerIconData::IsValid(PlayerIconData*);" 
m_properties:
 1403D4FC0 "Color PlayerIconData::foregroundColor::Getter(const PlayerIconData*);" 
 140190D00 "void PlayerIconData::foregroundColor::Setter(PlayerIconData*, Color&);" 
 143EB8280 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> PlayerIconData::midgroundImagePath::Getter(const PlayerIconData*);" 
 143EB7EE0 "void PlayerIconData::midgroundImagePath::Setter(PlayerIconData*, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&);" 
 143EB8450 "Color PlayerIconData::backgroundColor::Getter(const PlayerIconData*);" 
 143EB7C90 "void PlayerIconData::backgroundColor::Setter(PlayerIconData*, Color&);" 
 143EB8220 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> PlayerIconData::backgroundImagePath::Getter(const PlayerIconData*);" 
 143EB7BB0 "void PlayerIconData::backgroundImagePath::Setter(PlayerIconData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403D4FC0 "Color PlayerIconData::midgroundColor::Getter(const PlayerIconData*);" 
 140190D00 "void PlayerIconData::midgroundColor::Setter(PlayerIconData*, Color&);" 
 143EB8190 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> PlayerIconData::foregroundImagePath::Getter(const PlayerIconData*);" 
 143EB8370 "void PlayerIconData::foregroundImagePath::Setter(PlayerIconData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[314] C: "AsyncSocialWrapper<Javelin::FactionType >"
T: 6A395DF4-EC04-52CA-B194-3F2D445DC08D, S: 20
 Ctor: 143F10AA0, Dtor: 140190D00, Alloc: 14418B3C0, Dealloc: 1406307C0, RTTI: 0
m_properties:
 142F4BA10 "bool AsyncSocialWrapper<Javelin::FactionType >::dataReady::Getter(AsyncSocialWrapper<Javelin::FactionType >*);" 
 1412644E0 "unsigned char AsyncSocialWrapper<Javelin::FactionType >::dataCopy::Getter(AsyncSocialWrapper<Javelin::FactionType >*);" 
 143EB7DA0 "AZ::Uuid AsyncSocialWrapper<Javelin::FactionType >::dataRequestId::Getter(AsyncSocialWrapper<Javelin::FactionType >*);" 
 14019CDD0 "const Javelin::FactionType* AsyncSocialWrapper<Javelin::FactionType >::data::Getter(AsyncSocialWrapper<Javelin::FactionType >*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[315] C: "UiVitalsStatChanged"
T: D6E702F0-58F7-4683-A8E3-0BA7B690C6DF, S: 10
 Ctor: 1401DF090, Dtor: 140190D00, Alloc: 14418C060, Dealloc: 141665DF0, RTTI: 0
m_properties:
 1401E7820 "UiVitalsStat& UiVitalsStatChanged::newVitalsStat::Getter(UiVitalsStatChanged*);" 
 1440B4C70 "void UiVitalsStatChanged::newVitalsStat::Setter(UiVitalsStatChanged*, const UiVitalsStat&);" 
 1401AD7A0 "float& UiVitalsStatChanged::lastValue::Getter(UiVitalsStatChanged*);" 
 1401DF3E0 "void UiVitalsStatChanged::lastValue::Setter(UiVitalsStatChanged*, const float&);" 
 140916660 "float& UiVitalsStatChanged::lastMaxValue::Getter(UiVitalsStatChanged*);" 
 1414D2A50 "void UiVitalsStatChanged::lastMaxValue::Setter(UiVitalsStatChanged*, const float&);" 
 
[316] C: "LocalPlayerComponentData"
T: 26F35270-5EA9-4F17-8A54-6BE4698F3008, S: 78
 Ctor: 143F10DC0, Dtor: 140190D00, Alloc: 14418B6D0, Dealloc: 1420080A0, RTTI: 0
m_properties:
 1403EE8B0 "EntityId& LocalPlayerComponentData::vitalsEntityId::Getter(LocalPlayerComponentData*);" 
 1440B4E60 "void LocalPlayerComponentData::vitalsEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 140780AF0 "EntityId& LocalPlayerComponentData::staminaEntityId::Getter(LocalPlayerComponentData*);" 
 141270360 "void LocalPlayerComponentData::staminaEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 1403F2E90 "EntityId& LocalPlayerComponentData::interactorEntityId::Getter(LocalPlayerComponentData*);" 
 142E6D530 "void LocalPlayerComponentData::interactorEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 140AF0A30 "EntityId& LocalPlayerComponentData::currencyConversionEntityId::Getter(LocalPlayerComponentData*);" 
 141AAD8C0 "void LocalPlayerComponentData::currencyConversionEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 1403F11C0 "EntityId& LocalPlayerComponentData::gatheringEntityId::Getter(LocalPlayerComponentData*);" 
 1440B4F40 "void LocalPlayerComponentData::gatheringEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 1406413D0 "EntityId& LocalPlayerComponentData::paperdollEntityId::Getter(LocalPlayerComponentData*);" 
 1440B4E20 "void LocalPlayerComponentData::paperdollEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 140D88940 "EntityId& LocalPlayerComponentData::playerEntityId::Getter(LocalPlayerComponentData*);" 
 1440B4F50 "void LocalPlayerComponentData::playerEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 1401AD7A0 "EntityId& LocalPlayerComponentData::craftingEntityId::Getter(LocalPlayerComponentData*);" 
 1401DF2C0 "void LocalPlayerComponentData::craftingEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 1403F11A0 "EntityId& LocalPlayerComponentData::inventoryEntityId::Getter(LocalPlayerComponentData*);" 
 140FCC860 "void LocalPlayerComponentData::inventoryEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 1401E7820 "EntityId& LocalPlayerComponentData::itemRepairEntityId::Getter(LocalPlayerComponentData*);" 
 1440B4C30 "void LocalPlayerComponentData::itemRepairEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 1403F2E80 "EntityId& LocalPlayerComponentData::socialEntityId::Getter(LocalPlayerComponentData*);" 
 1440B4F10 "void LocalPlayerComponentData::socialEntityId::Setter(LocalPlayerComponentData*, const EntityId&);" 
 
[317] C: "UiAmmoAttributes"
T: 09E06AA2-EDBE-4942-AF44-F903B2674ED2, S: 8
 Ctor: 1446F27E0, Dtor: 140190D00, Alloc: 144918580, Dealloc: 141C5EAE0, RTTI: 0
m_properties:
 140916660 "float& UiAmmoAttributes::staggerDamageModifier::Getter(UiAmmoAttributes*);" 
 1414D2A50 "void UiAmmoAttributes::staggerDamageModifier::Setter(UiAmmoAttributes*, const float&);" 
 1401AD7A0 "float& UiAmmoAttributes::damageModifier::Getter(UiAmmoAttributes*);" 
 1401DF3E0 "void UiAmmoAttributes::damageModifier::Setter(UiAmmoAttributes*, const float&);" 
 
[318] C: "SimplePlayerIdentification"
T: 6AF02F6B-B58C-4F66-BFF6-16868EAA5F78, S: 58
 Ctor: 143F11340, Dtor: 143F13430, Alloc: 14418A990, Dealloc: 144218800, RTTI: 146195598
m_constructors:
 143F0F440 "void SimplePlayerIdentification::Constructor(SimplePlayerIdentification*, const PlayerIdentification&);" 
 143F0F420 "void SimplePlayerIdentification::Constructor(SimplePlayerIdentification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_methods:
 143EB8300 "SimplePlayerIdentification SimplePlayerIdentification::Clone(const SimplePlayerIdentification*);" 
 1401E7820 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc SimplePlayerIdentification::GetCharacterIdString(SimplePlayerIdentification*);" 
 1401E7820 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc SimplePlayerIdentification::ToString(SimplePlayerIdentification*);" 
 14080DCA0 "bool SimplePlayerIdentification::IsValid(SimplePlayerIdentification*);" 
 1435654D0 "bool SimplePlayerIdentification::Equal(SimplePlayerIdentification*, const SimplePlayerIdentification&);" 
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePlayerIdentification::characterIdString::Getter(SimplePlayerIdentification*);" 
 141AAD7E0 "void SimplePlayerIdentification::characterIdString::Setter(SimplePlayerIdentification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SimplePlayerIdentification::playerName::Getter(SimplePlayerIdentification*);" 
 142F33410 "void SimplePlayerIdentification::playerName::Setter(SimplePlayerIdentification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[319] C: "RaidId"
T: 64A053B2-CE78-48DE-BEBF-054E13567D8D, S: 10
 Ctor: 143F11980, Dtor: 140190D00, Alloc: 14418CE30, Dealloc: 141C5EBE0, RTTI: 146195E90
m_methods:
 142CF3230 "void RaidId::Reset(RaidId*);" 
 142CF5EF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RaidId::ToString(RaidId*);" 
 14040AFA0 "bool RaidId::IsValid(RaidId*);" 
 14019CDD0 "AZ::u64 RaidId::ToU64(RaidId*);" 
 142CE19A0 "bool RaidId::Equal(RaidId*, const RaidId&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[320] C: "AZStd::vector<TopHouseData, allocator>"
T: 6B71AEF7-B8AF-5A7A-B953-5FFA231C845D, S: 20
 Ctor: 1401DF120, Dtor: 142DA5550, Alloc: 1443768D0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1443D0330 "void AZStd::vector<TopHouseData, allocator>::pop_back(AZStd::vector<TopHouseData, allocator>*);" 
 142FA62A0 "void AZStd::vector<TopHouseData, allocator>::clear(AZStd::vector<TopHouseData, allocator>*);" 
 142F4B9E0 "int AZStd::vector<TopHouseData, allocator>::size(AZStd::vector<TopHouseData, allocator>*);" 
 142FA6150 "TopHouseData& AZStd::vector<TopHouseData, allocator>::at(AZStd::vector<TopHouseData, allocator>*, AZ::u64);" 
 1443B5870 "void AZStd::vector<TopHouseData, allocator>::insert(AZStd::vector<TopHouseData, allocator>*, int, TopHouseData&);" 
 1443D0900 "void AZStd::vector<TopHouseData, allocator>::push_back(AZStd::vector<TopHouseData, allocator>*, const TopHouseData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[321] C: "GroupInviteData"
T: 527F2998-F92A-49AE-9995-D1E5686A76B1, S: D0
 Ctor: 143F10B60, Dtor: 142CE14A0, Alloc: 14418B640, Dealloc: 141C5ECE0, RTTI: 1461B0F18
m_methods:
 143EB7D00 "bool GroupInviteData::IsPvPGroup(const GroupInviteData*);" 
 142CE9BE0 "bool GroupInviteData::IsValid(GroupInviteData*);" 
m_properties:
 1403EE8B0 "GroupId& GroupInviteData::groupId::Getter(GroupInviteData*);" 
 1403F11A0 "AZ::Uuid& GroupInviteData::inviteId::Getter(GroupInviteData*);" 
 141A5CEF0 "Crc32& GroupInviteData::gameModeId::Getter(GroupInviteData*);" 
 143EB7E50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GroupInviteData::receiverCharacterIdString::Getter(const GroupInviteData*);" 
 140400B50 "Javelin::FactionType& GroupInviteData::faction::Getter(GroupInviteData*);" 
 143EB8710 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GroupInviteData::senderCharacterIdString::Getter(const GroupInviteData*);" 
 1403F3C00 "AZ::Uuid& GroupInviteData::warId::Getter(GroupInviteData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[322] C: "StaticCurrencyExchangeData"
T: D1FF6E20-FB12-4772-B37C-B1CCBDB6ACE3, S: 70
 Ctor: 1446F23C0, Dtor: 144424EA0, Alloc: 144918100, Dealloc: 142C9E1C0, RTTI: 0
m_methods:
 141699B00 "bool StaticCurrencyExchangeData::IsValid(StaticCurrencyExchangeData*);" 
m_properties:
 1411D8420 "unsigned int& StaticCurrencyExchangeData::toCurrencyQuantity::Getter(StaticCurrencyExchangeData*);" 
 1417B81F0 "unsigned int& StaticCurrencyExchangeData::fromCurrencyQuantity::Getter(StaticCurrencyExchangeData*);" 
 
[323] C: "MarketingTilesCMSData"
T: D4C69000-8B42-49EF-8DD2-7074A23A5840, S: 100
 Ctor: 1429F44E0, Dtor: 1401DF450, Alloc: 142A17A10, Dealloc: 142A1F010, RTTI: 14618EEE0
m_properties:
 14183CAA0 "AZStd::vector<MarketingTileData, allocator>& MarketingTilesCMSData::marketingTileData::Getter(MarketingTilesCMSData*);" 
 142A03590 "void MarketingTilesCMSData::marketingTileData::Setter(MarketingTilesCMSData*, const AZStd::vector<MarketingTileData, allocator>&);" 
 
[324] C: "CharacterMetadata"
T: 21C192A0-CDC1-475C-9731-C23837BD1548, S: 220
 Ctor: 143F11130, Dtor: 143F133E0, Alloc: 14418B880, Dealloc: 144218E00, RTTI: 0
m_properties:
 1432C8C80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterMetadata::publishedSource::Getter(ScriptCharacterMetadata*);" 
 1440B4E30 "void CharacterMetadata::publishedSource::Setter(ScriptCharacterMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 142E64200 "unsigned int& CharacterMetadata::publishedElapsedSeconds::Getter(ScriptCharacterMetadata*);" 
 1440B4E70 "void CharacterMetadata::publishedElapsedSeconds::Setter(ScriptCharacterMetadata*, const unsigned int&);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterMetadata::characterId::Getter(ScriptCharacterMetadata*);" 
 1403188A0 "void CharacterMetadata::characterId::Setter(ScriptCharacterMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7830 "GuildId& CharacterMetadata::guildId::Getter(ScriptCharacterMetadata*);" 
 1440B4D50 "void CharacterMetadata::guildId::Setter(ScriptCharacterMetadata*, const GuildId&);" 
 1403F1550 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterMetadata::prevWorldId::Getter(ScriptCharacterMetadata*);" 
 1417146E0 "void CharacterMetadata::prevWorldId::Setter(ScriptCharacterMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406414E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterMetadata::name::Getter(ScriptCharacterMetadata*);" 
 141714830 "void CharacterMetadata::name::Setter(ScriptCharacterMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406417C0 "AZ::u64& CharacterMetadata::currency::Getter(ScriptCharacterMetadata*);" 
 142A03560 "void CharacterMetadata::currency::Setter(ScriptCharacterMetadata*, const AZ::u64&);" 
 143FBB920 "bool& CharacterMetadata::ftueCompleted::Getter(ScriptCharacterMetadata*);" 
 1440B4E80 "void CharacterMetadata::ftueCompleted::Setter(ScriptCharacterMetadata*, const bool&);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterMetadata::personaId::Getter(ScriptCharacterMetadata*);" 
 142004F30 "void CharacterMetadata::personaId::Setter(ScriptCharacterMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CharacterMetadata::worldId::Getter(ScriptCharacterMetadata*);" 
 142004F50 "void CharacterMetadata::worldId::Setter(ScriptCharacterMetadata*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140C46640 "Vector3& CharacterMetadata::position::Getter(ScriptCharacterMetadata*);" 
 141884E50 "void CharacterMetadata::position::Setter(ScriptCharacterMetadata*, const Vector3&);" 
 140C498D0 "PlayerIconData& CharacterMetadata::portraitData::Getter(ScriptCharacterMetadata*);" 
 1440B4DB0 "void CharacterMetadata::portraitData::Setter(ScriptCharacterMetadata*, const PlayerIconData&);" 
 143FBB930 "bool& CharacterMetadata::mustRename::Getter(ScriptCharacterMetadata*);" 
 1440B4E90 "void CharacterMetadata::mustRename::Setter(ScriptCharacterMetadata*, const bool&);" 
 14183CAA0 "int& CharacterMetadata::currentLevel::Getter(ScriptCharacterMetadata*);" 
 1440B50E0 "void CharacterMetadata::currentLevel::Setter(ScriptCharacterMetadata*, const int&);" 
 140AFC3C0 "GuildIconData& CharacterMetadata::crestData::Getter(ScriptCharacterMetadata*);" 
 1440B5170 "void CharacterMetadata::crestData::Setter(ScriptCharacterMetadata*, const GuildIconData&);" 
 
[325] C: "GroupId"
T: A40B891F-7B5F-434A-9E79-F7456844E5F3, S: 10
 Ctor: 143F117C0, Dtor: 140190D00, Alloc: 14418CD10, Dealloc: 141C5EBE0, RTTI: 14618EEA8
m_methods:
 142CE19A0 "bool GroupId::Equal(GroupId*, const GroupId&);" 
 14040AFA0 "bool GroupId::IsValid(GroupId*);" 
 142CF5EF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GroupId::ToString(GroupId*);" 
 142CF3230 "void GroupId::Reset(GroupId*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("Script::Attributes::OperatorType" 04008CA8-B5D1-5BC1-9D89-FD6E7C7229B5), VT: 145420910, V: 0x9
 
[326] C: "AZStd::vector<CompletedTerritoryProgressionData, allocator>"
T: B07D75C2-7661-5346-B6B4-1BFB026AE88D, S: 20
 Ctor: 1401DF120, Dtor: 144424F60, Alloc: 1445F04B0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693650 "void AZStd::vector<CompletedTerritoryProgressionData, allocator>::pop_back(AZStd::vector<CompletedTerritoryProgressionData, allocator>*);" 
 14069EE90 "void AZStd::vector<CompletedTerritoryProgressionData, allocator>::clear(AZStd::vector<CompletedTerritoryProgressionData, allocator>*);" 
 141946F60 "int AZStd::vector<CompletedTerritoryProgressionData, allocator>::size(AZStd::vector<CompletedTerritoryProgressionData, allocator>*);" 
 141D47110 "CompletedTerritoryProgressionData& AZStd::vector<CompletedTerritoryProgressionData, allocator>::at(AZStd::vector<CompletedTerritoryProgressionData, allocator>*, AZ::u64);" 
 144666750 "void AZStd::vector<CompletedTerritoryProgressionData, allocator>::insert(AZStd::vector<CompletedTerritoryProgressionData, allocator>*, int, CompletedTerritoryProgressionData&);" 
 144693900 "void AZStd::vector<CompletedTerritoryProgressionData, allocator>::push_back(AZStd::vector<CompletedTerritoryProgressionData, allocator>*, const CompletedTerritoryProgressionData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[327] C: "AZStd::vector<GroupId, allocator>"
T: BEC6E671-88A1-57EF-A643-5049A1619159, S: 20
 Ctor: 1401DF120, Dtor: 143F13870, Alloc: 14418C9A0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513D0 "void AZStd::vector<GroupId, allocator>::pop_back(AZStd::vector<GroupId, allocator>*);" 
 14069EE90 "void AZStd::vector<GroupId, allocator>::clear(AZStd::vector<GroupId, allocator>*);" 
 14045A450 "int AZStd::vector<GroupId, allocator>::size(AZStd::vector<GroupId, allocator>*);" 
 14031C0D0 "GroupId& AZStd::vector<GroupId, allocator>::at(AZStd::vector<GroupId, allocator>*, AZ::u64);" 
 14421E610 "void AZStd::vector<GroupId, allocator>::insert(AZStd::vector<GroupId, allocator>*, int, GroupId&);" 
 144251BA0 "void AZStd::vector<GroupId, allocator>::push_back(AZStd::vector<GroupId, allocator>*, const GroupId&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[328] C: "SubArmyJoiningPlayer"
T: 4A30B261-6A06-4C0F-A482-865A470F3A2F, S: 60
 Ctor: 144422890, Dtor: 144424F20, Alloc: 1445EEC50, Dealloc: 1416658F0, RTTI: 1461A2AE0
m_properties:
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SubArmyJoiningPlayer::playerName::Getter(SubArmyJoiningPlayer*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SubArmyJoiningPlayer::twitchName::Getter(SubArmyJoiningPlayer*);" 
 140852A70 "int SubArmyJoiningPlayer::inviteStatus::Getter(SubArmyJoiningPlayer*);" 
 
[329] C: "TerritoryLandmarkData"
T: 6A3D88E0-E0B8-45BE-B4A3-6E1E690C626B, S: 60
 Ctor: 142F588D0, Dtor: 142F589D0, Alloc: 142F89700, Dealloc: 141C5E1E0, RTTI: 0
m_properties:
 1403F11C0 "float& TerritoryLandmarkData::radius::Getter(TerritoryLandmarkData*);" 
 142F4BA10 "int TerritoryLandmarkData::landmarkType::Getter(const TerritoryLandmarkData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryLandmarkData::landmarkData::Getter(TerritoryLandmarkData*);" 
 1403F11B0 "Vector3& TerritoryLandmarkData::worldPosition::Getter(TerritoryLandmarkData*);" 
 
[330] C: "POICapital"
T: 2DFD8BF0-68FF-451A-B198-228BEC6656B6, S: 130
 Ctor: 143F10E50, Dtor: 143F132F0, Alloc: 14418B760, Dealloc: 144218C00, RTTI: 0
m_properties:
 1423D88B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& POICapital::compassIconPath::Getter(POICapital*);" 
 1440B4CD0 "void POICapital::compassIconPath::Setter(POICapital*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& POICapital::sliceName::Getter(POICapital*);" 
 142004F50 "void POICapital::sliceName::Setter(POICapital*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140F838C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& POICapital::nameLocalizationKey::Getter(POICapital*);" 
 1440B5070 "void POICapital::nameLocalizationKey::Setter(POICapital*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141692540 "Vector2& POICapital::capitalPosition::Getter(POICapital*);" 
 1440B4FC0 "void POICapital::capitalPosition::Setter(POICapital*, const Vector2&);" 
 143FBB940 "Vector2& POICapital::territoryCenter::Getter(POICapital*);" 
 1440B4FD0 "void POICapital::territoryCenter::Setter(POICapital*, const Vector2&);" 
 1403F3C00 "float& POICapital::protectionRadius::Getter(POICapital*);" 
 1440B5030 "void POICapital::protectionRadius::Setter(POICapital*, const float&);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& POICapital::id::Getter(POICapital*);" 
 1403188A0 "void POICapital::id::Setter(POICapital*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406414E0 "Vector2& POICapital::worldPosition::Getter(POICapital*);" 
 1440B4FB0 "void POICapital::worldPosition::Setter(POICapital*, const Vector2&);" 
 143FBB960 "int& POICapital::settlementId::Getter(POICapital*);" 
 1440B5060 "void POICapital::settlementId::Setter(POICapital*, const int&);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& POICapital::monikerId::Getter(POICapital*);" 
 142004F30 "void POICapital::monikerId::Setter(POICapital*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143EB7DC0 "VectorFloat POICapital::rotation::Getter(POICapital*);" 
 140584310 "bool& POICapital::hasPrism::Getter(POICapital*);" 
 1405A4D40 "void POICapital::hasPrism::Setter(POICapital*, const bool&);" 
 140AF21A0 "Vector2& POICapital::prismSize::Getter(POICapital*);" 
 1440B5010 "void POICapital::prismSize::Setter(POICapital*, const Vector2&);" 
 14183CAA0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& POICapital::mapIconPath::Getter(POICapital*);" 
 1440B50F0 "void POICapital::mapIconPath::Setter(POICapital*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[331] C: "AZStd::vector<WarDetails, allocator>"
T: EC6921D3-66F0-5DD7-9CE7-71C0AC8A93BA, S: 20
 Ctor: 1401DF120, Dtor: 143F138B0, Alloc: 14418CBB0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251470 "void AZStd::vector<WarDetails, allocator>::pop_back(AZStd::vector<WarDetails, allocator>*);" 
 14069EE90 "void AZStd::vector<WarDetails, allocator>::clear(AZStd::vector<WarDetails, allocator>*);" 
 143EB86D0 "int AZStd::vector<WarDetails, allocator>::size(AZStd::vector<WarDetails, allocator>*);" 
 14424FE40 "WarDetails& AZStd::vector<WarDetails, allocator>::at(AZStd::vector<WarDetails, allocator>*, AZ::u64);" 
 14421E940 "void AZStd::vector<WarDetails, allocator>::insert(AZStd::vector<WarDetails, allocator>*, int, WarDetails&);" 
 1435BBC60 "void AZStd::vector<WarDetails, allocator>::push_back(AZStd::vector<WarDetails, allocator>*, const WarDetails&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[332] C: "TitleData"
T: F07B2A18-8D94-4B92-BB22-3AB82D00AA5F, S: 128
 Ctor: 143F11400, Dtor: 143F13450, Alloc: 14418BB50, Dealloc: 144219200, RTTI: 0
m_properties:
 1423B46B0 "AZStd::vector<Crc32, allocator>& TitleData::metaAchievementIds::Getter(TitleData*);" 
 1440B50D0 "void TitleData::metaAchievementIds::Setter(TitleData*, const AZStd::vector<Crc32, allocator>&);" 
 1401E7820 "Crc32& TitleData::category::Getter(TitleData*);" 
 14028DC50 "void TitleData::category::Setter(TitleData*, const Crc32&);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TitleData::title::Getter(TitleData*);" 
 1440B4F60 "void TitleData::title::Setter(TitleData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F3C00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TitleData::description::Getter(TitleData*);" 
 1440B5040 "void TitleData::description::Setter(TitleData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141EF4E80 "int TitleData::type::Getter(TitleData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TitleData::titleFemale::Getter(TitleData*);" 
 143EB82E0 "void TitleData::titleFemale::Setter(TitleData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TitleData::titleMale::Getter(TitleData*);" 
 1439CD010 "void TitleData::titleMale::Setter(TitleData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "Crc32& TitleData::id::Getter(TitleData*);" 
 1401DF3E0 "void TitleData::id::Setter(TitleData*, const Crc32&);" 
 
[333] C: "RaidRosterGroup"
T: 28B3D933-B1F4-4F01-BF7F-86EB1AFD2A12, S: 30
 Ctor: 143F11060, Dtor: 143F13370, Alloc: 14418A7E0, Dealloc: 141C5E6E0, RTTI: 1461A0970
m_methods:
 143431B60 "bool RaidRosterGroup::RemoveMember(RaidRosterGroup*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 143EB8120 "RaidRosterGroup RaidRosterGroup::Clone(const RaidRosterGroup*);" 
 14341E760 "bool RaidRosterGroup::AddMember(RaidRosterGroup*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int, bool);" 
 143420480 "void RaidRosterGroup::ClearMembers(RaidRosterGroup*);" 
m_properties:
 143FBB8A0 "unsigned char& RaidRosterGroup::iconIndex::Getter(RaidRosterGroup*);" 
 1440B4CA0 "void RaidRosterGroup::iconIndex::Setter(RaidRosterGroup*, const unsigned char&);" 
 143FBB950 "unsigned char& RaidRosterGroup::colorIndex::Getter(RaidRosterGroup*);" 
 1440B5020 "void RaidRosterGroup::colorIndex::Setter(RaidRosterGroup*, const unsigned char&);" 
 140782520 "unsigned char& RaidRosterGroup::objectiveIndex::Getter(RaidRosterGroup*);" 
 1440B50B0 "void RaidRosterGroup::objectiveIndex::Setter(RaidRosterGroup*, const unsigned char&);" 
 1401E7820 "AZ::s8& RaidRosterGroup::groupRaidIndex::Getter(RaidRosterGroup*);" 
 141AAD800 "void RaidRosterGroup::groupRaidIndex::Setter(RaidRosterGroup*, const AZ::s8&);" 
 1403F11A0 "AZStd::vector<RaidRosterPlayer, allocator>& RaidRosterGroup::members::Getter(RaidRosterGroup*);" 
 1440B4CC0 "void RaidRosterGroup::members::Setter(RaidRosterGroup*, const AZStd::vector<RaidRosterPlayer, allocator>&);" 
 143FBB890 "unsigned char& RaidRosterGroup::nameIndex::Getter(RaidRosterGroup*);" 
 1440B4C80 "void RaidRosterGroup::nameIndex::Setter(RaidRosterGroup*, const unsigned char&);" 
 
[334] C: "AZStd::vector<RaidRosterPlayer, allocator>"
T: 9A3F7070-2F0A-5C89-87C0-01189B398919, S: 20
 Ctor: 1401DF120, Dtor: 143F13730, Alloc: 14418C630, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144251370 "void AZStd::vector<RaidRosterPlayer, allocator>::pop_back(AZStd::vector<RaidRosterPlayer, allocator>*);" 
 14424FFA0 "void AZStd::vector<RaidRosterPlayer, allocator>::clear(AZStd::vector<RaidRosterPlayer, allocator>*);" 
 143EB7FF0 "int AZStd::vector<RaidRosterPlayer, allocator>::size(AZStd::vector<RaidRosterPlayer, allocator>*);" 
 14424FE20 "RaidRosterPlayer& AZStd::vector<RaidRosterPlayer, allocator>::at(AZStd::vector<RaidRosterPlayer, allocator>*, AZ::u64);" 
 14421E130 "void AZStd::vector<RaidRosterPlayer, allocator>::insert(AZStd::vector<RaidRosterPlayer, allocator>*, int, RaidRosterPlayer&);" 
 144251900 "void AZStd::vector<RaidRosterPlayer, allocator>::push_back(AZStd::vector<RaidRosterPlayer, allocator>*, const RaidRosterPlayer&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[335] C: "GuildMemberData"
T: A6AB2594-7182-D0B3-40E7-44D59CDBEF37, S: 48
 Ctor: 143F10B90, Dtor: 143F13260, Alloc: 14418A1B0, Dealloc: 144218480, RTTI: 1461A2A90
m_properties:
 1403F11B0 "bool& GuildMemberData::isOnline::Getter(GuildMemberData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GuildMemberData::characterIdString::Getter(GuildMemberData*);" 
 1403F2E90 "WallClockTimePoint& GuildMemberData::lastOnlineTime::Getter(GuildMemberData*);" 
 1417B81F0 "int& GuildMemberData::rank::Getter(GuildMemberData*);" 
 
[336] C: "GuildPrivilegeData"
T: 94DE6319-83AA-497B-9F10-6925B4F862ED, S: 38
 Ctor: 143F10C00, Dtor: 143F13290, Alloc: 14418A240, Dealloc: 140630440, RTTI: 1461A2A80
m_properties:
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& GuildPrivilegeData::name::Getter(GuildPrivilegeData*);" 
 140402330 "int GuildPrivilegeData::id::Getter(GuildPrivilegeData*);" 
 
[337] C: "AZStd::vector<ItemDescriptor, allocator>"
T: E8D3878E-D09A-545A-A9FF-5C630A382109, S: 20
 Ctor: 1401DF120, Dtor: 142845170, Alloc: 142879B90, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428A9760 "void AZStd::vector<ItemDescriptor, allocator>::pop_back(AZStd::vector<ItemDescriptor, allocator>*);" 
 1428A7AB0 "void AZStd::vector<ItemDescriptor, allocator>::clear(AZStd::vector<ItemDescriptor, allocator>*);" 
 1428384B0 "int AZStd::vector<ItemDescriptor, allocator>::size(AZStd::vector<ItemDescriptor, allocator>*);" 
 1428A7A20 "ItemDescriptor& AZStd::vector<ItemDescriptor, allocator>::at(AZStd::vector<ItemDescriptor, allocator>*, AZ::u64);" 
 1428957A0 "void AZStd::vector<ItemDescriptor, allocator>::insert(AZStd::vector<ItemDescriptor, allocator>*, int, ItemDescriptor&);" 
 1427DAE00 "void AZStd::vector<ItemDescriptor, allocator>::push_back(AZStd::vector<ItemDescriptor, allocator>*, const ItemDescriptor&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[338] C: "AZStd::vector<WorldDescriptionData, allocator>"
T: 091B3DA3-4C26-5C7F-A460-00A07F670709, S: 20
 Ctor: 1401DF120, Dtor: 1429F47A0, Alloc: 142A17DB0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142A326E0 "void AZStd::vector<WorldDescriptionData, allocator>::pop_back(AZStd::vector<WorldDescriptionData, allocator>*);" 
 142A30F50 "void AZStd::vector<WorldDescriptionData, allocator>::clear(AZStd::vector<WorldDescriptionData, allocator>*);" 
 1429E8E60 "int AZStd::vector<WorldDescriptionData, allocator>::size(AZStd::vector<WorldDescriptionData, allocator>*);" 
 142A30EB0 "WorldDescriptionData& AZStd::vector<WorldDescriptionData, allocator>::at(AZStd::vector<WorldDescriptionData, allocator>*, AZ::u64);" 
 142A21D90 "void AZStd::vector<WorldDescriptionData, allocator>::insert(AZStd::vector<WorldDescriptionData, allocator>*, int, WorldDescriptionData&);" 
 142A32B50 "void AZStd::vector<WorldDescriptionData, allocator>::push_back(AZStd::vector<WorldDescriptionData, allocator>*, const WorldDescriptionData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[339] C: "StaticProgressionPoolData"
T: 2A037058-A69D-4466-89AF-21F0DA975FF8, S: 70
 Ctor: 1444226B0, Dtor: 144424EA0, Alloc: 1445EFE70, Dealloc: 142C9E1C0, RTTI: 0
m_properties:
 140D88940 "unsigned short& StaticProgressionPoolData::pointCap::Getter(StaticProgressionPoolData*);" 
 1401AD7A0 "Crc32& StaticProgressionPoolData::id::Getter(StaticProgressionPoolData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticProgressionPoolData::description::Getter(StaticProgressionPoolData*);" 
 1403F11B0 "Javelin::PoolCategory& StaticProgressionPoolData::category::Getter(StaticProgressionPoolData*);" 
 
[340] C: "TopHouseData"
T: 2758AC4E-A17B-4990-85D2-6060E89AA18D, S: 60
 Ctor: 144281C20, Dtor: 144282E40, Alloc: 1443757C0, Dealloc: 1416658F0, RTTI: 1461958D0
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TopHouseData::characterId::Getter(TopHouseData*);" 
 1403F11B0 "int& TopHouseData::houseScore::Getter(TopHouseData*);" 
 
[341] C: "HouseTypeData"
T: F1FA736B-0360-44BE-9A26-FC734428351C, S: C8
 Ctor: 144281380, Dtor: 144282A00, Alloc: 144375BF0, Dealloc: 144218F00, RTTI: 0
m_methods:
 1443B5DB0 "bool HouseTypeData::IsValid(HouseTypeData*);" 
m_properties:
 144252890 "AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator> HouseTypeData::maxHousingItemsPerTag::Getter(const HouseTypeData*);" 
 1401E7820 "unsigned int& HouseTypeData::fastTravelCooldownSeconds::Getter(HouseTypeData*);" 
 1403F1550 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& HouseTypeData::locTag::Getter(HouseTypeData*);" 
 1442D0360 "unsigned short& HouseTypeData::maxTotalHousingItems::Getter(HouseTypeData*);" 
 1401AD7A0 "Crc32& HouseTypeData::id::Getter(HouseTypeData*);" 
 140916660 "unsigned int& HouseTypeData::cost::Getter(HouseTypeData*);" 
 140782520 "unsigned short& HouseTypeData::territoryStandingRequiredRank::Getter(HouseTypeData*);" 
 
[342] C: "RecipeCategoryData"
T: 7B8BB9F2-F649-46EE-86B5-D2C1278BE016, S: 78
 Ctor: 1446F2810, Dtor: 142004990, Alloc: 144918970, Dealloc: 1420080A0, RTTI: 0
m_properties:
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeCategoryData::craftingGroup::Getter(UiRecipeCategoryData*);" 
 142004F50 "void RecipeCategoryData::craftingGroup::Setter(UiRecipeCategoryData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeCategoryData::id::Getter(UiRecipeCategoryData*);" 
 1403188A0 "void RecipeCategoryData::id::Setter(UiRecipeCategoryData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& RecipeCategoryData::craftingCategory::Getter(UiRecipeCategoryData*);" 
 142004F30 "void RecipeCategoryData::craftingCategory::Setter(UiRecipeCategoryData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[343] C: "StaticHousingItemData"
T: 2CE33F9F-7F1E-47AF-A4AA-0EAAC7B6C311, S: 100
 Ctor: 1446F24D0, Dtor: 1446F42B0, Alloc: 144918220, Dealloc: 142A1F010, RTTI: 0
m_methods:
 140EDDFE0 "bool StaticHousingItemData::IsValid(StaticHousingItemData*);" 
 141684A20 "bool StaticHousingItemData::IsEntitlement(StaticHousingItemData*);" 
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticHousingItemData::key::Getter(StaticHousingItemData*);" 
 1401AD7A0 "Crc32& StaticHousingItemData::id::Getter(StaticHousingItemData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticHousingItemData::uiHousingCategory::Getter(StaticHousingItemData*);" 
 14478DF90 "unsigned char& StaticHousingItemData::rankingPointsDuplicateLimit::Getter(StaticHousingItemData*);" 
 1403F11B0 "unsigned char& StaticHousingItemData::rankingPoints::Getter(StaticHousingItemData*);" 
 1417B81F0 "Crc32& StaticHousingItemData::statusEffect::Getter(StaticHousingItemData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[344] C: "CameraComponent"
T: E409F5C0-9919-4CA5-9488-1FE8A041768E, S: D0
 Ctor: 14179BAE0, Dtor: 1401DF450, Alloc: 141806490, Dealloc: 141834CA0, RTTI: 14616E250
m_requestBuses:
 "CameraRequestBus"
 
[345] C: "AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>"
T: 67062375-C00C-5C8A-8704-90EDEB6FE50B, S: 20
 Ctor: 1401DF120, Dtor: 1437FA0D0, Alloc: 144376350, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>::pop_back(AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>*);" 
 14069EE90 "void AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>::clear(AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>*);" 
 14045A440 "int AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>::size(AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>*);" 
 14031C0C0 "AZStd::pair<Crc32, unsigned short>& AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>::at(AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>*, AZ::u64);" 
 1443B4E90 "void AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>::insert(AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>*, int, AZStd::pair<Crc32, unsigned short>&);" 
 1443D03A0 "void AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>::push_back(AZStd::vector<AZStd::pair<Crc32, unsigned short>, allocator>*, const AZStd::pair<Crc32, unsigned short>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[346] C: "AbilityData"
T: 489FAD0A-3B3E-4C82-A33B-EC7C0887A90C, S: 650
 Ctor: 1442810F0, Dtor: 1442829B0, Alloc: 144375AD0, Dealloc: 1443B3C80, RTTI: 0
m_properties:
 1442D02F0 "Crc32& AbilityData::uiCategory::Getter(AbilityData*);" 
 1442D02D0 "short& AbilityData::resetCooldownTimers::Getter(AbilityData*);" 
 1442D0390 "Crc32& AbilityData::weaponTag::Getter(AbilityData*);" 
 141C8A130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AbilityData::sound::Getter(AbilityData*);" 
 140968720 "AZStd::bitset<27>& AbilityData::hitProps::Getter(AbilityData*);" 
 14309FC30 "Crc32& AbilityData::damageTableRowOverride::Getter(AbilityData*);" 
 1423D88B0 "unsigned char& AbilityData::treeId::Getter(AbilityData*);" 
 140780AF0 "Crc32& AbilityData::id::Getter(AbilityData*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AbilityData::displayIcon::Getter(AbilityData*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AbilityData::displayName::Getter(AbilityData*);" 
 1442D02C0 "float& AbilityData::cooldownTimer::Getter(AbilityData*);" 
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AbilityData::displayDescription::Getter(AbilityData*);" 
 1442D01F0 "AZStd::bitset<32>& AbilityData::dataProps::Getter(AbilityData*);" 
 1442D0290 "Crc32& AbilityData::cooldownId::Getter(AbilityData*);" 
 1442D01E0 "unsigned char& AbilityData::treeColPos::Getter(AbilityData*);" 
 1442D02B0 "float& AbilityData::duration::Getter(AbilityData*);" 
 1442D02E0 "int& AbilityData::numFreeCooldownsPerUse::Getter(AbilityData*);" 
 1442D01D0 "unsigned char& AbilityData::treeRowPos::Getter(AbilityData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[347] C: "AZStd::array<const AbilityData*, 6>"
T: 81122682-CB65-5CBC-A09E-5ED9C5507BBC, S: 30
 Ctor: 1442819C0, Dtor: 140190D00, Alloc: 144376090, Dealloc: 141665EF0, RTTI: 0
m_methods:
 1443CE150 "const AbilityData*& AZStd::array<const AbilityData*, 6>::at(AZStd::array<const AbilityData*, 6>*, AZ::u64);" 
 14019D350 "int AZStd::array<const AbilityData*, 6>::size(AZStd::array<const AbilityData*, 6>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[348] C: "any"
T: 03924488-C7F4-4D6D-948B-ABC2D1AE2FD3, S: 80
 Ctor: 1401DF1B0, Dtor: 1401DF460, Alloc: 140365E30, Dealloc: 1403D7A60, RTTI: 0
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("bool" B2C7372D-7B99-50A2-B710-71649CECE315), VT: 145421B08, V: 0x1
 ("CustomReaderWriter" 2F7D4EC7-5477-59F4-8EF1-6390D19DCF08), VT: 145421B48, V: 0x7FF752769E20
 
[349] C: "Quaternion"
T: 73103120-3DD3-4873-BAB3-9713FA2804FB, S: 10
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140367620, Dealloc: 1403D80F0, RTTI: 0
m_constructors:
 1401D4850 "void Quaternion::Constructor(Quaternion*, const VectorFloat&);" 
 1401D4860 "void Quaternion::Constructor(Quaternion*, const VectorFloat&, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
m_methods:
 1403D6490 "const Quaternion Quaternion::CreateShortestArc(const Vector3&, const Vector3&);" 
 1403D3D60 "const Quaternion Quaternion::CreateFromMatrix4x4(const Matrix4x4&);" 
 1403D3D60 "const Quaternion Quaternion::CreateFromTransform(const Transform&);" 
 1403D44A0 "const Quaternion Quaternion::CreateFromVector3AndValue(const Vector3&, const VectorFloat&);" 
 1403D5E20 "const Quaternion Quaternion::CreateRotationX(float);" 
 1403D4940 "const Quaternion Quaternion::CreateIdentity();" 
 140425B70 "void Quaternion::Normalize(Quaternion*);" 
 1403D3930 "const Quaternion Quaternion::CreateFromMatrix3x3(const Matrix3x3&);" 
 140408930 "void Quaternion::InvertFast(Quaternion*);" 
 1403FA770 "const VectorFloat Quaternion::GetLengthReciprocal(Quaternion*);" 
 1403D7240 "const Quaternion Quaternion::CreateZero();" 
 14045A5B0 "const Quaternion Quaternion::Slerp(Quaternion*, const Quaternion&, float);" 
 1403FA6E0 "const VectorFloat Quaternion::GetLength(Quaternion*);" 
 1403D6350 "const Quaternion Quaternion::CreateRotationZ(float);" 
 1403FA820 "const VectorFloat Quaternion::GetLengthSq(Quaternion*);" 
 1403D3600 "const Quaternion Quaternion::CreateFromAxisAngle(const Vector3&, const VectorFloat&);" 
 1403F4AC0 "const VectorFloat Quaternion::GetElement(Quaternion*, int);" 
 1401D4860 "void Quaternion::Set(Quaternion*, const VectorFloat&, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
 1403FBB70 "const Quaternion Quaternion::GetNormalized(Quaternion*);" 
 14019CCF0 "Quaternion Quaternion::Clone(const Quaternion&);" 
 14031C8C0 "const Quaternion Quaternion::DivideFloat(Quaternion*, const VectorFloat&);" 
 1403D60C0 "const Quaternion Quaternion::CreateRotationY(float);" 
 14031C730 "const Quaternion Quaternion::Unary(Quaternion*);" 
 14031C4A0 "const Quaternion Quaternion::MultiplyQuaternion(Quaternion*, const Quaternion&);" 
 140430970 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Quaternion::ToString(const Quaternion&);" 
 14031C110 "const Quaternion Quaternion::MultiplyFloat(Quaternion*, const VectorFloat&);" 
 140457150 "void Quaternion::SetElement(Quaternion*, int, const VectorFloat&);" 
 1403F23B0 "const Quaternion Quaternion::GetConjugate(Quaternion*);" 
 14031BEF0 "bool Quaternion::Equal(Quaternion*, const Quaternion&);" 
 14031C810 "const Quaternion Quaternion::Add(Quaternion*, const Quaternion&);" 
 14031C720 "const Quaternion Quaternion::Subtract(Quaternion*, const Quaternion&);" 
 140408AD0 "void Quaternion::InvertFull(Quaternion*);" 
 140425E30 "const VectorFloat Quaternion::NormalizeWithLength(Quaternion*);" 
 14040C850 "const Quaternion Quaternion::Lerp(Quaternion*, const Quaternion&, const VectorFloat&);" 
 14045BFE0 "const Quaternion Quaternion::Squad(Quaternion*, const Quaternion&, const Quaternion&, const Quaternion&, float);" 
 14040A520 "bool Quaternion::IsIdentity(Quaternion*, const VectorFloat&);" 
 1403F23B0 "const Quaternion Quaternion::GetInverseFast(Quaternion*);" 
 1403D4480 "const Quaternion Quaternion::CreateFromVector3(const Vector3&);" 
 1403F9160 "const Vector3 Quaternion::GetImaginary(Quaternion*);" 
 1403F9CD0 "const Quaternion Quaternion::GetInverseFull(Quaternion*);" 
 1403E09F0 "const VectorFloat Quaternion::Dot(Quaternion*, const Quaternion&);" 
 140408E60 "bool Quaternion::IsClose(Quaternion*, const Quaternion&, const VectorFloat&);" 
 14040C680 "bool Quaternion::IsZero(Quaternion*, const VectorFloat&);" 
 14040A050 "bool Quaternion::IsFinite(Quaternion*);" 
 1403EFA10 "VectorFloat Quaternion::GetAngle(Quaternion*);" 
m_properties:
 1403EEA00 "const VectorFloat Quaternion::w::Getter(Quaternion*);" 
 140454650 "void Quaternion::w::Setter(Quaternion*, const VectorFloat&);" 
 1403F11D0 "const VectorFloat Quaternion::z::Getter(Quaternion*);" 
 140454DC0 "void Quaternion::z::Setter(Quaternion*, const VectorFloat&);" 
 140400960 "const VectorFloat Quaternion::x::Getter(Quaternion*);" 
 140457DA0 "void Quaternion::x::Setter(Quaternion*, const VectorFloat&);" 
 1403F5760 "const VectorFloat Quaternion::y::Getter(Quaternion*);" 
 140457550 "void Quaternion::y::Setter(Quaternion*, const VectorFloat&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Quaternion* ScriptDataContext& >" BE92E38F-D3CB-5AD1-AFD6-A82FF231EADF), VT: 1454212B0, V: 0x7FF7528305C0
 ("AZ::AttributeFunction<R(Args...)><void Quaternion* >" D437459D-58BE-5DC8-A90D-1E93A03221BE), VT: 1454212F8, V: 0x7FF7528301B0
 
[350] C: "SpellData"
T: BABDA291-FE4F-44F6-883C-51120DC7F516, S: 2D0
 Ctor: 1442816D0, Dtor: 144282BE0, Alloc: 144375DA0, Dealloc: 1443B3E80, RTTI: 0
m_properties:
 143B72EA0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SpellData::spellSlicePath::Getter(SpellData*);" 
 140ED5EE0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SpellData::indicatorVFX::Getter(SpellData*);" 
 1403F1550 "float& SpellData::castRadius::Getter(SpellData*);" 
 1410530F0 "float& SpellData::radiusScaling::Getter(SpellData*);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SpellData::manaCost::Getter(SpellData*);" 
 140584310 "float& SpellData::radius::Getter(SpellData*);" 
 140F838C0 "int& SpellData::numToSpawn::Getter(SpellData*);" 
 1406414E0 "int& SpellData::duration::Getter(SpellData*);" 
 140AF8A80 "float& SpellData::castHeight::Getter(SpellData*);" 
 1442D0300 "float& SpellData::channelTime::Getter(SpellData*);" 
 140AF2E90 "float& SpellData::length::Getter(SpellData*);" 
 143FBB940 "float& SpellData::innerRadius::Getter(SpellData*);" 
 1407E7270 "float& SpellData::castDistance::Getter(SpellData*);" 
 140AF21A0 "float& SpellData::maxRadiusScaling::Getter(SpellData*);" 
 1401AD7A0 "Crc32& SpellData::id::Getter(SpellData*);" 
 140584300 "float& SpellData::durationScaling::Getter(SpellData*);" 
 141692540 "float& SpellData::height::Getter(SpellData*);" 
 1423B46B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& SpellData::damageType::Getter(SpellData*);" 
 142AA8F50 "Crc32& SpellData::abilityId::Getter(SpellData*);" 
 
[351] C: "PersistentTerritoryProgressionData"
T: A7DD419C-FBD3-4CFF-89F4-D234D7C4B29A, S: 100
 Ctor: 144423300, Dtor: 1444253A0, Alloc: 1445EF1F0, Dealloc: 141665970, RTTI: 146185258
m_methods:
 144665170 "TerritoryProgressionActiveData PersistentTerritoryProgressionData::GetActiveProjectByType(PersistentTerritoryProgressionData*, unsigned char);" 
 1446683D0 "bool PersistentTerritoryProgressionData::IsProjectActiveById(PersistentTerritoryProgressionData*, Crc32);" 
 144668360 "bool PersistentTerritoryProgressionData::IsProjectTypeActive(PersistentTerritoryProgressionData*, unsigned char);" 
 1446650C0 "TerritoryProgressionActiveData PersistentTerritoryProgressionData::GetActiveProjectById(PersistentTerritoryProgressionData*, Crc32);" 
m_properties:
 140F838C0 "TerritoryProgressionActiveData& PersistentTerritoryProgressionData::activeTerritoryProject::Getter(PersistentTerritoryProgressionData*);" 
 14453DE80 "void PersistentTerritoryProgressionData::activeTerritoryProject::Setter(PersistentTerritoryProgressionData*, const TerritoryProgressionActiveData&);" 
 14183CAA0 "AZStd::vector<TerritoryStatusEffect, allocator>& PersistentTerritoryProgressionData::territoryStatusEffects::Getter(PersistentTerritoryProgressionData*);" 
 14453DF00 "void PersistentTerritoryProgressionData::territoryStatusEffects::Setter(PersistentTerritoryProgressionData*, const AZStd::vector<TerritoryStatusEffect, allocator>&);" 
 1407E7270 "AZStd::vector<CompletedTerritoryProgressionData, allocator>& PersistentTerritoryProgressionData::completedTerritoryUpgrades::Getter(PersistentTerritoryProgressionData*);" 
 14453DE30 "void PersistentTerritoryProgressionData::completedTerritoryUpgrades::Setter(PersistentTerritoryProgressionData*, const AZStd::vector<CompletedTerritoryProgressionData, allocato);" 
 
[352] C: "FactionData"
T: A938186C-EBF0-44B5-8BA3-9E9D7AE9ED39, S: 68
 Ctor: 144281830, Dtor: 143F13460, Alloc: 144375EC0, Dealloc: 1443B4080, RTTI: 0
m_properties:
 1401AD7A0 "Javelin::FactionType& FactionData::type::Getter(StaticFactionData*);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& FactionData::displayDesc::Getter(StaticFactionData*);" 
 144252930 "GuildIconData FactionData::icon::Getter(StaticFactionData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& FactionData::displayName::Getter(StaticFactionData*);" 
 
[353] C: "GameModeQueueData"
T: 9E440D20-8D53-4EDC-BC60-889849A4E632, S: 28
 Ctor: 144422090, Dtor: 140190D00, Alloc: 1445EF7B0, Dealloc: 144663B40, RTTI: 1461B1090
m_properties:
 1403EE8B0 "unsigned int& GameModeQueueData::numGroups::Getter(GameModeQueueData*);" 
 1417B81D0 "unsigned int& GameModeQueueData::numPlayers::Getter(GameModeQueueData*);" 
 1401E7820 "Crc32& GameModeQueueData::gameModeId::Getter(GameModeQueueData*);" 
 1403F11A0 "TimePoint& GameModeQueueData::queuingStartTime::Getter(GameModeQueueData*);" 
 
[354] C: "GuildSiegeWindowRegionData"
T: 1B34AF34-C6AC-4360-BA4A-60F06485710B, S: 48
 Ctor: 144281B40, Dtor: 144282D90, Alloc: 1443756A0, Dealloc: 144218480, RTTI: 14619D720
m_properties:
 1403F11A0 "int& GuildSiegeWindowRegionData::utcOffset::Getter(GuildSiegeWindowRegionData*);" 
 1403F2E80 "Crc32& GuildSiegeWindowRegionData::dstRuleId::Getter(GuildSiegeWindowRegionData*);" 
 1442D0280 "bool& GuildSiegeWindowRegionData::observesDst::Getter(GuildSiegeWindowRegionData*);" 
 
[355] C: "AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator>"
T: CE3BED9E-253F-5715-A4A5-A78BA2859139, S: 20
 Ctor: 1401DF120, Dtor: 1446F4450, Alloc: 144918F20, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAD40 "void AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator>::pop_back(AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceI);" 
 1449D75B0 "void AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator>::clear(AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceI);" 
 14019CC40 "int AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator>::size(AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceI);" 
 14048F800 "AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>> AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator>::at(AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceI, AZ::u64);" 
 1449A5010 "void AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator>::insert(AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceI, int, AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>);" 
 1449DB0F0 "void AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator>::push_back(AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceI, const AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, alloc);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[356] C: "AZStd::vector<Color, allocator>"
T: 24A1B3FF-51E3-5699-9ED7-49D835DE1DED, S: 20
 Ctor: 1401DF120, Dtor: 143F137F0, Alloc: 144376820, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513D0 "void AZStd::vector<Color, allocator>::pop_back(AZStd::vector<Color, allocator>*);" 
 14069EE90 "void AZStd::vector<Color, allocator>::clear(AZStd::vector<Color, allocator>*);" 
 14045A450 "int AZStd::vector<Color, allocator>::size(AZStd::vector<Color, allocator>*);" 
 14031C0D0 "Color& AZStd::vector<Color, allocator>::at(AZStd::vector<Color, allocator>*, AZ::u64);" 
 1443B57E0 "void AZStd::vector<Color, allocator>::insert(AZStd::vector<Color, allocator>*, int, Color&);" 
 1443D08C0 "void AZStd::vector<Color, allocator>::push_back(AZStd::vector<Color, allocator>*, const Color&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[357] C: "LandClaimScoreData"
T: 1898F3B7-9D71-4D0E-BCC2-B54FE574DB95, S: 50
 Ctor: 1446F2220, Dtor: 140190D00, Alloc: 144916D10, Dealloc: 144218400, RTTI: 14618E4B8
m_methods:
 1446945E0 "LandClaimScoreData LandClaimScoreData::Clone(const LandClaimScoreData*);" 
m_properties:
 1403F2E80 "AZ::u64& LandClaimScoreData::position::Getter(LandClaimScoreData*);" 
 1440B4F10 "void LandClaimScoreData::position::Setter(LandClaimScoreData*, const AZ::u64&);" 
 1403F11A0 "GuildId& LandClaimScoreData::guildId::Getter(LandClaimScoreData*);" 
 1440B4CB0 "void LandClaimScoreData::guildId::Setter(LandClaimScoreData*, const GuildId&);" 
 1403F11B0 "AZ::u64& LandClaimScoreData::totalSettlementDays::Getter(LandClaimScoreData*);" 
 141AAD880 "void LandClaimScoreData::totalSettlementDays::Setter(LandClaimScoreData*, const AZ::u64&);" 
 1403F2E90 "AZ::u64& LandClaimScoreData::totalScore::Getter(LandClaimScoreData*);" 
 142E6D530 "void LandClaimScoreData::totalScore::Setter(LandClaimScoreData*, const AZ::u64&);" 
 
[358] C: "AZStd::vector<SliceInstantiationTicket, allocator>"
T: DCAD95EA-9447-5B13-AACC-6C7223E1C04D, S: 20
 Ctor: 1401DF120, Dtor: 1419A8830, Alloc: 141BABCB0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 141D565E0 "void AZStd::vector<SliceInstantiationTicket, allocator>::pop_back(AZStd::vector<SliceInstantiationTicket, allocator>*);" 
 14069EE90 "void AZStd::vector<SliceInstantiationTicket, allocator>::clear(AZStd::vector<SliceInstantiationTicket, allocator>*);" 
 141946F60 "int AZStd::vector<SliceInstantiationTicket, allocator>::size(AZStd::vector<SliceInstantiationTicket, allocator>*);" 
 141D47110 "SliceInstantiationTicket& AZStd::vector<SliceInstantiationTicket, allocator>::at(AZStd::vector<SliceInstantiationTicket, allocator>*, AZ::u64);" 
 141C9DE00 "void AZStd::vector<SliceInstantiationTicket, allocator>::insert(AZStd::vector<SliceInstantiationTicket, allocator>*, int, SliceInstantiationTicket&);" 
 141D585A0 "void AZStd::vector<SliceInstantiationTicket, allocator>::push_back(AZStd::vector<SliceInstantiationTicket, allocator>*, const SliceInstantiationTicket&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[359] C: "Vector4"
T: 0CE9FA36-1E3A-4C06-9254-B7C73A732053, S: 10
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140367DA0, Dealloc: 1403D80F0, RTTI: 0
m_constructors:
 1401D4850 "void Vector4::Constructor(Vector4*, const VectorFloat&);" 
 1401D4860 "void Vector4::Constructor(Vector4*, const VectorFloat&, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
m_methods:
 1403C1EB0 "Vector4 Vector4::ConstructFromValues(VectorFloat, VectorFloat, VectorFloat, VectorFloat);" 
 1403D4FF0 "const Vector4 Vector4::CreateOne();" 
 1403D44A0 "const Vector4 Vector4::CreateFromVector3AndFloat(const Vector3&, const VectorFloat&);" 
 1403CF680 "const Vector4 Vector4::CreateAxisY(const VectorFloat&);" 
 1403CF640 "const Vector4 Vector4::CreateAxisX(const VectorFloat&);" 
 14040A050 "bool Vector4::IsFinite(Vector4*);" 
 14040A510 "bool Vector4::IsGreaterThan(Vector4*, const Vector4&);" 
 1403FA740 "const VectorFloat Vector4::GetLength(Vector4*);" 
 1403FA8A0 "const VectorFloat Vector4::GetLengthSq(Vector4*);" 
 1403F4AC0 "const VectorFloat Vector4::GetElement(Vector4*, int);" 
 140425CB0 "void Vector4::NormalizeSafe(Vector4*, const VectorFloat&);" 
 14031C810 "const Vector4 Vector4::Add(Vector4*, const Vector4&);" 
 14040A480 "bool Vector4::IsGreaterEqualThan(Vector4*, const Vector4&);" 
 1403FA7F0 "const VectorFloat Vector4::GetLengthReciprocal(Vector4*);" 
 1403D7240 "const Vector4 Vector4::CreateZero();" 
 14040A8F0 "bool Vector4::LessEqualThan(Vector4*, const Vector4&);" 
 140400A20 "const Vector4 Vector4::GetReciprocal(Vector4*);" 
 14031C8C0 "const Vector4 Vector4::DivideFloat(Vector4*, const VectorFloat&);" 
 1403FBBE0 "const Vector4 Vector4::GetNormalized(Vector4*);" 
 1403CF6A0 "const Vector4 Vector4::CreateAxisZ(const VectorFloat&);" 
 14031C110 "const Vector4 Vector4::MultiplyVector4(Vector4*, const Vector4&);" 
 14019CCF0 "Vector4 Vector4::Clone(const Vector4&);" 
 14031C730 "const Vector4 Vector4::Unary(Vector4*);" 
 140430970 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Vector4::ToString(const Vector4&);" 
 14031C110 "const Vector4 Vector4::MultiplyFloat(Vector4*, const VectorFloat&);" 
 140457150 "void Vector4::SetElement(Vector4*, int, const VectorFloat&);" 
 14031C8C0 "const Vector4 Vector4::DivideVector4(Vector4*, const Vector4&);" 
 14031C720 "const Vector4 Vector4::Subtract(Vector4*, const Vector4&);" 
 1403CF610 "const Vector4 Vector4::CreateAxisW(const VectorFloat&);" 
 14031BEF0 "bool Vector4::Equal(Vector4*, const Vector4&);" 
 14040A980 "bool Vector4::LessThan(Vector4*, const Vector4&);" 
 1401D4860 "void Vector4::Set(Vector4*, const VectorFloat&, const VectorFloat&, const VectorFloat&, const VectorFloat&);" 
 140425BE0 "void Vector4::Normalize(Vector4*);" 
 14040ADA0 "bool Vector4::IsNormalized(Vector4*, const VectorFloat&);" 
 140425EA0 "const VectorFloat Vector4::NormalizeWithLength(Vector4*);" 
 1403FBCC0 "const Vector4 Vector4::GetNormalizedSafe(Vector4*, const VectorFloat&);" 
 140425DA0 "const VectorFloat Vector4::NormalizeSafeWithLength(Vector4*, const VectorFloat&);" 
 1403E09C0 "const VectorFloat Vector4::Dot(Vector4*, const Vector4&);" 
 1403E0990 "const VectorFloat Vector4::Dot3(Vector4*, const Vector3&);" 
 1403EEBE0 "const Vector4 Vector4::GetAbs(Vector4*);" 
 140404480 "void Vector4::Homogenize(Vector4*);" 
 1403F90B0 "const Vector3 Vector4::GetHomogenized(Vector4*);" 
 140408E60 "bool Vector4::IsClose(Vector4*, const Vector4&, const VectorFloat&);" 
 14040C680 "bool Vector4::IsZero(Vector4*, const VectorFloat&);" 
 14040A980 "bool Vector4::IsLessThan(Vector4*, const Vector4&);" 
 14040A8F0 "bool Vector4::IsLessEqualThan(Vector4*, const Vector4&);" 
 1403D4460 "const Vector4 Vector4::CreateFromVector3(const Vector3&);" 
m_properties:
 1403EEA00 "const VectorFloat Vector4::w::Getter(Vector4*);" 
 140454650 "void Vector4::w::Setter(Vector4*, const VectorFloat&);" 
 1403F11D0 "const VectorFloat Vector4::z::Getter(Vector4*);" 
 140454DC0 "void Vector4::z::Setter(Vector4*, const VectorFloat&);" 
 140400960 "const VectorFloat Vector4::x::Getter(Vector4*);" 
 140457DA0 "void Vector4::x::Setter(Vector4*, const VectorFloat&);" 
 1403F5760 "const VectorFloat Vector4::y::Getter(Vector4*);" 
 140457550 "void Vector4::y::Setter(Vector4*, const VectorFloat&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Vector4* ScriptDataContext& >" D7B4B2AD-755E-590A-886F-572E803F232E), VT: 145421100, V: 0x7FF7528886D0
 ("AZ::AttributeFunction<R(Args...)><void Vector4* >" 53043E02-8EDB-57C1-9E6C-986EC93FC3C1), VT: 145421148, V: 0x7FF7527BE7D0
 
[360] C: "WarDeployableLimitData"
T: FDA4A41D-1FC4-4038-B3B8-A8725DB08A24, S: F8
 Ctor: 144281D20, Dtor: 144282F00, Alloc: 1443758E0, Dealloc: 1443B3C00, RTTI: 14619D708
m_methods:
 1432CBED0 "int WarDeployableLimitData::GetLimit(WarDeployableLimitData*, bool, unsigned char);" 
 1432D3FE0 "bool WarDeployableLimitData::IsValid(WarDeployableLimitData*);" 
m_properties:
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& WarDeployableLimitData::displayName::Getter(WarDeployableLimitData*);" 
 140641920 "AZStd::array<int, 3>& WarDeployableLimitData::attackerLimits::Getter(WarDeployableLimitData*);" 
 1442D0370 "int& WarDeployableLimitData::defenderLimit::Getter(WarDeployableLimitData*);" 
 
[361] C: "AZStd::array<int, 3>"
T: C450144F-FA6D-5EEF-9B6B-AF5C90A0E138, S: C
 Ctor: 1442819B0, Dtor: 140190D00, Alloc: 144375FE0, Dealloc: 1406E7BF0, RTTI: 0
m_methods:
 141D470F0 "int& AZStd::array<int, 3>::at(AZStd::array<int, 3>*, AZ::u64);" 
 14019CF10 "int AZStd::array<int, 3>::size(AZStd::array<int, 3>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[362] C: "AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>"
T: B3872690-D6D9-5580-8FFF-A1CC40E55CC6, S: 20
 Ctor: 1401DF120, Dtor: 1437FA0D0, Alloc: 144376400, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>::pop_back(AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>*);" 
 14069EE90 "void AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>::clear(AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>*);" 
 14045A440 "int AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>::size(AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>*);" 
 14031C0C0 "AZStd::pair<Crc32, unsigned int>& AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>::at(AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>*, AZ::u64);" 
 1443B4F50 "void AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>::insert(AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>*, int, AZStd::pair<Crc32, unsigned int>&);" 
 1443D03E0 "void AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>::push_back(AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator>*, const AZStd::pair<Crc32, unsigned int>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[363] C: "StaticProgressionPointData"
T: 8B1FA7D6-3CE2-4FC7-8966-BFF2DE46B14C, S: 118
 Ctor: 1444226A0, Dtor: 144424E90, Alloc: 1445EFDE0, Dealloc: 144664240, RTTI: 0
m_properties:
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticProgressionPointData::upgradeCardSprite::Getter(StaticProgressionPointData*);" 
 1401AD7A0 "Crc32& StaticProgressionPointData::id::Getter(StaticProgressionPointData*);" 
 142446660 "int StaticProgressionPointData::territoryBonusCategory::Getter(const StaticProgressionPointData*);" 
 142446650 "int StaticProgressionPointData::poolCategory::Getter(const StaticProgressionPointData*);" 
 1444A9F30 "unsigned short& StaticProgressionPointData::requiredProgressionLevel::Getter(StaticProgressionPointData*);" 
 140C46640 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticProgressionPointData::upgradeCardStat::Getter(StaticProgressionPointData*);" 
 1403F1560 "Crc32& StaticProgressionPointData::requiredPointId::Getter(StaticProgressionPointData*);" 
 141C8A130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticProgressionPointData::upgradeCardCategory::Getter(StaticProgressionPointData*);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticProgressionPointData::upgradeCardDescription::Getter(StaticProgressionPointData*);" 
 
[364] C: "ScriptComponentId"
T: 7477795F-86B0-4AD6-9C21-40F57F5CC0AE, S: 38
 Ctor: 0, Dtor: 140573E50, Alloc: 14060A150, Dealloc: 1406306C0, RTTI: 0
m_constructors:
 14056BFB0 "void ScriptComponentId::Constructor(ScriptComponentId*, EntityId, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[365] C: "FastTravelCosts"
T: C102281E-5E7B-4962-93BD-ABFC9FF5F243, S: 28
 Ctor: 144421FF0, Dtor: 140190D00, Alloc: 1445EE6B0, Dealloc: 143B3A670, RTTI: 1461B1088
m_properties:
 140782B00 "float& FastTravelCosts::encumbranceCostDiscount::Getter(FastTravelCosts*);" 
 1417BFEE0 "void FastTravelCosts::encumbranceCostDiscount::Setter(FastTravelCosts*, const float&);" 
 1403EE8B0 "float& FastTravelCosts::modifier::Getter(FastTravelCosts*);" 
 1417BFEF0 "void FastTravelCosts::modifier::Setter(FastTravelCosts*, const float&);" 
 1401E7820 "float& FastTravelCosts::baseCost::Getter(FastTravelCosts*);" 
 14028DC50 "void FastTravelCosts::baseCost::Setter(FastTravelCosts*, const float&);" 
 1403F11A0 "float& FastTravelCosts::encumbranceCost::Getter(FastTravelCosts*);" 
 1417BFEB0 "void FastTravelCosts::encumbranceCost::Setter(FastTravelCosts*, const float&);" 
 140782520 "float& FastTravelCosts::distanceCost::Getter(FastTravelCosts*);" 
 1414D2A60 "void FastTravelCosts::distanceCost::Setter(FastTravelCosts*, const float&);" 
 1417B81C0 "float& FastTravelCosts::baseCostDiscount::Getter(FastTravelCosts*);" 
 1417BFEC0 "void FastTravelCosts::baseCostDiscount::Setter(FastTravelCosts*, const float&);" 
 1406413D0 "float& FastTravelCosts::distanceCostDiscount::Getter(FastTravelCosts*);" 
 1417BFED0 "void FastTravelCosts::distanceCostDiscount::Setter(FastTravelCosts*, const float&);" 
 
[366] C: "UiGatheringToolAdditionalInfo"
T: EA48599A-ED3B-4671-B6E1-AEFC4C08BCE9, S: D8
 Ctor: 144281C50, Dtor: 144282E50, Alloc: 144376980, Dealloc: 1443B4180, RTTI: 0
m_properties:
 1416944D0 "int UiGatheringToolAdditionalInfo::requiredFaction::Getter(UiGatheringToolAdditionalInfo*);" 
 1417B81B0 "bool& UiGatheringToolAdditionalInfo::isInRequiredFaction::Getter(UiGatheringToolAdditionalInfo*);" 
 1417BFEA0 "void UiGatheringToolAdditionalInfo::isInRequiredFaction::Setter(UiGatheringToolAdditionalInfo*, const bool&);" 
 1406417C0 "Crc32& UiGatheringToolAdditionalInfo::gatheringType::Getter(UiGatheringToolAdditionalInfo*);" 
 144320FD0 "void UiGatheringToolAdditionalInfo::gatheringType::Setter(UiGatheringToolAdditionalInfo*, const Crc32&);" 
 1442D0310 "int& UiGatheringToolAdditionalInfo::requiredRank::Getter(UiGatheringToolAdditionalInfo*);" 
 144320FE0 "void UiGatheringToolAdditionalInfo::requiredRank::Setter(UiGatheringToolAdditionalInfo*, const int&);" 
 1401AD7A0 "bool& UiGatheringToolAdditionalInfo::hasTradeskillRank::Getter(UiGatheringToolAdditionalInfo*);" 
 140752130 "void UiGatheringToolAdditionalInfo::hasTradeskillRank::Setter(UiGatheringToolAdditionalInfo*, const bool&);" 
 1442D01C0 "bool& UiGatheringToolAdditionalInfo::hasControllingFactionPaidUpkeep::Getter(UiGatheringToolAdditionalInfo*);" 
 144320EE0 "void UiGatheringToolAdditionalInfo::hasControllingFactionPaidUpkeep::Setter(UiGatheringToolAdditionalInfo*, const bool&);" 
 1401E7820 "ItemDescriptor& UiGatheringToolAdditionalInfo::itemDescriptor::Getter(UiGatheringToolAdditionalInfo*);" 
 144320EF0 "void UiGatheringToolAdditionalInfo::itemDescriptor::Setter(UiGatheringToolAdditionalInfo*, const ItemDescriptor&);" 
 
[367] C: "AZStd::vector<SubArmyJoiningPlayer, allocator>"
T: B6F36942-E3D6-5841-BD01-43EBE009B6E2, S: 20
 Ctor: 1401DF120, Dtor: 144425070, Alloc: 1445F08D0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693760 "void AZStd::vector<SubArmyJoiningPlayer, allocator>::pop_back(AZStd::vector<SubArmyJoiningPlayer, allocator>*);" 
 144691040 "void AZStd::vector<SubArmyJoiningPlayer, allocator>::clear(AZStd::vector<SubArmyJoiningPlayer, allocator>*);" 
 142F4B9E0 "int AZStd::vector<SubArmyJoiningPlayer, allocator>::size(AZStd::vector<SubArmyJoiningPlayer, allocator>*);" 
 142FA6150 "SubArmyJoiningPlayer& AZStd::vector<SubArmyJoiningPlayer, allocator>::at(AZStd::vector<SubArmyJoiningPlayer, allocator>*, AZ::u64);" 
 144666F10 "void AZStd::vector<SubArmyJoiningPlayer, allocator>::insert(AZStd::vector<SubArmyJoiningPlayer, allocator>*, int, SubArmyJoiningPlayer&);" 
 144693C80 "void AZStd::vector<SubArmyJoiningPlayer, allocator>::push_back(AZStd::vector<SubArmyJoiningPlayer, allocator>*, const SubArmyJoiningPlayer&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[368] C: "AZStd::vector<AZStd::pair<int, int>, allocator>"
T: 14693584-F5F6-5B50-95EF-D89CDD13CA5D, S: 20
 Ctor: 1401DF120, Dtor: 1437FA0D0, Alloc: 1445F0400, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<AZStd::pair<int, int>, allocator>::pop_back(AZStd::vector<AZStd::pair<int, int>, allocator>*);" 
 14069EE90 "void AZStd::vector<AZStd::pair<int, int>, allocator>::clear(AZStd::vector<AZStd::pair<int, int>, allocator>*);" 
 14045A440 "int AZStd::vector<AZStd::pair<int, int>, allocator>::size(AZStd::vector<AZStd::pair<int, int>, allocator>*);" 
 14031C0C0 "AZStd::pair<int, int>& AZStd::vector<AZStd::pair<int, int>, allocator>::at(AZStd::vector<AZStd::pair<int, int>, allocator>*, AZ::u64);" 
 1443B4F50 "void AZStd::vector<AZStd::pair<int, int>, allocator>::insert(AZStd::vector<AZStd::pair<int, int>, allocator>*, int, AZStd::pair<int, int>&);" 
 1443D03E0 "void AZStd::vector<AZStd::pair<int, int>, allocator>::push_back(AZStd::vector<AZStd::pair<int, int>, allocator>*, const AZStd::pair<int, int>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[369] C: "TerritoryResidentData"
T: 99B2C664-1681-4E5D-9EF5-53021F35EAD5, S: 38
 Ctor: 144422CE0, Dtor: 144424F50, Alloc: 1445EEE00, Dealloc: 140630440, RTTI: 14618E6E0
m_properties:
 1406413D0 "AZStd::vector<TerritoryStatusEffect, allocator>& TerritoryResidentData::statusEffectsData::Getter(TerritoryResidentData*);" 
 14453DBD0 "void TerritoryResidentData::statusEffectsData::Setter(TerritoryResidentData*, const AZStd::vector<TerritoryStatusEffect, allocator>&);" 
 
[370] C: "ContractItemData"
T: 72F23CE6-385D-4FF4-A494-C42F9069C686, S: 110
 Ctor: 144422F80, Dtor: 140B5B0B0, Alloc: 1427EEED0, Dealloc: 141665CF0, RTTI: 14618BC50
m_methods:
 142823BA0 "const Crc32 ContractItemData::GetPerk(ContractItemSimpleData*, int);" 
 144666730 "AZ::u64 ContractItemData::GetPerksVectorSize(ContractItemSimpleData*);" 
m_properties:
 1404D1B60 "int ContractItemData::tier::Getter(const ContractItemSimpleData*);" 
 140AF0280 "int ContractItemData::gemPerkCount::Getter(const ContractItemSimpleData*);" 
 140E5ABB0 "int ContractItemData::gearScore::Getter(const ContractItemSimpleData*);" 
 14169B030 "int ContractItemData::perkCount::Getter(const ContractItemSimpleData*);" 
 1404D1410 "int ContractItemData::rarityLevel::Getter(const ContractItemSimpleData*);" 
 1443D1040 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ContractItemData::itemName::Getter(const ContractItemSimpleData*);" 
 1443D0DC0 "Crc32 ContractItemData::itemId::Getter(const ContractItemSimpleData*);" 
 
[371] C: "ContractParticipantEvent"
T: E921CC34-3BF4-48AE-8DF1-35941FB81DB3, S: 100
 Ctor: 144422FB0, Dtor: 144425370, Alloc: 1445EEF20, Dealloc: 141665970, RTTI: 14618BC58
m_methods:
 140852A10 "const unsigned int ContractParticipantEvent::GetCompletionCount(ContractParticipantEvent*);" 
 
[372] C: "TerritoryDefinition"
T: 4F84A3FA-6FC7-4325-A8EC-4BE3B755A094, S: 228
 Ctor: 1444228F0, Dtor: 144424F30, Alloc: 1445EFF90, Dealloc: 144663F40, RTTI: 0
m_methods:
 143AD9EA0 "bool TerritoryDefinition::HasPoiTags(TerritoryDefinition*, const AZStd::vector<Crc32, allocator>&, bool);" 
 1443D0F30 "int TerritoryDefinition::GetTerritoryBuff(const TerritoryDefinition*, int);" 
 143AD9E70 "bool TerritoryDefinition::HasPoiTag(TerritoryDefinition*, Crc32);" 
m_properties:
 142AE7190 "int& TerritoryDefinition::poiLevelType::Getter(TerritoryDefinition*);" 
 14453DC10 "void TerritoryDefinition::poiLevelType::Setter(TerritoryDefinition*, const int&);" 
 1417B81F0 "bool& TerritoryDefinition::isPOI::Getter(TerritoryDefinition*);" 
 14453DD20 "void TerritoryDefinition::isPOI::Setter(TerritoryDefinition*, const bool&);" 
 143079050 "bool& TerritoryDefinition::isTerritory::Getter(TerritoryDefinition*);" 
 14453DC80 "void TerritoryDefinition::isTerritory::Setter(TerritoryDefinition*, const bool&);" 
 1444A9F60 "int& TerritoryDefinition::maximumLevel::Getter(TerritoryDefinition*);" 
 14453DC50 "void TerritoryDefinition::maximumLevel::Setter(TerritoryDefinition*, const int&);" 
 142AAAFC0 "int TerritoryDefinition::factionControlBuff::Getter(const TerritoryDefinition*);" 
 1443D0F90 "void TerritoryDefinition::factionControlBuff::Setter(TerritoryDefinition*, int);" 
 1444A9F50 "int& TerritoryDefinition::groupSize::Getter(TerritoryDefinition*);" 
 14453DC20 "void TerritoryDefinition::groupSize::Setter(TerritoryDefinition*, const int&);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryDefinition::compassIcon::Getter(TerritoryDefinition*);" 
 1440B4F60 "void TerritoryDefinition::compassIcon::Setter(TerritoryDefinition*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141EEEFA0 "AZStd::vector<Crc32, allocator>& TerritoryDefinition::poiTags::Getter(TerritoryDefinition*);" 
 1440B4D20 "void TerritoryDefinition::poiTags::Setter(TerritoryDefinition*, const AZStd::vector<Crc32, allocator>&);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryDefinition::nameLocalizationKey::Getter(TerritoryDefinition*);" 
 141AAD7E0 "void TerritoryDefinition::nameLocalizationKey::Setter(TerritoryDefinition*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1444A9F80 "Crc32& TerritoryDefinition::requiredItemId::Getter(TerritoryDefinition*);" 
 14453DC70 "void TerritoryDefinition::requiredItemId::Setter(TerritoryDefinition*, const Crc32&);" 
 141681D30 "int& TerritoryDefinition::recommendedLevel::Getter(TerritoryDefinition*);" 
 14453DC40 "void TerritoryDefinition::recommendedLevel::Setter(TerritoryDefinition*, const int&);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryDefinition::mapIcon::Getter(TerritoryDefinition*);" 
 143EB82E0 "void TerritoryDefinition::mapIcon::Setter(TerritoryDefinition*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140641920 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryDefinition::outpostId::Getter(TerritoryDefinition*);" 
 1417123C0 "void TerritoryDefinition::outpostId::Setter(TerritoryDefinition*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryDefinition::tooltipBackground::Getter(TerritoryDefinition*);" 
 141AAD9C0 "void TerritoryDefinition::tooltipBackground::Setter(TerritoryDefinition*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1444A9F90 "bool& TerritoryDefinition::isArea::Getter(TerritoryDefinition*);" 
 14453DC90 "void TerritoryDefinition::isArea::Setter(TerritoryDefinition*, const bool&);" 
 1444A9F70 "bool& TerritoryDefinition::canPlaceCamp::Getter(TerritoryDefinition*);" 
 14453DC60 "void TerritoryDefinition::canPlaceCamp::Setter(TerritoryDefinition*, const bool&);" 
 143FBB960 "Crc32& TerritoryDefinition::discoveredAchievementId::Getter(TerritoryDefinition*);" 
 1440B5060 "void TerritoryDefinition::discoveredAchievementId::Setter(TerritoryDefinition*, const Crc32&);" 
 1443D0FC0 "AZ::u64 TerritoryDefinition::territoryBuffCount::Getter(const TerritoryDefinition*);" 
 
[373] C: "GovernanceEarningsPeriodData"
T: C9128338-4417-489B-8274-7AF001F2C216, S: 40
 Ctor: 144422200, Dtor: 144424D10, Alloc: 1445EEA10, Dealloc: 144663440, RTTI: 146184EE8
m_properties:
 1403F11B0 "WallClockTimePoint& GovernanceEarningsPeriodData::endTime::Getter(GovernanceEarningsPeriodData*);" 
 14453DCF0 "void GovernanceEarningsPeriodData::endTime::Setter(GovernanceEarningsPeriodData*, const WallClockTimePoint&);" 
 1403F11A0 "AZStd::vector<GovernanceEarningStatementData, allocator>& GovernanceEarningsPeriodData::statements::Getter(GovernanceEarningsPeriodData*);" 
 14453DAA0 "void GovernanceEarningsPeriodData::statements::Setter(GovernanceEarningsPeriodData*, const AZStd::vector<GovernanceEarningStatementData, allocator>&);" 
 1401E7820 "AZ::u64& GovernanceEarningsPeriodData::totalEarnings::Getter(GovernanceEarningsPeriodData*);" 
 1440B4C30 "void GovernanceEarningsPeriodData::totalEarnings::Setter(GovernanceEarningsPeriodData*, const AZ::u64&);" 
 
[374] C: "AZStd::vector<TerritoryProgressionProjectSummary, allocator>"
T: 16618C2C-2EF3-5CE6-AA99-58E632A61AB6, S: 20
 Ctor: 1401DF120, Dtor: 1437FA100, Alloc: 144919550, Dealloc: 1406305C0, RTTI: 0
m_methods:
 143832970 "void AZStd::vector<TerritoryProgressionProjectSummary, allocator>::pop_back(AZStd::vector<TerritoryProgressionProjectSummary, allocator>*);" 
 14069EE90 "void AZStd::vector<TerritoryProgressionProjectSummary, allocator>::clear(AZStd::vector<TerritoryProgressionProjectSummary, allocator>*);" 
 1437F3A90 "int AZStd::vector<TerritoryProgressionProjectSummary, allocator>::size(AZStd::vector<TerritoryProgressionProjectSummary, allocator>*);" 
 143831BA0 "TerritoryProgressionProjectSummary& AZStd::vector<TerritoryProgressionProjectSummary, allocator>::at(AZStd::vector<TerritoryProgressionProjectSummary, allocator>*, AZ::u64);" 
 1449A5C00 "void AZStd::vector<TerritoryProgressionProjectSummary, allocator>::insert(AZStd::vector<TerritoryProgressionProjectSummary, allocator>*, int, TerritoryProgressionProjectSummary&);" 
 1449DB660 "void AZStd::vector<TerritoryProgressionProjectSummary, allocator>::push_back(AZStd::vector<TerritoryProgressionProjectSummary, allocator>*, const TerritoryProgressionProjectSummary&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[375] C: "CapsuleShapeConfig"
T: 00931AEB-2AD8-42CE-B1DC-FA4332F51501, S: 10
 Ctor: 1419A7DF0, Dtor: 1401DF450, Alloc: 141BAACE0, Dealloc: 1406303C0, RTTI: 146175678
m_properties:
 140782520 "float& CapsuleShapeConfig::Radius::Getter(CapsuleShapeConfig*);" 
 1414D2A60 "void CapsuleShapeConfig::Radius::Setter(CapsuleShapeConfig*, const float&);" 
 1401E7820 "float& CapsuleShapeConfig::Height::Getter(CapsuleShapeConfig*);" 
 14028DC50 "void CapsuleShapeConfig::Height::Setter(CapsuleShapeConfig*, const float&);" 
 
[376] C: "Contract"
T: 752536FB-E589-4DFD-8263-1DDD34EAE00F, S: 3B0
 Ctor: 144422F40, Dtor: 140BEB930, Alloc: 1427DCC50, Dealloc: 1446636C0, RTTI: 14618BC68
m_methods:
 1443D0DF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Contract::GetOutpostLocation(const Contract*);" 
 1443D10B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Contract::GetOutpostId(const Contract*);" 
 1427F52A0 "int Contract::GetMaxOpenContractsPerPlayer();" 
 1427F65C0 "float Contract::GetSellContractTransactionTax();" 
 1404C7A9C "const unsigned int Contract::GetCount(Contract*);" 
 140B1E720 "const bool Contract::IsLocalPlayerCreator(Contract*);" 
 14031EC54 "int Contract::GetType(Contract*);" 
 1403F2E90 "const WallClockTimePoint& Contract::GetLastUpdateTime(Contract*);" 
 14081F180 "int Contract::GetStatus(Contract*);" 
 1427EF620 "AZ::u64 Contract::CalculateContractCompletionFee(AZ::u64, int);" 
 1404C7A84 "const AZ::u64 Contract::GetGold(Contract*);" 
 144665AB0 "WallClockTimePoint Contract::GetExpirationDate(Contract*);" 
 1403F11A0 "const AZ::Uuid& Contract::GetId(Contract*);" 
 1427F3BC0 "float Contract::GetBuyContractTransactionTax();" 
 1427F4500 "const ContractParticipantEvent& Contract::GetCreationEvent(Contract*);" 
 1427F6BE0 "AZStd::vector<int, allocator> Contract::GetValidContractDurations(int);" 
 14050D274 "const ContractItemSimpleData& Contract::GetItem(Contract*);" 
 1427F5E60 "unsigned short Contract::GetOriginTerritoryId(Contract*);" 
 140AF0A30 "const Duration& Contract::GetPostingDuration(Contract*);" 
 1427F4550 "int Contract::GetReason(Contract*);" 
 1427EF770 "int Contract::CalculateMaxContractPostingQuantity(const Duration&, AZ::u64, int, AZ::u64);" 
 1427EF650 "AZ::u64 Contract::CalculateContractPostingFee(const Duration&, AZ::u64, int);" 
 1427F46A0 "int Contract::GetDefaultContractDurationDays();" 
 
[377] C: "AZStd::vector<AZStd::shared_ptr<Contract>, allocator>"
T: 7212B1A9-8FB0-5FFF-9496-5F2528315AA7, S: 20
 Ctor: 1401DF120, Dtor: 1444251E0, Alloc: 1445F0B90, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1446937D0 "void AZStd::vector<AZStd::shared_ptr<Contract>, allocator>::pop_back(AZStd::vector<AZStd::shared_ptr<Contract>, allocator>*);" 
 1446910F0 "void AZStd::vector<AZStd::shared_ptr<Contract>, allocator>::clear(AZStd::vector<AZStd::shared_ptr<Contract>, allocator>*);" 
 14045A450 "int AZStd::vector<AZStd::shared_ptr<Contract>, allocator>::size(AZStd::vector<AZStd::shared_ptr<Contract>, allocator>*);" 
 14031C0D0 "AZStd::shared_ptr<Contract>& AZStd::vector<AZStd::shared_ptr<Contract>, allocator>::at(AZStd::vector<AZStd::shared_ptr<Contract>, allocator>*, AZ::u64);" 
 144667440 "void AZStd::vector<AZStd::shared_ptr<Contract>, allocator>::insert(AZStd::vector<AZStd::shared_ptr<Contract>, allocator>*, int, AZStd::shared_ptr<Contract>&);" 
 144693F60 "void AZStd::vector<AZStd::shared_ptr<Contract>, allocator>::push_back(AZStd::vector<AZStd::shared_ptr<Contract>, allocator>*, const AZStd::shared_ptr<Contract>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[378] C: "AZStd::shared_ptr<Contract>"
T: 3863752A-2026-5BB8-BD25-0084AEE9BF48, S: 10
 Ctor: 1401DF090, Dtor: 1404AE330, Alloc: 1445F0140, Dealloc: 141C5EBE0, RTTI: 0
m_constructors:
 144421840 "void AZStd::shared_ptr<Contract>::Constructor(AZStd::shared_ptr<Contract>*, Contract*);" 
m_methods:
 14031C100 "Contract* AZStd::shared_ptr<Contract>::get(AZStd::shared_ptr<Contract>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("bool" B2C7372D-7B99-50A2-B710-71649CECE315), VT: 145421B08, V: 0x1
 ("AZ::AttributeFunction<R(Args...)><void AZStd::shared_ptr<Contract>* ScriptDataContext& >" C1382917-977B-574D-BAC9-4E23E03E4FC5), VT: 1458F9B90, V: 0x7FF756A63370
 
[379] C: "ContractCreationParams"
T: F8C7542E-7D6D-4616-ABDF-19DFF5CF2188, S: 50
 Ctor: 144421DE0, Dtor: 140B5B0B0, Alloc: 14229D370, Dealloc: 141C5E2E0, RTTI: 14618C0E8
m_methods:
 142831830 "void ContractCreationParams::SetPerks(ContractCreationParams*, const AZStd::vector<Crc32, allocator>&);" 
m_properties:
 1417B81D0 "unsigned short& ContractCreationParams::gearScore::Getter(ContractCreationParams*);" 
 14453DCD0 "void ContractCreationParams::gearScore::Setter(ContractCreationParams*, const unsigned short&);" 
 140AF0A30 "int& ContractCreationParams::perkCount::Getter(ContractCreationParams*);" 
 1440B4F30 "void ContractCreationParams::perkCount::Setter(ContractCreationParams*, const int&);" 
 1406413D0 "unsigned int& ContractCreationParams::count::Getter(ContractCreationParams*);" 
 1417BFED0 "void ContractCreationParams::count::Setter(ContractCreationParams*, const unsigned int&);" 
 1403EE8B0 "Crc32& ContractCreationParams::itemId::Getter(ContractCreationParams*);" 
 1417BFEF0 "void ContractCreationParams::itemId::Setter(ContractCreationParams*, const Crc32&);" 
 1403F11A0 "AZ::s64& ContractCreationParams::gold::Getter(ContractCreationParams*);" 
 140FCC860 "void ContractCreationParams::gold::Setter(ContractCreationParams*, const AZ::s64&);" 
 140402330 "int ContractCreationParams::type::Getter(const ContractCreationParams*);" 
 14108B590 "void ContractCreationParams::type::Setter(ContractCreationParams*, int);" 
 140782B00 "int& ContractCreationParams::postingDuration::Getter(ContractCreationParams*);" 
 1417BFEE0 "void ContractCreationParams::postingDuration::Setter(ContractCreationParams*, const int&);" 
 1444A9FA0 "unsigned char& ContractCreationParams::rarity::Getter(ContractCreationParams*);" 
 14453DCE0 "void ContractCreationParams::rarity::Setter(ContractCreationParams*, const unsigned char&);" 
 1442D02A0 "int& ContractCreationParams::gemPerkCount::Getter(ContractCreationParams*);" 
 144320F90 "void ContractCreationParams::gemPerkCount::Setter(ContractCreationParams*, const int&);" 
 
[380] C: "Vector2"
T: 3D80F623-C85C-4741-90D0-E4E66164E6BF, S: 8
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 140367AA0, Dealloc: 1403D88D0, RTTI: 0
m_constructors:
 1401D4880 "void Vector2::Constructor(Vector2*, float);" 
 1401D4890 "void Vector2::Constructor(Vector2*, float, float);" 
m_methods:
 1403C1E80 "Vector2 Vector2::ConstructFromValues(VectorFloat, VectorFloat);" 
 1404147C0 "void Vector2::Madd(Vector2*, const Vector2&, const Vector2&);" 
 140453D00 "void Vector2::Select(Vector2*, const Vector2&, const Vector2&);" 
 1403FAA90 "const Vector2 Vector2::GetMadd(Vector2*, const Vector2&, const Vector2&);" 
 1403D6450 "const Vector2 Vector2::CreateSelectCmpGreaterEqual(const Vector2&, const Vector2&, const Vector2&, const Vector2&);" 
 1403D63D0 "const Vector2 Vector2::CreateSelectCmpEqual(const Vector2&, const Vector2&, const Vector2&, const Vector2&);" 
 1403D7290 "const Vector2 Vector2::CreateZero();" 
 1403CF660 "const Vector2 Vector2::CreateAxisY(float);" 
 1403CF630 "const Vector2 Vector2::CreateAxisX(float);" 
 14040A1D0 "bool Vector2::IsFinite(Vector2*);" 
 1404008B0 "Vector2 Vector2::GetProjectedOnNormal(Vector2*, const Vector2&);" 
 1403D6410 "const Vector2 Vector2::CreateSelectCmpGreater(const Vector2&, const Vector2&, const Vector2&, const Vector2&);" 
 140400810 "Vector2 Vector2::GetProjected(Vector2*, const Vector2&);" 
 14042F7F0 "void Vector2::Project(Vector2*, const Vector2&);" 
 1403F14C0 "const Vector2 Vector2::GetClamp(Vector2*, const Vector2&, const Vector2&);" 
 1403FADC0 "const Vector2 Vector2::GetMin(Vector2*, const Vector2&);" 
 14040A4E0 "bool Vector2::IsGreaterThan(Vector2*, const Vector2&);" 
 1403F4B90 "float Vector2::GetElement(Vector2*, int);" 
 140425C10 "void Vector2::NormalizeSafe(Vector2*, float);" 
 1403FBB20 "const Vector2 Vector2::GetNormalized(Vector2*);" 
 14019D340 "Vector2 Vector2::Clone(const Vector2&);" 
 14031C7B0 "const Vector2 Vector2::Subtract(Vector2*, const Vector2&);" 
 14031C890 "const Vector2 Vector2::Add(Vector2*, const Vector2&);" 
 14040A450 "bool Vector2::IsGreaterEqualThan(Vector2*, const Vector2&);" 
 14031C930 "const Vector2 Vector2::DivideFloat(Vector2*, float);" 
 14031C6D0 "const Vector2 Vector2::MultiplyVector2(Vector2*, const Vector2&);" 
 14031C7E0 "const Vector2 Vector2::Unary(Vector2*);" 
 1403F48F0 "float Vector2::GetDistance(Vector2*, const Vector2&);" 
 1404878F0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> Vector2::ToString(const Vector2*);" 
 14031C700 "const Vector2 Vector2::MultiplyFloat(Vector2*, float);" 
 140457230 "void Vector2::SetElement(Vector2*, int, float);" 
 14031C090 "bool Vector2::Equal(Vector2*, const Vector2&);" 
 1403FA6B0 "float Vector2::GetLength(Vector2*);" 
 14031C900 "const Vector2 Vector2::DivideVector2(Vector2*, const Vector2&);" 
 14045A6F0 "const Vector2 Vector2::Slerp(Vector2*, const Vector2&, float);" 
 1403D4FD0 "const Vector2 Vector2::CreateOne();" 
 140400E10 "const Vector2 Vector2::GetSelect(Vector2*, const Vector2&, const Vector2&);" 
 1403FA850 "float Vector2::GetLengthSq(Vector2*);" 
 14040A8C0 "bool Vector2::LessEqualThan(Vector2*, const Vector2&);" 
 14040A950 "bool Vector2::LessThan(Vector2*, const Vector2&);" 
 1401D4890 "void Vector2::Set(Vector2*, float, float);" 
 140457960 "void Vector2::SetLength(Vector2*, float);" 
 14040A8C0 "bool Vector2::IsLessEqualThan(Vector2*, const Vector2&);" 
 1403FBC10 "const Vector2 Vector2::GetNormalizedSafe(Vector2*, float);" 
 1403FAAE0 "const Vector2 Vector2::GetMax(Vector2*, const Vector2&);" 
 140425B30 "void Vector2::Normalize(Vector2*);" 
 14040AD30 "bool Vector2::IsNormalized(Vector2*, float);" 
 140425DF0 "float Vector2::NormalizeWithLength(Vector2*);" 
 14040C870 "const Vector2 Vector2::Lerp(Vector2*, const Vector2&, float);" 
 140425D00 "float Vector2::NormalizeSafeWithLength(Vector2*, float);" 
 1403F4950 "float Vector2::GetDistanceSq(Vector2*, const Vector2&);" 
 1403E0A20 "float Vector2::Dot(Vector2*, const Vector2&);" 
 14042F890 "void Vector2::ProjectOnNormal(Vector2*, const Vector2&);" 
 1403FF590 "const Vector2 Vector2::GetPerpendicular(Vector2*);" 
 1403EEBB0 "const Vector2 Vector2::GetAbs(Vector2*);" 
 140408F70 "bool Vector2::IsClose(Vector2*, const Vector2&, float);" 
 14040C6A0 "bool Vector2::IsZero(Vector2*, float);" 
 14040A950 "bool Vector2::IsLessThan(Vector2*, const Vector2&);" 
m_properties:
 140403470 "float Vector2::y::Getter(Vector2*);" 
 140459A90 "void Vector2::y::Setter(Vector2*, float);" 
 140403460 "float Vector2::x::Getter(Vector2*);" 
 140459A70 "void Vector2::x::Setter(Vector2*, float);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("AZ::AttributeFunction<R(Args...)><void Vector2* ScriptDataContext& >" 7EF5BD00-D26B-5E7C-BF8C-A0806060D835), VT: 145420D60, V: 0x7FF752887670
 ("AZ::AttributeFunction<R(Args...)><void Vector2* >" DEA2E528-0EF6-5660-9D16-D57138A7ED85), VT: 145420DA8, V: 0x7FF7528873E0
 
[381] C: "CreateContractResponse"
T: 286C2B6F-71E9-494F-A676-FC11C6C5C5FB, S: C0
 Ctor: 144423020, Dtor: 144425380, Alloc: 1445EEFB0, Dealloc: 144663740, RTTI: 1461B1048
m_properties:
 1403F11A0 "AZ::Uuid& CreateContractResponse::contractId::Getter(CreateContractResponse*);" 
 141AAD810 "void CreateContractResponse::contractId::Setter(CreateContractResponse*, const AZ::Uuid&);" 
 
[382] C: "AZStd::vector<JournalDataEntry, allocator>"
T: 5B1B10CB-1418-51FE-8D01-7C8CED24792B, S: 20
 Ctor: 1401DF120, Dtor: 144425280, Alloc: 1445F0CF0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693880 "void AZStd::vector<JournalDataEntry, allocator>::pop_back(AZStd::vector<JournalDataEntry, allocator>*);" 
 144691150 "void AZStd::vector<JournalDataEntry, allocator>::clear(AZStd::vector<JournalDataEntry, allocator>*);" 
 1443D1080 "int AZStd::vector<JournalDataEntry, allocator>::size(AZStd::vector<JournalDataEntry, allocator>*);" 
 144690F70 "JournalDataEntry& AZStd::vector<JournalDataEntry, allocator>::at(AZStd::vector<JournalDataEntry, allocator>*, AZ::u64);" 
 144667650 "void AZStd::vector<JournalDataEntry, allocator>::insert(AZStd::vector<JournalDataEntry, allocator>*, int, JournalDataEntry&);" 
 143A8B580 "void AZStd::vector<JournalDataEntry, allocator>::push_back(AZStd::vector<JournalDataEntry, allocator>*, const JournalDataEntry&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[383] C: "StaticCategoricalProgressionRankData"
T: C7FEC906-F699-47B2-874B-F5759C7FFFD7, S: B0
 Ctor: 144422550, Dtor: 144424E10, Alloc: 1445EFBA0, Dealloc: 144663940, RTTI: 0
m_properties:
 1401AD7A0 "unsigned short& StaticCategoricalProgressionRankData::id::Getter(StaticCategoricalProgressionRankData*);" 
 14453DA70 "void StaticCategoricalProgressionRankData::id::Setter(StaticCategoricalProgressionRankData*, const unsigned short&);" 
 14096B150 "unsigned short& StaticCategoricalProgressionRankData::azothRespecCost::Getter(StaticCategoricalProgressionRankData*);" 
 14453DD60 "void StaticCategoricalProgressionRankData::azothRespecCost::Setter(StaticCategoricalProgressionRankData*, const unsigned short&);" 
 1444A9FF0 "unsigned short& StaticCategoricalProgressionRankData::azothCostToAttain::Getter(StaticCategoricalProgressionRankData*);" 
 14453DD80 "void StaticCategoricalProgressionRankData::azothCostToAttain::Setter(StaticCategoricalProgressionRankData*, const unsigned short&);" 
 1401E7820 "AZ::u64& StaticCategoricalProgressionRankData::maxPoints::Getter(StaticCategoricalProgressionRankData*);" 
 1440B4C30 "void StaticCategoricalProgressionRankData::maxPoints::Setter(StaticCategoricalProgressionRankData*, const AZ::u64&);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticCategoricalProgressionRankData::displayName::Getter(StaticCategoricalProgressionRankData*);" 
 142F33410 "void StaticCategoricalProgressionRankData::displayName::Setter(StaticCategoricalProgressionRankData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[384] C: "Random"
T: 52BD3FA7-C15D-41FA-BC85-0FD4D310F688, S: 8
 Ctor: 1401DF1A0, Dtor: 140190D00, Alloc: 1403677A0, Dealloc: 1403D84E0, RTTI: 0
m_methods:
 1404009A0 "unsigned int Random::GetRandom(SimpleLcgRandom*);" 
 1404588A0 "void Random::SetSeed(SimpleLcgRandom*, AZ::u64);" 
 1404009D0 "float Random::GetRandomFloat(SimpleLcgRandom*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("AZ::AttributeFunction<R(Args...)><void SimpleLcgRandom* ScriptDataContext& >" 53D7DEED-AB73-5EC2-8B79-1DFE636E0382), VT: 1454216E8, V: 0x7FF752852340
 
[385] C: "StaticCategoricalProgressionData"
T: FD0CDD69-BD92-45A2-9707-48D330AAC276, S: B8
 Ctor: 1444224D0, Dtor: 144424E00, Alloc: 1445EFB10, Dealloc: 144664040, RTTI: 0
m_properties:
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticCategoricalProgressionData::iconPath::Getter(StaticCategoricalProgressionData*);" 
 141AAD9C0 "void StaticCategoricalProgressionData::iconPath::Setter(StaticCategoricalProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1405842F0 "Crc32& StaticCategoricalProgressionData::postSkillCapSkill::Getter(StaticCategoricalProgressionData*);" 
 141AAD950 "void StaticCategoricalProgressionData::postSkillCapSkill::Setter(StaticCategoricalProgressionData*, const Crc32&);" 
 1403F11B0 "unsigned short& StaticCategoricalProgressionData::maxRank::Getter(StaticCategoricalProgressionData*);" 
 14453DD00 "void StaticCategoricalProgressionData::maxRank::Setter(StaticCategoricalProgressionData*, const unsigned short&);" 
 1401AD7A0 "Crc32& StaticCategoricalProgressionData::id::Getter(StaticCategoricalProgressionData*);" 
 1401DF3E0 "void StaticCategoricalProgressionData::id::Setter(StaticCategoricalProgressionData*, const Crc32&);" 
 1444AA000 "bool& StaticCategoricalProgressionData::showAsObjectiveReward::Getter(StaticCategoricalProgressionData*);" 
 14453DE10 "void StaticCategoricalProgressionData::showAsObjectiveReward::Setter(StaticCategoricalProgressionData*, const bool&);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticCategoricalProgressionData::displayName::Getter(StaticCategoricalProgressionData*);" 
 143EB82E0 "void StaticCategoricalProgressionData::displayName::Setter(StaticCategoricalProgressionData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141A5CE80 "Crc32& StaticCategoricalProgressionData::preSkillCapSkill::Getter(StaticCategoricalProgressionData*);" 
 141AAD940 "void StaticCategoricalProgressionData::preSkillCapSkill::Setter(StaticCategoricalProgressionData*, const Crc32&);" 
 140D88940 "Crc32& StaticCategoricalProgressionData::rankTableCrc::Getter(StaticCategoricalProgressionData*);" 
 141AAD910 "void StaticCategoricalProgressionData::rankTableCrc::Setter(StaticCategoricalProgressionData*, const Crc32&);" 
 
[386] C: "StaticPostSkillCapProgressionData"
T: EE7A0B3E-563A-4EC8-ADE3-B4A18B0D3140, S: 80
 Ctor: 144422650, Dtor: 144424E80, Alloc: 1445EFD50, Dealloc: 144664140, RTTI: 0
m_properties:
 1403F11B0 "AZ::u64& StaticPostSkillCapProgressionData::maxPoints::Getter(StaticPostSkillCapProgressionData*);" 
 141AAD880 "void StaticPostSkillCapProgressionData::maxPoints::Setter(StaticPostSkillCapProgressionData*, const AZ::u64&);" 
 1401AD7A0 "Crc32& StaticPostSkillCapProgressionData::id::Getter(StaticPostSkillCapProgressionData*);" 
 1401DF3E0 "void StaticPostSkillCapProgressionData::id::Setter(StaticPostSkillCapProgressionData*, const Crc32&);" 
 1403F2E90 "AZStd::vector<float, allocator>& StaticPostSkillCapProgressionData::momentRewardPercentages::Getter(StaticPostSkillCapProgressionData*);" 
 14453DD30 "void StaticPostSkillCapProgressionData::momentRewardPercentages::Setter(StaticPostSkillCapProgressionData*, const AZStd::vector<float, allocator>&);" 
 14096B150 "AZStd::vector<Crc32, allocator>& StaticPostSkillCapProgressionData::momentRewards::Getter(StaticPostSkillCapProgressionData*);" 
 14453DD70 "void StaticPostSkillCapProgressionData::momentRewards::Setter(StaticPostSkillCapProgressionData*, const AZStd::vector<Crc32, allocator>&);" 
 
[387] C: "StaticTradeskillRankData"
T: 8B165B9F-5F30-46BD-89A6-894271CD2148, S: 148
 Ctor: 144422740, Dtor: 144424F10, Alloc: 1445EFF00, Dealloc: 144664340, RTTI: 0
m_methods:
 144668430 "bool StaticTradeskillRankData::IsValid(StaticTradeskillRankData*);" 
 1433F5010 "const NumberRange& StaticTradeskillRankData::GearScoreBonusByTier(StaticTradeskillRankData*, unsigned int);" 
m_properties:
 1401E7820 "int& StaticTradeskillRankData::resourceTierUnlock::Getter(StaticTradeskillRankData*);" 
 1417B81C0 "NumberRange& StaticTradeskillRankData::gearScoreBonus::Getter(StaticTradeskillRankData*);" 
 140F7A790 "float& StaticTradeskillRankData::gatheringEfficiency::Getter(StaticTradeskillRankData*);" 
 140AFC3C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticTradeskillRankData::iconTypeUnlock::Getter(StaticTradeskillRankData*);" 
 1403F11A0 "int& StaticTradeskillRankData::maxGatherLevel::Getter(StaticTradeskillRankData*);" 
 1401AD7A0 "unsigned short& StaticTradeskillRankData::id::Getter(StaticTradeskillRankData*);" 
 141A5CE80 "float& StaticTradeskillRankData::fishingMaxCastDistanceBonus::Getter(StaticTradeskillRankData*);" 
 1406499D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticTradeskillRankData::displayName::Getter(StaticTradeskillRankData*);" 
 
[388] C: "GovernanceEarningsData"
T: A8682058-48A1-4787-B750-77C713659E29, S: 68
 Ctor: 144422160, Dtor: 144424C80, Alloc: 1445EE980, Dealloc: 144218780, RTTI: 146184ED0
m_properties:
 140AF0A30 "AZStd::vector<GovernanceEarningsPeriodData, allocator>& GovernanceEarningsData::previousPeriods::Getter(GovernanceEarningsData*);" 
 1401E7820 "GovernanceEarningsPeriodData& GovernanceEarningsData::currentPeriod::Getter(GovernanceEarningsData*);" 
 
[389] C: "CollectibleStaticData"
T: F1DB8D0B-FC6D-41FE-A850-0C543503F338, S: B0
 Ctor: 144421CC0, Dtor: 144424BB0, Alloc: 1445EF570, Dealloc: 144663940, RTTI: 0
m_properties:
 1442D0300 "unsigned short& CollectibleStaticData::territoryId::Getter(CollectibleStaticData*);" 
 14453DE70 "void CollectibleStaticData::territoryId::Setter(CollectibleStaticData*, const unsigned short&);" 
 1401AD7A0 "Crc32& CollectibleStaticData::id::Getter(CollectibleStaticData*);" 
 1401DF3E0 "void CollectibleStaticData::id::Setter(CollectibleStaticData*, const Crc32&);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CollectibleStaticData::icon::Getter(CollectibleStaticData*);" 
 141716790 "void CollectibleStaticData::icon::Setter(CollectibleStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CollectibleStaticData::displayName::Getter(CollectibleStaticData*);" 
 142F33410 "void CollectibleStaticData::displayName::Setter(CollectibleStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141C8A130 "Crc32& CollectibleStaticData::categoricalId::Getter(CollectibleStaticData*);" 
 14453DE50 "void CollectibleStaticData::categoricalId::Setter(CollectibleStaticData*, const Crc32&);" 
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CollectibleStaticData::description::Getter(CollectibleStaticData*);" 
 14453DDD0 "void CollectibleStaticData::description::Setter(CollectibleStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[390] C: "AZStd::vector<AZStd::pair<float, float>, allocator>"
T: E4B5367C-6D7D-5A9D-A4B0-7EC5BA132F45, S: 20
 Ctor: 1401DF120, Dtor: 1437FA0D0, Alloc: 14381E7E0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<AZStd::pair<float, float>, allocator>::pop_back(AZStd::vector<AZStd::pair<float, float>, allocator>*);" 
 14069EE90 "void AZStd::vector<AZStd::pair<float, float>, allocator>::clear(AZStd::vector<AZStd::pair<float, float>, allocator>*);" 
 14045A440 "int AZStd::vector<AZStd::pair<float, float>, allocator>::size(AZStd::vector<AZStd::pair<float, float>, allocator>*);" 
 14031C0C0 "AZStd::pair<float, float>& AZStd::vector<AZStd::pair<float, float>, allocator>::at(AZStd::vector<AZStd::pair<float, float>, allocator>*, AZ::u64);" 
 14382A100 "void AZStd::vector<AZStd::pair<float, float>, allocator>::insert(AZStd::vector<AZStd::pair<float, float>, allocator>*, int, AZStd::pair<float, float>&);" 
 143832980 "void AZStd::vector<AZStd::pair<float, float>, allocator>::push_back(AZStd::vector<AZStd::pair<float, float>, allocator>*, const AZStd::pair<float, float>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[391] C: "CategoricalProgressionSnapshot"
T: D66EC2E0-E968-4012-BFBD-EEDE5116E093, S: 40
 Ctor: 144421C70, Dtor: 144282BA0, Alloc: 1445EE500, Dealloc: 144663440, RTTI: 1461B1060
m_properties:
 1403F2E90 "int& CategoricalProgressionSnapshot::rank::Getter(CategoricalProgressionSnapshot*);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CategoricalProgressionSnapshot::displayName::Getter(CategoricalProgressionSnapshot*);" 
 140F82F50 "int& CategoricalProgressionSnapshot::points::Getter(CategoricalProgressionSnapshot*);" 
 1401E7820 "Crc32& CategoricalProgressionSnapshot::id::Getter(CategoricalProgressionSnapshot*);" 
 
[392] C: "TerritoryLogEntry"
T: 3B859019-C8E9-433E-A1D2-0C7D11D21616, S: 48
 Ctor: 144422AD0, Dtor: 143F13260, Alloc: 1445EECE0, Dealloc: 144218480, RTTI: 1461A4958
m_properties:
 140D42160 "int TerritoryLogEntry::logType::Getter(const TerritoryLogEntry*);" 
 140C99DE0 "void TerritoryLogEntry::logType::Setter(TerritoryLogEntry*, int);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& TerritoryLogEntry::line::Getter(TerritoryLogEntry*);" 
 141AAD7E0 "void TerritoryLogEntry::line::Setter(TerritoryLogEntry*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "WallClockTimePoint& TerritoryLogEntry::time::Getter(TerritoryLogEntry*);" 
 14453DCF0 "void TerritoryLogEntry::time::Setter(TerritoryLogEntry*, const WallClockTimePoint&);" 
 
[393] C: "MarketingTileData"
T: F1CADF5F-D313-4119-AA14-EEDD0B9E3277, S: F8
 Ctor: 1429F44B0, Dtor: 1429F4710, Alloc: 142A17980, Dealloc: 142A1EF10, RTTI: 0
m_properties:
 1429F6760 "bool& MarketingTileData::isDisplaying::Getter(MarketingTileData*);" 
 142A03580 "void MarketingTileData::isDisplaying::Setter(MarketingTileData*, const bool&);" 
 140C46640 "bool& MarketingTileData::isVideoLink::Getter(MarketingTileData*);" 
 142A03570 "void MarketingTileData::isVideoLink::Setter(MarketingTileData*, const bool&);" 
 1406417C0 "double& MarketingTileData::timeRemainingSeconds::Getter(MarketingTileData*);" 
 142A03560 "void MarketingTileData::timeRemainingSeconds::Setter(MarketingTileData*, const double&);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MarketingTileData::price::Getter(MarketingTileData*);" 
 142004F50 "void MarketingTileData::price::Setter(MarketingTileData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MarketingTileData::title::Getter(MarketingTileData*);" 
 1403188A0 "void MarketingTileData::title::Setter(MarketingTileData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MarketingTileData::description::Getter(MarketingTileData*);" 
 142004F30 "void MarketingTileData::description::Setter(MarketingTileData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406414E0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MarketingTileData::oldPrice::Getter(MarketingTileData*);" 
 141714830 "void MarketingTileData::oldPrice::Setter(MarketingTileData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F1550 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& MarketingTileData::urlToOpen::Getter(MarketingTileData*);" 
 1417146E0 "void MarketingTileData::urlToOpen::Setter(MarketingTileData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[394] C: "AZStd::vector<GovernanceEarningStatementData, allocator>"
T: 2C1126DF-8358-577E-89E7-9E63405EE298, S: 20
 Ctor: 1401DF120, Dtor: 144424F90, Alloc: 1445F0560, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693680 "void AZStd::vector<GovernanceEarningStatementData, allocator>::pop_back(AZStd::vector<GovernanceEarningStatementData, allocator>*);" 
 14069EE90 "void AZStd::vector<GovernanceEarningStatementData, allocator>::clear(AZStd::vector<GovernanceEarningStatementData, allocator>*);" 
 14019CC40 "int AZStd::vector<GovernanceEarningStatementData, allocator>::size(AZStd::vector<GovernanceEarningStatementData, allocator>*);" 
 14048F800 "GovernanceEarningStatementData& AZStd::vector<GovernanceEarningStatementData, allocator>::at(AZStd::vector<GovernanceEarningStatementData, allocator>*, AZ::u64);" 
 144666840 "void AZStd::vector<GovernanceEarningStatementData, allocator>::insert(AZStd::vector<GovernanceEarningStatementData, allocator>*, int, GovernanceEarningStatementData&);" 
 144693970 "void AZStd::vector<GovernanceEarningStatementData, allocator>::push_back(AZStd::vector<GovernanceEarningStatementData, allocator>*, const GovernanceEarningStatementData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[395] C: "AZStd::shared_ptr<Spline>"
T: E13859C4-1F24-5C44-A133-F17B4B050D7C, S: 10
 Ctor: 1401DF090, Dtor: 1404AE330, Alloc: 141BABC00, Dealloc: 141C5EBE0, RTTI: 0
m_constructors:
 141999A00 "void AZStd::shared_ptr<Spline>::Constructor(AZStd::shared_ptr<Spline>*, Spline*);" 
m_methods:
 14031C100 "Spline* AZStd::shared_ptr<Spline>::get(AZStd::shared_ptr<Spline>*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 ("bool" B2C7372D-7B99-50A2-B710-71649CECE315), VT: 145421B08, V: 0x1
 ("AZ::AttributeFunction<R(Args...)><void AZStd::shared_ptr<Spline>* ScriptDataContext& >" 8075DBE3-746D-5873-8789-EB24C7C6579B), VT: 1455D4E88, V: 0x7FF75405E090
 
[396] C: "TerritoryStatusEffect"
T: 4B3FA8F1-E843-4281-A429-C3AE43424979, S: 20
 Ctor: 144422D40, Dtor: 144424BC0, Alloc: 1445EEE90, Dealloc: 144218580, RTTI: 1461852A0
m_properties:
 1403F11A0 "WallClockTimePoint& TerritoryStatusEffect::endTimestamp::Getter(TerritoryStatusEffect*);" 
 14453DA80 "void TerritoryStatusEffect::endTimestamp::Setter(TerritoryStatusEffect*, const WallClockTimePoint&);" 
 1401E7820 "Crc32& TerritoryStatusEffect::effectId::Getter(TerritoryStatusEffect*);" 
 14028DC50 "void TerritoryStatusEffect::effectId::Setter(TerritoryStatusEffect*, const Crc32&);" 
 
[397] C: "GovernanceTaxData"
T: E4873830-3E47-49F2-9855-16ADDCE08DD8, S: 20
 Ctor: 1446F20D0, Dtor: 140190D00, Alloc: 144916B60, Dealloc: 144218580, RTTI: 146184EE0
m_methods:
 1446948A0 "GovernanceTaxData GovernanceTaxData::Clone(const GovernanceTaxData*);" 
m_properties:
 1417B81C0 "float& GovernanceTaxData::refiningFee::Getter(GovernanceTaxData*);" 
 1417BFEC0 "void GovernanceTaxData::refiningFee::Setter(GovernanceTaxData*, const float&);" 
 140782520 "float& GovernanceTaxData::houseFee::Getter(GovernanceTaxData*);" 
 1414D2A60 "void GovernanceTaxData::houseFee::Setter(GovernanceTaxData*, const float&);" 
 1403F11A0 "float& GovernanceTaxData::craftingFee::Getter(GovernanceTaxData*);" 
 1417BFEB0 "void GovernanceTaxData::craftingFee::Setter(GovernanceTaxData*, const float&);" 
 1401E7820 "bool& GovernanceTaxData::failedToPayUpkeep::Getter(GovernanceTaxData*);" 
 141AAD800 "void GovernanceTaxData::failedToPayUpkeep::Setter(GovernanceTaxData*, const bool&);" 
 1406413D0 "float& GovernanceTaxData::tradingFee::Getter(GovernanceTaxData*);" 
 1417BFED0 "void GovernanceTaxData::tradingFee::Setter(GovernanceTaxData*, const float&);" 
 
[398] C: "AZStd::vector<IngredientEntry, allocator>"
T: 269BAF81-067B-587C-B218-BCED533D8756, S: 20
 Ctor: 1401DF120, Dtor: 143F13870, Alloc: 144919970, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1442513D0 "void AZStd::vector<IngredientEntry, allocator>::pop_back(AZStd::vector<IngredientEntry, allocator>*);" 
 14069EE90 "void AZStd::vector<IngredientEntry, allocator>::clear(AZStd::vector<IngredientEntry, allocator>*);" 
 14045A450 "int AZStd::vector<IngredientEntry, allocator>::size(AZStd::vector<IngredientEntry, allocator>*);" 
 14031C0D0 "IngredientEntry& AZStd::vector<IngredientEntry, allocator>::at(AZStd::vector<IngredientEntry, allocator>*, AZ::u64);" 
 1449A63C0 "void AZStd::vector<IngredientEntry, allocator>::insert(AZStd::vector<IngredientEntry, allocator>*, int, IngredientEntry&);" 
 1449DB900 "void AZStd::vector<IngredientEntry, allocator>::push_back(AZStd::vector<IngredientEntry, allocator>*, const IngredientEntry&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[399] C: "AZStd::vector<TerritoryStatusEffect, allocator>"
T: 2D96967A-5CD7-50DB-B013-9CD11B5C6C9C, S: 20
 Ctor: 1401DF120, Dtor: 144424F60, Alloc: 1445F0A30, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693650 "void AZStd::vector<TerritoryStatusEffect, allocator>::pop_back(AZStd::vector<TerritoryStatusEffect, allocator>*);" 
 14069EE90 "void AZStd::vector<TerritoryStatusEffect, allocator>::clear(AZStd::vector<TerritoryStatusEffect, allocator>*);" 
 141946F60 "int AZStd::vector<TerritoryStatusEffect, allocator>::size(AZStd::vector<TerritoryStatusEffect, allocator>*);" 
 141D47110 "TerritoryStatusEffect& AZStd::vector<TerritoryStatusEffect, allocator>::at(AZStd::vector<TerritoryStatusEffect, allocator>*, AZ::u64);" 
 144667250 "void AZStd::vector<TerritoryStatusEffect, allocator>::insert(AZStd::vector<TerritoryStatusEffect, allocator>*, int, TerritoryStatusEffect&);" 
 144693E50 "void AZStd::vector<TerritoryStatusEffect, allocator>::push_back(AZStd::vector<TerritoryStatusEffect, allocator>*, const TerritoryStatusEffect&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[400] C: "StaticFactionControlData"
T: CC311863-840A-4BE9-9EB2-102AA0F631B4, S: 60
 Ctor: 1444225D0, Dtor: 144424E20, Alloc: 1445EFC30, Dealloc: 141835120, RTTI: 0
m_properties:
 1401E7820 "bool& StaticFactionControlData::isTerritoryBuff::Getter(StaticFactionControlData*);" 
 141AAD800 "void StaticFactionControlData::isTerritoryBuff::Setter(StaticFactionControlData*, const bool&);" 
 142F4BA10 "int StaticFactionControlData::id::Getter(const StaticFactionControlData*);" 
 1443D0DB0 "void StaticFactionControlData::id::Setter(StaticFactionControlData*, int);" 
 1403F11A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticFactionControlData::name::Getter(StaticFactionControlData*);" 
 1439CD010 "void StaticFactionControlData::name::Setter(StaticFactionControlData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticFactionControlData::description::Getter(StaticFactionControlData*);" 
 143EB82E0 "void StaticFactionControlData::description::Setter(StaticFactionControlData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140916660 "float& StaticFactionControlData::buffValue::Getter(StaticFactionControlData*);" 
 1414D2A50 "void StaticFactionControlData::buffValue::Setter(StaticFactionControlData*, const float&);" 
 
[401] C: "CapturePointState"
T: D35AD693-A587-4FA4-928F-679B09A15197, S: 50
 Ctor: 144422F30, Dtor: 140190D00, Alloc: 1445F0E50, Dealloc: 141C5E9E0, RTTI: 1461B1068
m_properties:
 14081F180 "unsigned long CapturePointState::stateFlags::Getter(CapturePointState*);" 
 1403F11A0 "Vector3& CapturePointState::worldPos::Getter(CapturePointState*);" 
 140454D90 "void CapturePointState::worldPos::Setter(CapturePointState*, const Vector3&);" 
 140780AF0 "float& CapturePointState::fillPct::Getter(CapturePointState*);" 
 1417BFF10 "void CapturePointState::fillPct::Setter(CapturePointState*, const float&);" 
 1408199F0 "int CapturePointState::fortSpawnId::Getter(const CapturePointState*);" 
 14081A4E0 "void CapturePointState::fortSpawnId::Setter(CapturePointState*, int);" 
 
[402] C: "FortMajorStructureState"
T: 2F3DE3DD-4F07-4BBC-A517-4352F38C7328, S: 30
 Ctor: 144423120, Dtor: 140190D00, Alloc: 1445F0EE0, Dealloc: 144664540, RTTI: 1461B1070
m_methods:
 143462340 "float FortMajorStructureState::GetHealthPct(FortMajorStructureState*);" 
 143462330 "int FortMajorStructureState::GetBuildableState(FortMajorStructureState*);" 
m_properties:
 1408199F0 "int FortMajorStructureState::fortSpawnId::Getter(const FortMajorStructureState*);" 
 14081A4E0 "void FortMajorStructureState::fortSpawnId::Setter(FortMajorStructureState*, int);" 
 1403F11A0 "Vector3& FortMajorStructureState::worldPos::Getter(FortMajorStructureState*);" 
 140454D90 "void FortMajorStructureState::worldPos::Setter(FortMajorStructureState*, const Vector3&);" 
 
[403] C: "CameraEffectsComponent"
T: F5D25571-6CC1-4C35-8EFA-1714EB6D86E4, S: A0
 Ctor: 1425C4D90, Dtor: 1401DF450, Alloc: 1425D10E0, Dealloc: 1425D5180, RTTI: 146188B18
m_requestBuses:
 "JavelinCameraRequestBus"
 
[404] C: "UiProgressionPointData"
T: DF9B5DAE-4A93-4216-B9E4-88118079453D, S: C
 Ctor: 144422D80, Dtor: 140190D00, Alloc: 1445F00B0, Dealloc: 1406E7BF0, RTTI: 0
m_properties:
 1401AD7A0 "Crc32& UiProgressionPointData::id::Getter(UiProgressionPointData*);" 
 1401DF3E0 "void UiProgressionPointData::id::Setter(UiProgressionPointData*, const Crc32&);" 
 140916660 "float& UiProgressionPointData::upgradeValue::Getter(UiProgressionPointData*);" 
 1414D2A50 "void UiProgressionPointData::upgradeValue::Setter(UiProgressionPointData*, const float&);" 
 1401E7820 "bool& UiProgressionPointData::canUpgrade::Getter(UiProgressionPointData*);" 
 141AAD800 "void UiProgressionPointData::canUpgrade::Setter(UiProgressionPointData*, const bool&);" 
 
[405] C: "HousingItemClientData"
T: 9817BAC7-25A9-45E3-A1E6-631D7D5174AA, S: 60
 Ctor: 144423130, Dtor: 144425390, Alloc: 1445EF040, Dealloc: 141C5E1E0, RTTI: 1461B1080
m_properties:
 1403F2E80 "Crc32& HousingItemClientData::itemId::Getter(HousingItemClientData*);" 
 141AAD8B0 "void HousingItemClientData::itemId::Setter(HousingItemClientData*, const Crc32&);" 
 1403F11B0 "Quaternion& HousingItemClientData::rotation::Getter(HousingItemClientData*);" 
 140454DA0 "void HousingItemClientData::rotation::Setter(HousingItemClientData*, const Quaternion&);" 
 1443D0FF0 "EntityId HousingItemClientData::entityId::Getter(HousingItemClientData*);" 
 1403F11A0 "Vector3& HousingItemClientData::position::Getter(HousingItemClientData*);" 
 140454D90 "void HousingItemClientData::position::Setter(HousingItemClientData*, const Vector3&);" 
 
[406] C: "UiValuePair"
T: 5EA9C57A-6E2F-48F0-B7FB-CD1B7DB424D3, S: 30
 Ctor: 1446F28A0, Dtor: 1401DF410, Alloc: 144918A90, Dealloc: 141665EF0, RTTI: 0
m_properties:
 140780AF0 "float& UiValuePair::amount::Getter(UiValuePair*);" 
 1417BFF10 "void UiValuePair::amount::Setter(UiValuePair*, const float&);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiValuePair::name::Getter(UiValuePair*);" 
 1403188A0 "void UiValuePair::name::Setter(UiValuePair*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[407] C: "AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, allocator>"
T: F1662FC3-5E11-5165-B66A-D7DF4BAA6737, S: 20
 Ctor: 1401DF120, Dtor: 1446F4570, Alloc: 1449198C0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAFA0 "void AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, allocator>::pop_back(AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, al);" 
 1449D7790 "void AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, allocator>::clear(AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, al);" 
 141946F60 "int AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, allocator>::size(AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, al);" 
 141D47110 "AZStd::vector<PeriodicRewardsData, allocator>& AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, allocator>::at(AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, al, AZ::u64);" 
 1449A62E0 "void AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, allocator>::insert(AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, al, int, AZStd::vector<PeriodicRewardsData, allocator>&);" 
 1449DB840 "void AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, allocator>::push_back(AZStd::vector<AZStd::vector<PeriodicRewardsData, allocator>, al, const AZStd::vector<PeriodicRewardsData, allocator>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[408] C: "AZStd::vector<UiProgressionPointData, allocator>"
T: 7D3B16C5-3C5F-5AB4-AA00-DE70DF368C25, S: 20
 Ctor: 1401DF120, Dtor: 144425190, Alloc: 1445F0AE0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1446937C0 "void AZStd::vector<UiProgressionPointData, allocator>::pop_back(AZStd::vector<UiProgressionPointData, allocator>*);" 
 14069EE90 "void AZStd::vector<UiProgressionPointData, allocator>::clear(AZStd::vector<UiProgressionPointData, allocator>*);" 
 1443D0F60 "int AZStd::vector<UiProgressionPointData, allocator>::size(AZStd::vector<UiProgressionPointData, allocator>*);" 
 144690F60 "UiProgressionPointData& AZStd::vector<UiProgressionPointData, allocator>::at(AZStd::vector<UiProgressionPointData, allocator>*, AZ::u64);" 
 144667350 "void AZStd::vector<UiProgressionPointData, allocator>::insert(AZStd::vector<UiProgressionPointData, allocator>*, int, UiProgressionPointData&);" 
 144693EC0 "void AZStd::vector<UiProgressionPointData, allocator>::push_back(AZStd::vector<UiProgressionPointData, allocator>*, const UiProgressionPointData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[409] C: "MathUtils"
T: BB7F7465-B355-4435-BB9D-44D8F586EE8B, S: 1
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 141BAB040, Dealloc: 141C5E360, RTTI: 0
m_methods:
 1406235F0 "Transform MathUtils::ConvertEulerDegreesToTransformPrecise(const Vector3&);" 
 140623160 "Transform MathUtils::ConvertEulerDegreesToTransform(const Vector3&);" 
 14062EEA0 "Transform MathUtils::CreateLookAt(const Vector3&, const Vector3&, unsigned int);" 
 140624080 "Vector3 MathUtils::ConvertTransformToEulerDegrees(const Transform&);" 
 140623C10 "Vector3 MathUtils::ConvertQuaternionToEulerDegrees(const Quaternion&);" 
 140623130 "Quaternion MathUtils::ConvertEulerDegreesToQuaternion(const Vector3&);" 
 1406240C0 "Vector3 MathUtils::ConvertTransformToEulerRadians(const Transform&);" 
 140623CD0 "Vector3 MathUtils::ConvertQuaternionToEulerRadians(const Quaternion&);" 
 140623620 "Quaternion MathUtils::ConvertEulerRadiansToQuaternion(const Vector3&);" 
 
[410] C: "AZStd::vector<StaticProgressionPointData, allocator>"
T: E73039B3-A10A-53E8-B9BD-C756E09E7B5E, S: 20
 Ctor: 1401DF120, Dtor: 144425060, Alloc: 1445F0770, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693730 "void AZStd::vector<StaticProgressionPointData, allocator>::pop_back(AZStd::vector<StaticProgressionPointData, allocator>*);" 
 144690FE0 "void AZStd::vector<StaticProgressionPointData, allocator>::clear(AZStd::vector<StaticProgressionPointData, allocator>*);" 
 1443D0E70 "int AZStd::vector<StaticProgressionPointData, allocator>::size(AZStd::vector<StaticProgressionPointData, allocator>*);" 
 144690F50 "StaticProgressionPointData& AZStd::vector<StaticProgressionPointData, allocator>::at(AZStd::vector<StaticProgressionPointData, allocator>*, AZ::u64);" 
 144666BA0 "void AZStd::vector<StaticProgressionPointData, allocator>::insert(AZStd::vector<StaticProgressionPointData, allocator>*, int, StaticProgressionPointData&);" 
 144693AB0 "void AZStd::vector<StaticProgressionPointData, allocator>::push_back(AZStd::vector<StaticProgressionPointData, allocator>*, const StaticProgressionPointData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[411] C: "AZStd::vector<ClusterDisplayMetadata, allocator>"
T: A4156385-BD2D-5B49-B7F7-A636FF65C20D, S: 20
 Ctor: 1401DF120, Dtor: 1446F4460, Alloc: 144918FD0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DADA0 "void AZStd::vector<ClusterDisplayMetadata, allocator>::pop_back(AZStd::vector<ClusterDisplayMetadata, allocator>*);" 
 143894B90 "void AZStd::vector<ClusterDisplayMetadata, allocator>::clear(AZStd::vector<ClusterDisplayMetadata, allocator>*);" 
 143EB84F0 "int AZStd::vector<ClusterDisplayMetadata, allocator>::size(AZStd::vector<ClusterDisplayMetadata, allocator>*);" 
 14424FE30 "ClusterDisplayMetadata& AZStd::vector<ClusterDisplayMetadata, allocator>::at(AZStd::vector<ClusterDisplayMetadata, allocator>*, AZ::u64);" 
 1449A5130 "void AZStd::vector<ClusterDisplayMetadata, allocator>::insert(AZStd::vector<ClusterDisplayMetadata, allocator>*, int, ClusterDisplayMetadata&);" 
 143896DA0 "void AZStd::vector<ClusterDisplayMetadata, allocator>::push_back(AZStd::vector<ClusterDisplayMetadata, allocator>*, const ClusterDisplayMetadata&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[412] C: "UiGatherableAmount"
T: D43EDBD7-97A2-4B74-AFFC-34A81E095302, S: 10
 Ctor: 140190D00, Dtor: 140190D00, Alloc: 144918730, Dealloc: 141665DF0, RTTI: 0
m_properties:
 1401E7820 "float& UiGatherableAmount::timeRemainingAtStart::Getter(UiGatherableAmount*);" 
 14028DC50 "void UiGatherableAmount::timeRemainingAtStart::Setter(UiGatherableAmount*, const float&);" 
 1401AD7A0 "float& UiGatherableAmount::amount::Getter(UiGatherableAmount*);" 
 1401DF3E0 "void UiGatherableAmount::amount::Setter(UiGatherableAmount*, const float&);" 
 140916660 "float& UiGatherableAmount::timeRemaining::Getter(UiGatherableAmount*);" 
 1414D2A50 "void UiGatherableAmount::timeRemaining::Setter(UiGatherableAmount*, const float&);" 
 140782520 "float& UiGatherableAmount::totalTime::Getter(UiGatherableAmount*);" 
 1414D2A60 "void UiGatherableAmount::totalTime::Setter(UiGatherableAmount*, const float&);" 
 
[413] C: "ReplicatedOwnedHouseData"
T: CA00FC6D-8593-431B-B4BA-3F235F1BDFC1, S: F0
 Ctor: 144423340, Dtor: 1444253B0, Alloc: 1445EF280, Dealloc: 144218600, RTTI: 146195BB8
m_methods:
 144668340 "bool ReplicatedOwnedHouseData::IsHubAvailable(ReplicatedOwnedHouseData*);" 
m_properties:
 1405842F0 "Vector3& ReplicatedOwnedHouseData::housingPlotPos::Getter(ReplicatedOwnedHouseData*);" 
 1409E30F0 "void ReplicatedOwnedHouseData::housingPlotPos::Setter(ReplicatedOwnedHouseData*, const Vector3&);" 
 141C8A130 "AZStd::vector<Crc32, allocator>& ReplicatedOwnedHouseData::housingBuffItems::Getter(ReplicatedOwnedHouseData*);" 
 14453DE60 "void ReplicatedOwnedHouseData::housingBuffItems::Setter(ReplicatedOwnedHouseData*, const AZStd::vector<Crc32, allocator>&);" 
 141692540 "WallClockTimePoint& ReplicatedOwnedHouseData::taxesDue::Getter(ReplicatedOwnedHouseData*);" 
 14453DE00 "void ReplicatedOwnedHouseData::taxesDue::Setter(ReplicatedOwnedHouseData*, const WallClockTimePoint&);" 
 1403F1550 "unsigned short& ReplicatedOwnedHouseData::territoryId::Getter(ReplicatedOwnedHouseData*);" 
 14453DE40 "void ReplicatedOwnedHouseData::territoryId::Setter(ReplicatedOwnedHouseData*, const unsigned short&);" 
 
[414] C: "AZStd::vector<HousingItemClientData, allocator>"
T: 82B5FCA3-E44C-53C0-8718-71619041D683, S: 20
 Ctor: 1401DF120, Dtor: 144425220, Alloc: 1445F0C40, Dealloc: 1406305C0, RTTI: 0
m_methods:
 144693850 "void AZStd::vector<HousingItemClientData, allocator>::pop_back(AZStd::vector<HousingItemClientData, allocator>*);" 
 144691120 "void AZStd::vector<HousingItemClientData, allocator>::clear(AZStd::vector<HousingItemClientData, allocator>*);" 
 142F4B9E0 "int AZStd::vector<HousingItemClientData, allocator>::size(AZStd::vector<HousingItemClientData, allocator>*);" 
 142FA6150 "HousingItemClientData& AZStd::vector<HousingItemClientData, allocator>::at(AZStd::vector<HousingItemClientData, allocator>*, AZ::u64);" 
 144667500 "void AZStd::vector<HousingItemClientData, allocator>::insert(AZStd::vector<HousingItemClientData, allocator>*, int, HousingItemClientData&);" 
 144693FC0 "void AZStd::vector<HousingItemClientData, allocator>::push_back(AZStd::vector<HousingItemClientData, allocator>*, const HousingItemClientData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[415] C: "AZStd::vector<HotspotUnlocksPerLevel, allocator>"
T: 05DD86E0-C531-59DC-AB18-4DE86C48B4DA, S: 20
 Ctor: 1401DF120, Dtor: 144425020, Alloc: 1445F06C0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1446936C0 "void AZStd::vector<HotspotUnlocksPerLevel, allocator>::pop_back(AZStd::vector<HotspotUnlocksPerLevel, allocator>*);" 
 144690FB0 "void AZStd::vector<HotspotUnlocksPerLevel, allocator>::clear(AZStd::vector<HotspotUnlocksPerLevel, allocator>*);" 
 1443D0EC0 "int AZStd::vector<HotspotUnlocksPerLevel, allocator>::size(AZStd::vector<HotspotUnlocksPerLevel, allocator>*);" 
 144690F40 "HotspotUnlocksPerLevel& AZStd::vector<HotspotUnlocksPerLevel, allocator>::at(AZStd::vector<HotspotUnlocksPerLevel, allocator>*, AZ::u64);" 
 144666AB0 "void AZStd::vector<HotspotUnlocksPerLevel, allocator>::insert(AZStd::vector<HotspotUnlocksPerLevel, allocator>*, int, HotspotUnlocksPerLevel&);" 
 144693A30 "void AZStd::vector<HotspotUnlocksPerLevel, allocator>::push_back(AZStd::vector<HotspotUnlocksPerLevel, allocator>*, const HotspotUnlocksPerLevel&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[416] C: "GlobalMapData"
T: 0DC02DD0-993E-48C0-8B60-5715D4383B0D, S: 18
 Ctor: 144422100, Dtor: 140190D00, Alloc: 1445EE860, Dealloc: 144663540, RTTI: 146197AE8
m_properties:
 1401E7820 "Vector2& GlobalMapData::worldPosition::Getter(GlobalMapData*);" 
 1440B4C70 "void GlobalMapData::worldPosition::Setter(GlobalMapData*, const Vector2&);" 
 1403F11A0 "unsigned short& GlobalMapData::territoryId::Getter(GlobalMapData*);" 
 14453DA90 "void GlobalMapData::territoryId::Setter(GlobalMapData*, const unsigned short&);" 
 1417B81C0 "unsigned int& GlobalMapData::spawnerTag::Getter(GlobalMapData*);" 
 1417BFEC0 "void GlobalMapData::spawnerTag::Setter(GlobalMapData*, const unsigned int&);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[417] C: "MutationDifficultyStaticData"
T: 873131C7-0D34-46E3-A0DD-CC703C6C8A3F, S: 228
 Ctor: 144422290, Dtor: 144424D80, Alloc: 1445EF9F0, Dealloc: 144663F40, RTTI: 0
m_methods:
 1443D0F10 "MutationDifficultyStaticData MutationDifficultyStaticData::Clone(const MutationDifficultyStaticData*);" 
 1443D0EA0 "Crc32 MutationDifficultyStaticData::GetCompletionEvent(const MutationDifficultyStaticData*, int);" 
m_properties:
 140D4BF00 "unsigned short& MutationDifficultyStaticData::recommendedGearScore::Getter(MutationDifficultyStaticData*);" 
 14453DCC0 "void MutationDifficultyStaticData::recommendedGearScore::Setter(MutationDifficultyStaticData*, const unsigned short&);" 
 140968820 "AZStd::vector<Crc32, allocator>& MutationDifficultyStaticData::injectedContainerLootTableIds::Getter(MutationDifficultyStaticData*);" 
 14453DCA0 "void MutationDifficultyStaticData::injectedContainerLootTableIds::Setter(MutationDifficultyStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 141681D30 "AZStd::vector<Crc32, allocator>& MutationDifficultyStaticData::injectedAILootTableIds::Getter(MutationDifficultyStaticData*);" 
 14453DC30 "void MutationDifficultyStaticData::injectedAILootTableIds::Setter(MutationDifficultyStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 1403F11B0 "unsigned char& MutationDifficultyStaticData::difficultyTier::Getter(MutationDifficultyStaticData*);" 
 141AAD870 "void MutationDifficultyStaticData::difficultyTier::Setter(MutationDifficultyStaticData*, const unsigned char&);" 
 143FBB8F0 "bool& MutationDifficultyStaticData::hasMajorCurse::Getter(MutationDifficultyStaticData*);" 
 1440B4DF0 "void MutationDifficultyStaticData::hasMajorCurse::Setter(MutationDifficultyStaticData*, const bool&);" 
 143B72ED0 "AZStd::vector<Crc32, allocator>& MutationDifficultyStaticData::possibleItemDropIds::Getter(MutationDifficultyStaticData*);" 
 14453DBB0 "void MutationDifficultyStaticData::possibleItemDropIds::Setter(MutationDifficultyStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 142AA8F50 "AZStd::vector<Crc32, allocator>& MutationDifficultyStaticData::lootTags::Getter(MutationDifficultyStaticData*);" 
 14453DC00 "void MutationDifficultyStaticData::lootTags::Setter(MutationDifficultyStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 140C498D0 "bool& MutationDifficultyStaticData::hasMinorCurse::Getter(MutationDifficultyStaticData*);" 
 1440B4DE0 "void MutationDifficultyStaticData::hasMinorCurse::Setter(MutationDifficultyStaticData*, const bool&);" 
 
[418] C: "CurseMutationStaticData"
T: 147F4FD4-D8A7-48D1-B6D4-ED59AE24CC2F, S: 100
 Ctor: 144421E30, Dtor: 144424C30, Alloc: 1445EF600, Dealloc: 142A1F010, RTTI: 0
m_methods:
 1443D0EF0 "CurseMutationStaticData CurseMutationStaticData::Clone(const CurseMutationStaticData*);" 
m_properties:
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CurseMutationStaticData::curseMajor::Getter(CurseMutationStaticData*);" 
 141716790 "void CurseMutationStaticData::curseMajor::Setter(CurseMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CurseMutationStaticData::curseMinor::Getter(CurseMutationStaticData*);" 
 142F33410 "void CurseMutationStaticData::curseMinor::Setter(CurseMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CurseMutationStaticData::name::Getter(CurseMutationStaticData*);" 
 141AAD9C0 "void CurseMutationStaticData::name::Setter(CurseMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F3C00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CurseMutationStaticData::description::Getter(CurseMutationStaticData*);" 
 1440B5040 "void CurseMutationStaticData::description::Setter(CurseMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1423B46B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& CurseMutationStaticData::iconPath::Getter(CurseMutationStaticData*);" 
 14453DED0 "void CurseMutationStaticData::iconPath::Setter(CurseMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[419] C: "SimpleMarkerComponent"
T: 393CDA3F-7A95-438A-B7F5-3230ABB36C8A, S: 368
 Ctor: 143E45B60, Dtor: 1401DF450, Alloc: 143E491A0, Dealloc: 143E49BA0, RTTI: 1461B0908
m_methods:
 14031EC34 "void SimpleMarkerComponent::OnSocialDataChanged(SimpleMarkerComponent*);" 
 14031EC24 "void SimpleMarkerComponent::Initialize(SimpleMarkerComponent*, EntityId);" 
 14031EC2C "void SimpleMarkerComponent::Uninitialize(SimpleMarkerComponent*);" 
 
[420] C: "PromotionMutationStaticData"
T: BFD5E67E-B0A1-45BA-8EAD-55F821E2572F, S: 160
 Ctor: 1444222C0, Dtor: 144424D90, Alloc: 1445EFA80, Dealloc: 1406E7EF0, RTTI: 0
m_methods:
 1443D0E10 "PromotionMutationStaticData PromotionMutationStaticData::Clone(const PromotionMutationStaticData*);" 
m_properties:
 1403FB4D0 "Vector3& PromotionMutationStaticData::backgroundColor::Getter(PromotionMutationStaticData*);" 
 14453DB70 "void PromotionMutationStaticData::backgroundColor::Setter(PromotionMutationStaticData*, const Vector3&);" 
 140641920 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PromotionMutationStaticData::description::Getter(PromotionMutationStaticData*);" 
 1417123C0 "void PromotionMutationStaticData::description::Setter(PromotionMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1401E7830 "Vector3& PromotionMutationStaticData::textColor::Getter(PromotionMutationStaticData*);" 
 14453DB40 "void PromotionMutationStaticData::textColor::Setter(PromotionMutationStaticData*, const Vector3&);" 
 140400B50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PromotionMutationStaticData::name::Getter(PromotionMutationStaticData*);" 
 14171C3C0 "void PromotionMutationStaticData::name::Setter(PromotionMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11B0 "AZStd::unordered_map<Crc32, Crc32, AZStd::hash<Crc32>, AZStd::e PromotionMutationStaticData::promotionStatusEffects::Getter(PromotionMutationStaticData*);" 
 14453DD10 "void PromotionMutationStaticData::promotionStatusEffects::Setter(PromotionMutationStaticData*, const AZStd::unordered_map<Crc32, Crc32, AZStd::hash<Crc32>, AZ);" 
 1403F1560 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& PromotionMutationStaticData::iconPath::Getter(PromotionMutationStaticData*);" 
 14171D170 "void PromotionMutationStaticData::iconPath::Setter(PromotionMutationStaticData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[421] C: "SandOptions"
T: D30AD67A-F087-4190-9970-B16DEBD55FA4, S: 38
 Ctor: 14179BC00, Dtor: 14179BF60, Alloc: 1418069A0, Dealloc: 1406306C0, RTTI: 0
m_properties:
 1401E7820 "float& SandOptions::SnowAmount::Getter(SandOptions*);" 
 14028DC50 "void SandOptions::SnowAmount::Setter(SandOptions*, const float&);" 
 140916660 "float& SandOptions::Radius::Getter(SandOptions*);" 
 1414D2A50 "void SandOptions::Radius::Setter(SandOptions*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[422] C: "ElementalMutationPerksStaticData"
T: F219F73E-AEFA-4840-AF84-7EA1FB23B26E, S: F8
 Ctor: 144421F00, Dtor: 144424C40, Alloc: 1445EF690, Dealloc: 142A1EF10, RTTI: 0
m_methods:
 1443D0ED0 "ElementalMutationPerksStaticData ElementalMutationPerksStaticData::Clone(const ElementalMutationPerksStaticData*);" 
m_properties:
 140C46640 "AZStd::vector<Crc32, allocator>& ElementalMutationPerksStaticData::injectedContainerLootTableIds::Getter(ElementalMutationPerksStaticData*);" 
 14453DEC0 "void ElementalMutationPerksStaticData::injectedContainerLootTableIds::Setter(ElementalMutationPerksStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 1406414D0 "AZStd::vector<Crc32, allocator>& ElementalMutationPerksStaticData::possibleItemPerks::Getter(ElementalMutationPerksStaticData*);" 
 14453DDA0 "void ElementalMutationPerksStaticData::possibleItemPerks::Setter(ElementalMutationPerksStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 140584310 "AZStd::vector<Crc32, allocator>& ElementalMutationPerksStaticData::lootTags::Getter(ElementalMutationPerksStaticData*);" 
 14453DE20 "void ElementalMutationPerksStaticData::lootTags::Setter(ElementalMutationPerksStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 141C8A130 "AZStd::vector<Crc32, allocator>& ElementalMutationPerksStaticData::injectedAILootTableIds::Getter(ElementalMutationPerksStaticData*);" 
 14453DE60 "void ElementalMutationPerksStaticData::injectedAILootTableIds::Setter(ElementalMutationPerksStaticData*, const AZStd::vector<Crc32, allocator>&);" 
 
[423] C: "GameModeMutationSet"
T: FB31F943-5445-4FA6-8B05-413BC858EDEF, S: 18
 Ctor: 144422060, Dtor: 140190D00, Alloc: 1445EE7D0, Dealloc: 144663540, RTTI: 1461937B0
m_methods:
 1443D0FA0 "GameModeMutationSet GameModeMutationSet::Clone(const GameModeMutationSet*);" 
m_properties:
 1401E7820 "Crc32& GameModeMutationSet::elementalId::Getter(GameModeMutationSet*);" 
 14028DC50 "void GameModeMutationSet::elementalId::Setter(GameModeMutationSet*, const Crc32&);" 
 140782520 "Crc32& GameModeMutationSet::promotionId::Getter(GameModeMutationSet*);" 
 1414D2A60 "void GameModeMutationSet::promotionId::Setter(GameModeMutationSet*, const Crc32&);" 
 1403F11A0 "Crc32& GameModeMutationSet::curseId::Getter(GameModeMutationSet*);" 
 1417BFEB0 "void GameModeMutationSet::curseId::Setter(GameModeMutationSet*, const Crc32&);" 
 
[424] C: "AZStd::pair<float, float>"
T: C40058B6-8155-5348-96CC-8AF7670F1B4B, S: 8
 Ctor: 1404873E0, Dtor: 140190D00, Alloc: 14381E6A0, Dealloc: 141C5EAE0, RTTI: 0
m_properties:
 140403460 "float AZStd::pair<float, float>::first::Getter(AZStd::pair<float, float>*);" 
 1401DF3E0 "void AZStd::pair<float, float>::first::Setter(AZStd::pair<float, float>*, const float&);" 
 140403470 "float AZStd::pair<float, float>::second::Getter(AZStd::pair<float, float>*);" 
 1414D2A50 "void AZStd::pair<float, float>::second::Setter(AZStd::pair<float, float>*, const float&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[425] C: "AZStd::unordered_map<Crc32, GameModeMutationSet, AZStd::hash<Crc32>, AZStd::equal_to<Crc32>, allocator>"
T: C12B65BD-B90E-5D12-9DB3-9D5D6D53007E, S: 90
 Ctor: 144422D90, Dtor: 14030D380, Alloc: 1445F01F0, Dealloc: 144219100, RTTI: 0
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[426] C: "ParticleEmitterSettings"
T: A1E34557-30DB-4716-B4CE-39D52A113D0C, S: D0
 Ctor: 1419A7F60, Dtor: 1419A8880, Alloc: 141BABE80, Dealloc: 141C5ECE0, RTTI: 0
m_properties:
 141A5CF00 "bool& ParticleEmitterSettings::RenderAlways::Getter(ParticleEmitterSettings*);" 
 141AADA30 "void ParticleEmitterSettings::RenderAlways::Setter(ParticleEmitterSettings*, const bool&);" 
 140400B50 "bool& ParticleEmitterSettings::UseVisAreas::Getter(ParticleEmitterSettings*);" 
 141AAD9F0 "void ParticleEmitterSettings::UseVisAreas::Setter(ParticleEmitterSettings*, const bool&);" 
 141A5CF00 "bool& ParticleEmitterSettings::KillWhenEntityDeactivated::Getter(ParticleEmitterSettings*);" 
 141AADA30 "void ParticleEmitterSettings::KillWhenEntityDeactivated::Setter(ParticleEmitterSettings*, const bool&);" 
 140E5B6D0 "float& ParticleEmitterSettings::ViewDistMultiplier::Getter(ParticleEmitterSettings*);" 
 141AAD9E0 "void ParticleEmitterSettings::ViewDistMultiplier::Setter(ParticleEmitterSettings*, const float&);" 
 141692540 "bool& ParticleEmitterSettings::EnableAudio::Getter(ParticleEmitterSettings*);" 
 141AAD9A0 "void ParticleEmitterSettings::EnableAudio::Setter(ParticleEmitterSettings*, const bool&);" 
 1411D8420 "float& ParticleEmitterSettings::ParticleSizeScaleX::Getter(ParticleEmitterSettings*);" 
 141AAD920 "void ParticleEmitterSettings::ParticleSizeScaleX::Setter(ParticleEmitterSettings*, const float&);" 
 140D88940 "float& ParticleEmitterSettings::PulsePeriod::Getter(ParticleEmitterSettings*);" 
 141AAD910 "void ParticleEmitterSettings::PulsePeriod::Setter(ParticleEmitterSettings*, const float&);" 
 1406414D0 "float& ParticleEmitterSettings::ParticleSizeScaleY::Getter(ParticleEmitterSettings*);" 
 141AAD930 "void ParticleEmitterSettings::ParticleSizeScaleY::Setter(ParticleEmitterSettings*, const float&);" 
 140AFDBE0 "float& ParticleEmitterSettings::LifetimeStrength::Getter(ParticleEmitterSettings*);" 
 141AAD960 "void ParticleEmitterSettings::LifetimeStrength::Setter(ParticleEmitterSettings*, const float&);" 
 141A5CEF0 "bool& ParticleEmitterSettings::AcceptSilhouette::Getter(ParticleEmitterSettings*);" 
 141AADA20 "void ParticleEmitterSettings::AcceptSilhouette::Setter(ParticleEmitterSettings*, const bool&);" 
 141A5CE90 "bool& ParticleEmitterSettings::NotAttached::Getter(ParticleEmitterSettings*);" 
 141AAD970 "void ParticleEmitterSettings::NotAttached::Setter(ParticleEmitterSettings*, const bool&);" 
 141A5CE70 "float& ParticleEmitterSettings::SpeedScale::Getter(ParticleEmitterSettings*);" 
 141AAD900 "void ParticleEmitterSettings::SpeedScale::Setter(ParticleEmitterSettings*, const float&);" 
 1403F2E90 "bool& ParticleEmitterSettings::Preroll::Getter(ParticleEmitterSettings*);" 
 141AAD8A0 "void ParticleEmitterSettings::Preroll::Setter(ParticleEmitterSettings*, const bool&);" 
 1403F2E80 "Color& ParticleEmitterSettings::ColorTint::Getter(ParticleEmitterSettings*);" 
 14171BD90 "void ParticleEmitterSettings::ColorTint::Setter(ParticleEmitterSettings*, const Color&);" 
 140584300 "bool& ParticleEmitterSettings::IgnoreRotation::Getter(ParticleEmitterSettings*);" 
 1405A4D30 "void ParticleEmitterSettings::IgnoreRotation::Setter(ParticleEmitterSettings*, const bool&);" 
 141A5CEB0 "bool& ParticleEmitterSettings::UseLOD::Getter(ParticleEmitterSettings*);" 
 141AAD990 "void ParticleEmitterSettings::UseLOD::Setter(ParticleEmitterSettings*, const bool&);" 
 1403F11B0 "EntityId& ParticleEmitterSettings::TargetEntity::Getter(ParticleEmitterSettings*);" 
 141AAD880 "void ParticleEmitterSettings::TargetEntity::Setter(ParticleEmitterSettings*, const EntityId&);" 
 141A5CED0 "bool& ParticleEmitterSettings::AcceptDecals::Getter(ParticleEmitterSettings*);" 
 141AADA00 "void ParticleEmitterSettings::AcceptDecals::Setter(ParticleEmitterSettings*, const bool&);" 
 1403F11C0 "float& ParticleEmitterSettings::AlphaScale::Getter(ParticleEmitterSettings*);" 
 141AAD8D0 "void ParticleEmitterSettings::AlphaScale::Setter(ParticleEmitterSettings*, const float&);" 
 14096B150 "float& ParticleEmitterSettings::TimeScale::Getter(ParticleEmitterSettings*);" 
 141AAD8F0 "void ParticleEmitterSettings::TimeScale::Setter(ParticleEmitterSettings*, const float&);" 
 141A5CEE0 "bool& ParticleEmitterSettings::AcceptSnow::Getter(ParticleEmitterSettings*);" 
 141AADA10 "void ParticleEmitterSettings::AcceptSnow::Setter(ParticleEmitterSettings*, const bool&);" 
 140F7A790 "float& ParticleEmitterSettings::CountScale::Getter(ParticleEmitterSettings*);" 
 141AAD8E0 "void ParticleEmitterSettings::CountScale::Setter(ParticleEmitterSettings*, const float&);" 
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ParticleEmitterSettings::RTPC::Getter(ParticleEmitterSettings*);" 
 141AAD9C0 "void ParticleEmitterSettings::RTPC::Setter(ParticleEmitterSettings*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 141A5CEA0 "bool& ParticleEmitterSettings::RegisterByBBox::Getter(ParticleEmitterSettings*);" 
 141AAD980 "void ParticleEmitterSettings::RegisterByBBox::Setter(ParticleEmitterSettings*, const bool&);" 
 141A5CE80 "float& ParticleEmitterSettings::ParticleSizeScaleZ::Getter(ParticleEmitterSettings*);" 
 141AAD940 "void ParticleEmitterSettings::ParticleSizeScaleZ::Setter(ParticleEmitterSettings*, const float&);" 
 1405842F0 "float& ParticleEmitterSettings::ParticleSizeRandom::Getter(ParticleEmitterSettings*);" 
 141AAD950 "void ParticleEmitterSettings::ParticleSizeRandom::Setter(ParticleEmitterSettings*, const float&);" 
 
[427] C: "StaticFishingBaitData"
T: E2B6656A-8FA5-4320-91DE-CE87B6051098, S: 48
 Ctor: 144422620, Dtor: 140573E50, Alloc: 1445EFCC0, Dealloc: 144218D00, RTTI: 0
m_properties:
 1403F2E80 "Crc32& StaticFishingBaitData::requiredWaterTag::Getter(StaticFishingBaitData*);" 
 141AAD8B0 "void StaticFishingBaitData::requiredWaterTag::Setter(StaticFishingBaitData*, const Crc32&);" 
 1401AD7A0 "Crc32& StaticFishingBaitData::id::Getter(StaticFishingBaitData*);" 
 1401DF3E0 "void StaticFishingBaitData::id::Setter(StaticFishingBaitData*, const Crc32&);" 
 
[428] C: "HotspotUnlocksPerLevel"
T: 6CE65E94-14FB-4D55-BAB5-EE6070374769, S: 40
 Ctor: 144422260, Dtor: 144424D20, Alloc: 1445EF960, Dealloc: 144663E40, RTTI: 0
m_methods:
 142AE71A0 "int HotspotUnlocksPerLevel::GetNumHotspotsByType(HotspotUnlocksPerLevel*, Crc32);" 
m_properties:
 1401AD7A0 "int& HotspotUnlocksPerLevel::level::Getter(HotspotUnlocksPerLevel*);" 
 1401DF3E0 "void HotspotUnlocksPerLevel::level::Setter(HotspotUnlocksPerLevel*, const int&);" 
 
[429] C: "StaticRewardMilestoneData"
T: 966CF8BC-CD85-4EA4-8A61-D3C8D92303D5, S: E0
 Ctor: 1446F2680, Dtor: 1446F4330, Alloc: 144918460, Dealloc: 1449A1AC0, RTTI: 0
m_methods:
 14183C4B0 "bool StaticRewardMilestoneData::IsValid(StaticRewardMilestoneData*);" 
m_properties:
 140584310 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticRewardMilestoneData::image::Getter(StaticRewardMilestoneData*);" 
 1417B81F0 "unsigned int& StaticRewardMilestoneData::level::Getter(StaticRewardMilestoneData*);" 
 1409141F0 "int StaticRewardMilestoneData::type::Getter(const StaticRewardMilestoneData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticRewardMilestoneData::key::Getter(StaticRewardMilestoneData*);" 
 1401AD7A0 "Crc32& StaticRewardMilestoneData::id::Getter(StaticRewardMilestoneData*);" 
 140D88940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticRewardMilestoneData::icon::Getter(StaticRewardMilestoneData*);" 
 1403F3C00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticRewardMilestoneData::tooltip::Getter(StaticRewardMilestoneData*);" 
 1403F2E90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticRewardMilestoneData::name::Getter(StaticRewardMilestoneData*);" 
 
[430] C: "RoadComponent"
T: 3700DA70-407D-47A6-B788-4654EDDA32A1, S: 2B8
 Ctor: 1419A81D0, Dtor: 1401DF450, Alloc: 141BAB550, Dealloc: 141C5E8E0, RTTI: 146175898
m_requestBuses:
 "RoadRequestBus"
 
[431] C: "CylinderShapeConfig"
T: 53254779-82F1-441E-9116-81E1FACFECF4, S: 10
 Ctor: 1419A7E10, Dtor: 1401DF450, Alloc: 141BAAD70, Dealloc: 1406303C0, RTTI: 146175688
m_properties:
 140782520 "float& CylinderShapeConfig::Radius::Getter(CylinderShapeConfig*);" 
 1414D2A60 "void CylinderShapeConfig::Radius::Setter(CylinderShapeConfig*, const float&);" 
 1401E7820 "float& CylinderShapeConfig::Height::Getter(CylinderShapeConfig*);" 
 14028DC50 "void CylinderShapeConfig::Height::Setter(CylinderShapeConfig*, const float&);" 
 
[432] C: "TransformComponent"
T: 22B10178-39B6-4C12-BB37-77DB45FDD3B6, S: 1C0
 Ctor: 140573C10, Dtor: 1401DF450, Alloc: 140609ED0, Dealloc: 1406304C0, RTTI: 146128538
m_requestBuses:
 "TransformBus"
 
[433] C: "CostData"
T: E19C6D9B-1B03-438C-BFFB-36BA9F023507, S: 18
 Ctor: 1446F1EA0, Dtor: 140190D00, Alloc: 1449169B0, Dealloc: 144663540, RTTI: 1461AA1C8
m_properties:
 140782520 "Crc32& CostData::resourceID::Getter(CostData*);" 
 1414D2A60 "void CostData::resourceID::Setter(CostData*, const Crc32&);" 
 1401E7820 "int& CostData::currencyAmount::Getter(CostData*);" 
 14028DC50 "void CostData::currencyAmount::Setter(CostData*, const int&);" 
 1403F11A0 "int& CostData::resourceAmount::Getter(CostData*);" 
 1417BFEB0 "void CostData::resourceAmount::Setter(CostData*, const int&);" 
 
[434] C: "AZStd::vector<WorldMetadata, allocator>"
T: 50FD2550-CB0B-5A66-9878-951FC91EA8ED, S: 20
 Ctor: 1401DF120, Dtor: 1446F4560, Alloc: 144919810, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAF70 "void AZStd::vector<WorldMetadata, allocator>::pop_back(AZStd::vector<WorldMetadata, allocator>*);" 
 143894C80 "void AZStd::vector<WorldMetadata, allocator>::clear(AZStd::vector<WorldMetadata, allocator>*);" 
 144694700 "int AZStd::vector<WorldMetadata, allocator>::size(AZStd::vector<WorldMetadata, allocator>*);" 
 1449D7510 "WorldMetadata& AZStd::vector<WorldMetadata, allocator>::at(AZStd::vector<WorldMetadata, allocator>*, AZ::u64);" 
 1449A60D0 "void AZStd::vector<WorldMetadata, allocator>::insert(AZStd::vector<WorldMetadata, allocator>*, int, WorldMetadata&);" 
 1438970E0 "void AZStd::vector<WorldMetadata, allocator>::push_back(AZStd::vector<WorldMetadata, allocator>*, const WorldMetadata&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[435] C: "AZStd::vector<ScriptCharacterMetadata, allocator>"
T: BD51A937-7124-574B-AC68-967C3F69DCF8, S: 20
 Ctor: 1401DF120, Dtor: 1446F4530, Alloc: 1449193F0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAEB0 "void AZStd::vector<ScriptCharacterMetadata, allocator>::pop_back(AZStd::vector<ScriptCharacterMetadata, allocator>*);" 
 143894BC0 "void AZStd::vector<ScriptCharacterMetadata, allocator>::clear(AZStd::vector<ScriptCharacterMetadata, allocator>*);" 
 144694AA0 "int AZStd::vector<ScriptCharacterMetadata, allocator>::size(AZStd::vector<ScriptCharacterMetadata, allocator>*);" 
 1449D74F0 "ScriptCharacterMetadata& AZStd::vector<ScriptCharacterMetadata, allocator>::at(AZStd::vector<ScriptCharacterMetadata, allocator>*, AZ::u64);" 
 1449A5980 "void AZStd::vector<ScriptCharacterMetadata, allocator>::insert(AZStd::vector<ScriptCharacterMetadata, allocator>*, int, ScriptCharacterMetadata&);" 
 143896EA0 "void AZStd::vector<ScriptCharacterMetadata, allocator>::push_back(AZStd::vector<ScriptCharacterMetadata, allocator>*, const ScriptCharacterMetadata&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[436] C: "UiScrollBoxComponent"
T: 2F539588-AEAB-4341-A6A6-AF645D129693, S: 6C8
 Ctor: 1413CB030, Dtor: 1401DF450, Alloc: 1415910A0, Dealloc: 141665AF0, RTTI: 1461490E0
m_requestBuses:
 "UiScrollBoxBus"
 
[437] C: "NotificationData"
T: E2E10D15-BCF5-4D5B-9F05-8B1BF8D70C32, S: 200
 Ctor: 1446F22B0, Dtor: 1446F4270, Alloc: 144917D10, Dealloc: 1449A15C0, RTTI: 0
m_properties:
 14478DED0 "bool& NotificationData::declineOnTimeout::Getter(Notification*);" 
 144848340 "void NotificationData::declineOnTimeout::Setter(Notification*, const bool&);" 
 14478DF00 "bool& NotificationData::hasChoice::Getter(Notification*);" 
 144848410 "void NotificationData::hasChoice::Setter(Notification*, const bool&);" 
 140AEC940 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::icon::Getter(Notification*);" 
 144848160 "void NotificationData::icon::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14478DEC0 "bool& NotificationData::allowDuplicates::Getter(Notification*);" 
 144848330 "void NotificationData::allowDuplicates::Setter(Notification*, const bool&);" 
 14478DF10 "bool& NotificationData::canAccept::Getter(Notification*);" 
 144848420 "void NotificationData::canAccept::Setter(Notification*, const bool&);" 
 140D48DB0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::title::Getter(Notification*);" 
 144848240 "void NotificationData::title::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1432C8C80 "int& NotificationData::priority::Getter(Notification*);" 
 144848310 "void NotificationData::priority::Setter(Notification*, const int&);" 
 141692540 "float& NotificationData::maximumDuration::Getter(Notification*);" 
 140541A20 "void NotificationData::maximumDuration::Setter(Notification*, const float&);" 
 140584310 "EntityId& NotificationData::contextId::Getter(Notification*);" 
 144848660 "void NotificationData::contextId::Setter(Notification*, const EntityId&);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::type::Getter(Notification*);" 
 1403188A0 "void NotificationData::type::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14478DEE0 "bool& NotificationData::pushNotificationToChat::Getter(Notification*);" 
 144848350 "void NotificationData::pushNotificationToChat::Setter(Notification*, const bool&);" 
 140780AF0 "bool& NotificationData::showProgress::Getter(Notification*);" 
 1428D03C0 "void NotificationData::showProgress::Setter(Notification*, const bool&);" 
 1410530F0 "EntityId& NotificationData::entityId::Getter(Notification*);" 
 1448486B0 "void NotificationData::entityId::Setter(Notification*, const EntityId&);" 
 14096B150 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::declineTextOverride::Getter(Notification*);" 
 141716790 "void NotificationData::declineTextOverride::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F1550 "AZ::Uuid& NotificationData::uuid::Getter(Notification*);" 
 144848700 "void NotificationData::uuid::Setter(Notification*, const AZ::Uuid&);" 
 1403F11B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::acceptTextOverride::Getter(Notification*);" 
 142F33410 "void NotificationData::acceptTextOverride::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1423B46B0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::timestamp::Getter(Notification*);" 
 14453DED0 "void NotificationData::timestamp::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F3C00 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::callbackName::Getter(Notification*);" 
 1440B5040 "void NotificationData::callbackName::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 14167D080 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::text::Getter(Notification*);" 
 1448481E0 "void NotificationData::text::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403FB4D0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& NotificationData::text2::Getter(Notification*);" 
 144848200 "void NotificationData::text2::Setter(Notification*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 142AE7190 "GuildIconData& NotificationData::guildCrest::Getter(Notification*);" 
 1448482D0 "void NotificationData::guildCrest::Setter(Notification*, const GuildIconData&);" 
 
[438] C: "AZStd::vector<PrismOverlayData, allocator>"
T: 009B3B7C-EEED-5462-AE49-7FEEB4DAA45F, S: 20
 Ctor: 1401DF120, Dtor: 142F589F0, Alloc: 142F89840, Dealloc: 1406305C0, RTTI: 0
m_methods:
 142FA8E10 "void AZStd::vector<PrismOverlayData, allocator>::pop_back(AZStd::vector<PrismOverlayData, allocator>*);" 
 142FA61C0 "void AZStd::vector<PrismOverlayData, allocator>::clear(AZStd::vector<PrismOverlayData, allocator>*);" 
 142F4B9B0 "int AZStd::vector<PrismOverlayData, allocator>::size(AZStd::vector<PrismOverlayData, allocator>*);" 
 142FA6130 "PrismOverlayData& AZStd::vector<PrismOverlayData, allocator>::at(AZStd::vector<PrismOverlayData, allocator>*, AZ::u64);" 
 142F98840 "void AZStd::vector<PrismOverlayData, allocator>::insert(AZStd::vector<PrismOverlayData, allocator>*, int, PrismOverlayData&);" 
 142FA9050 "void AZStd::vector<PrismOverlayData, allocator>::push_back(AZStd::vector<PrismOverlayData, allocator>*, const PrismOverlayData&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[439] C: "AZStd::pair<int, AZStd::vector<Crc32, allocator>>"
T: 64489525-564B-50EB-B8EA-25E9A54D5EB3, S: 28
 Ctor: 1446F1C80, Dtor: 143F13910, Alloc: 144917730, Dealloc: 144663B40, RTTI: 0
m_properties:
 140923030 "int AZStd::pair<int, AZStd::vector<Crc32, allocator>>::first::Getter(AZStd::pair<int, AZStd::vector<Crc32, allocator>>*);" 
 1401DF3E0 "void AZStd::pair<int, AZStd::vector<Crc32, allocator>>::first::Setter(AZStd::pair<int, AZStd::vector<Crc32, allocator>>*, const int&);" 
 144694A20 "AZStd::vector<Crc32, allocator> AZStd::pair<int, AZStd::vector<Crc32, allocator>>::second::Getter(AZStd::pair<int, AZStd::vector<Crc32, allocator>>*);" 
 144694BA0 "void AZStd::pair<int, AZStd::vector<Crc32, allocator>>::second::Setter(AZStd::pair<int, AZStd::vector<Crc32, allocator>>*, const AZStd::vector<Crc32, allocator>&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[440] C: "AZStd::vector<UiValuePair, allocator>"
T: FB802578-FB3B-5E53-AA31-FB69CFEDB9F9, S: 20
 Ctor: 1401DF120, Dtor: 142845160, Alloc: 144919760, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1428A9700 "void AZStd::vector<UiValuePair, allocator>::pop_back(AZStd::vector<UiValuePair, allocator>*);" 
 1428A7A30 "void AZStd::vector<UiValuePair, allocator>::clear(AZStd::vector<UiValuePair, allocator>*);" 
 1428384F0 "int AZStd::vector<UiValuePair, allocator>::size(AZStd::vector<UiValuePair, allocator>*);" 
 1428A7A10 "UiValuePair& AZStd::vector<UiValuePair, allocator>::at(AZStd::vector<UiValuePair, allocator>*, AZ::u64);" 
 1449A5F50 "void AZStd::vector<UiValuePair, allocator>::insert(AZStd::vector<UiValuePair, allocator>*, int, UiValuePair&);" 
 1428A9A50 "void AZStd::vector<UiValuePair, allocator>::push_back(AZStd::vector<UiValuePair, allocator>*, const UiValuePair&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[441] C: "ArmorAudioData"
T: A479D49E-2C81-4414-B570-451BEC904BA9, S: 58
 Ctor: 1446F1DC0, Dtor: 1429F46C0, Alloc: 1449179B0, Dealloc: 144218A00, RTTI: 0
m_methods:
 140C5BC20 "bool ArmorAudioData::IsValid(ArmorAudioData*);" 
m_properties:
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ArmorAudioData::leftOnAudioTrigger::Getter(ArmorAudioData*);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ArmorAudioData::rightOffAudioTrigger::Getter(ArmorAudioData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[442] C: "UiArmorAttributes"
T: EA241DF6-67F5-4D5A-BDCE-775AF22DEE36, S: 58
 Ctor: 1446F27F0, Dtor: 1427901E0, Alloc: 1449186A0, Dealloc: 144218A00, RTTI: 0
m_properties:
 140F7A790 "int& UiArmorAttributes::equipLoadModifier::Getter(UiArmorAttributes*);" 
 141AAD8E0 "void UiArmorAttributes::equipLoadModifier::Setter(UiArmorAttributes*, const int&);" 
 140AF0A30 "float& UiArmorAttributes::physicalArmorRating::Getter(UiArmorAttributes*);" 
 1440B4F30 "void UiArmorAttributes::physicalArmorRating::Setter(UiArmorAttributes*, const float&);" 
 1401E7820 "AZStd::vector<UiValuePair, allocator>& UiArmorAttributes::absorption::Getter(UiArmorAttributes*);" 
 144848130 "void UiArmorAttributes::absorption::Setter(UiArmorAttributes*, const AZStd::vector<UiValuePair, allocator>&);" 
 1442D02A0 "float& UiArmorAttributes::elementalArmorRating::Getter(UiArmorAttributes*);" 
 144320F90 "void UiArmorAttributes::elementalArmorRating::Setter(UiArmorAttributes*, const float&);" 
 140780AF0 "AZStd::vector<UiValuePair, allocator>& UiArmorAttributes::resistances::Getter(UiArmorAttributes*);" 
 144848400 "void UiArmorAttributes::resistances::Setter(UiArmorAttributes*, const AZStd::vector<UiValuePair, allocator>&);" 
 1401AD7A0 "bool& UiArmorAttributes::isValid::Getter(UiArmorAttributes*);" 
 140752130 "void UiArmorAttributes::isValid::Setter(UiArmorAttributes*, const bool&);" 
 1403F11C0 "int& UiArmorAttributes::encumbranceModifier::Getter(UiArmorAttributes*);" 
 141AAD8D0 "void UiArmorAttributes::encumbranceModifier::Setter(UiArmorAttributes*, const int&);" 
 
[443] C: "UiElementLuaProxy"
T: 77FDAF4D-23B5-4004-8679-14AA1BBC7B5E, S: 30
 Ctor: 1413CAEB0, Dtor: 140BEB930, Alloc: 1415917F0, Dealloc: 141665EF0, RTTI: 0
m_methods:
 14159B1C0 "void UiElementLuaProxy::BusConnect(UiElementLuaProxy*, EntityId);" 
 14031EC1C "void UiElementLuaProxy::SetIsEnabled(UiElementLuaProxy*, bool);" 
 14031EBC0 "bool UiElementLuaProxy::IsEnabled(UiElementLuaProxy*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[444] C: "StaticWeaponData"
T: 14E6DE2E-BDC2-4B19-B847-2670C37FD042, S: 4E8
 Ctor: 1446F2720, Dtor: 1446F4340, Alloc: 1449184F0, Dealloc: 1449A1BC0, RTTI: 0
m_properties:
 140F838C0 "float& StaticWeaponData::intelligenceScaling::Getter(StaticWeaponData*);" 
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& StaticWeaponData::key::Getter(StaticWeaponData*);" 
 1401AD7A0 "Crc32& StaticWeaponData::id::Getter(StaticWeaponData*);" 
 143FBB960 "float& StaticWeaponData::dexterityScaling::Getter(StaticWeaponData*);" 
 14478E010 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char StaticWeaponData::mannequinTags::Getter(StaticWeaponData*);" 
 1403F3C00 "float& StaticWeaponData::strengthScaling::Getter(StaticWeaponData*);" 
 140E5B6D0 "float& StaticWeaponData::spiritScaling::Getter(StaticWeaponData*);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[445] C: "ScriptTimePoint"
T: 4C0F6AD4-0D4F-4354-AD4A-0C01E948245C, S: 8
 Ctor: 1401DF180, Dtor: 140190D00, Alloc: 140365CA0, Dealloc: 1403D77B0, RTTI: 0
m_methods:
 140472120 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ScriptTimePoint::ToString(ScriptTimePoint*);" 
 1403FAD80 "double ScriptTimePoint::GetMilliseconds(ScriptTimePoint*);" 
 140400C90 "double ScriptTimePoint::GetSeconds(ScriptTimePoint*);" 
 
[446] C: "AZStd::vector<const StaticItemData*, allocator>"
T: 759171BC-D870-5798-8898-D8348FCA2C32, S: 20
 Ctor: 1401DF120, Dtor: 140573E10, Alloc: 144918DC0, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1406AC100 "void AZStd::vector<const StaticItemData*, allocator>::pop_back(AZStd::vector<const StaticItemData*, allocator>*);" 
 14069EE90 "void AZStd::vector<const StaticItemData*, allocator>::clear(AZStd::vector<const StaticItemData*, allocator>*);" 
 14045A440 "int AZStd::vector<const StaticItemData*, allocator>::size(AZStd::vector<const StaticItemData*, allocator>*);" 
 14031C0C0 "const StaticItemData*& AZStd::vector<const StaticItemData*, allocator>::at(AZStd::vector<const StaticItemData*, allocator>*, AZ::u64);" 
 142684330 "void AZStd::vector<const StaticItemData*, allocator>::insert(AZStd::vector<const StaticItemData*, allocator>*, int, const StaticItemData*&);" 
 1426964B0 "void AZStd::vector<const StaticItemData*, allocator>::push_back(AZStd::vector<const StaticItemData*, allocator>*, const const StaticItemData*&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[447] C: "ItemConversionData"
T: 656A0DD9-5992-410C-B79D-475998148E55, S: 6A0
 Ctor: 1446F2100, Dtor: 1446F4230, Alloc: 144917C80, Dealloc: 1449A14C0, RTTI: 0
m_properties:
 1403F1560 "int& ItemConversionData::itemPrice::Getter(ItemConversionDataScript*);" 
 14453DB00 "void ItemConversionData::itemPrice::Setter(ItemConversionDataScript*, const int&);" 
 1442D0370 "int& ItemConversionData::currencyPrice::Getter(ItemConversionDataScript*);" 
 1448487B0 "void ItemConversionData::currencyPrice::Setter(ItemConversionDataScript*, const int&);" 
 140AEC940 "Crc32& ItemConversionData::categoricalProgressionId::Getter(ItemConversionDataScript*);" 
 144848150 "void ItemConversionData::categoricalProgressionId::Setter(ItemConversionDataScript*, const Crc32&);" 
 1401E7820 "ItemDescriptor& ItemConversionData::itemDescriptor::Getter(ItemConversionDataScript*);" 
 144320EF0 "void ItemConversionData::itemDescriptor::Setter(ItemConversionDataScript*, const ItemDescriptor&);" 
 1442D0390 "Crc32& ItemConversionData::rankCheckCategoricalProgressionId::Getter(ItemConversionDataScript*);" 
 144848800 "void ItemConversionData::rankCheckCategoricalProgressionId::Setter(ItemConversionDataScript*, const Crc32&);" 
 14478E140 "bool& ItemConversionData::canBeBought::Getter(ItemConversionDataScript*);" 
 1448485A0 "void ItemConversionData::canBeBought::Setter(ItemConversionDataScript*, const bool&);" 
 1401AD7A0 "Crc32& ItemConversionData::conversionID::Getter(ItemConversionDataScript*);" 
 1401DF3E0 "void ItemConversionData::conversionID::Setter(ItemConversionDataScript*, const Crc32&);" 
 1406417C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ItemConversionData::conversionName::Getter(ItemConversionDataScript*);" 
 1417123E0 "void ItemConversionData::conversionName::Setter(ItemConversionDataScript*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140968720 "StaticItemData& ItemConversionData::itemData::Getter(ItemConversionDataScript*);" 
 1448481B0 "void ItemConversionData::itemData::Setter(ItemConversionDataScript*, const StaticItemData&);" 
 140AEE960 "unsigned char& ItemConversionData::requiredRank::Getter(ItemConversionDataScript*);" 
 1448487D0 "void ItemConversionData::requiredRank::Setter(ItemConversionDataScript*, const unsigned char&);" 
 14478E160 "bool& ItemConversionData::canBeBoughtAndSold::Getter(ItemConversionDataScript*);" 
 1448485C0 "void ItemConversionData::canBeBoughtAndSold::Setter(ItemConversionDataScript*, const bool&);" 
 140AFC3C0 "int& ItemConversionData::playerQuantity::Getter(ItemConversionDataScript*);" 
 1448487A0 "void ItemConversionData::playerQuantity::Setter(ItemConversionDataScript*, const int&);" 
 14478DE80 "int& ItemConversionData::progressionPrice::Getter(ItemConversionDataScript*);" 
 144848180 "void ItemConversionData::progressionPrice::Setter(ItemConversionDataScript*, const int&);" 
 14478E130 "int& ItemConversionData::primaryClass::Getter(ItemConversionDataScript*);" 
 144848590 "void ItemConversionData::primaryClass::Setter(ItemConversionDataScript*, const int&);" 
 14478E170 "bool& ItemConversionData::showInContracts::Getter(ItemConversionDataScript*);" 
 1448485D0 "void ItemConversionData::showInContracts::Setter(ItemConversionDataScript*, const bool&);" 
 14478E150 "bool& ItemConversionData::canBeSold::Getter(ItemConversionDataScript*);" 
 1448485B0 "void ItemConversionData::canBeSold::Setter(ItemConversionDataScript*, const bool&);" 
 1444A9F30 "Crc32& ItemConversionData::itemPriceId::Getter(ItemConversionDataScript*);" 
 1448481A0 "void ItemConversionData::itemPriceId::Setter(ItemConversionDataScript*, const Crc32&);" 
 1423D88B0 "int& ItemConversionData::azothCurrencyPrice::Getter(ItemConversionDataScript*);" 
 144848190 "void ItemConversionData::azothCurrencyPrice::Setter(ItemConversionDataScript*, const int&);" 
 14478E180 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& ItemConversionData::entitlementId::Getter(ItemConversionDataScript*);" 
 1448485E0 "void ItemConversionData::entitlementId::Setter(ItemConversionDataScript*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[448] C: "AZStd::vector<ItemConversionDataScript, allocator>"
T: AEAB7DE4-CFB9-5FC1-8422-74244227CDAE, S: 20
 Ctor: 1401DF120, Dtor: 1446F44C0, Alloc: 144919130, Dealloc: 1406305C0, RTTI: 0
m_methods:
 1449DAE10 "void AZStd::vector<ItemConversionDataScript, allocator>::pop_back(AZStd::vector<ItemConversionDataScript, allocator>*);" 
 1449D7630 "void AZStd::vector<ItemConversionDataScript, allocator>::clear(AZStd::vector<ItemConversionDataScript, allocator>*);" 
 144694980 "int AZStd::vector<ItemConversionDataScript, allocator>::size(AZStd::vector<ItemConversionDataScript, allocator>*);" 
 1449D74E0 "ItemConversionDataScript& AZStd::vector<ItemConversionDataScript, allocator>::at(AZStd::vector<ItemConversionDataScript, allocator>*, AZ::u64);" 
 1449A53E0 "void AZStd::vector<ItemConversionDataScript, allocator>::insert(AZStd::vector<ItemConversionDataScript, allocator>*, int, ItemConversionDataScript&);" 
 1449DB280 "void AZStd::vector<ItemConversionDataScript, allocator>::push_back(AZStd::vector<ItemConversionDataScript, allocator>*, const ItemConversionDataScript&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x0
 
[449] C: "AnimatedLayer"
T: 147EAB48-2D6E-41CF-8414-CEABF3F1E59B, S: 50
 Ctor: 1419A7DA0, Dtor: 1419A8860, Alloc: 141BAAAA0, Dealloc: 141C5E2E0, RTTI: 0
m_constructors:
 141999A10 "void AnimatedLayer::Constructor(AnimatedLayer*, ScriptDataContext&);" 
m_properties:
 1401E7820 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AnimatedLayer::animationName::Getter(AnimatedLayer*);" 
 141AAD7E0 "void AnimatedLayer::animationName::Setter(AnimatedLayer*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F2E80 "float& AnimatedLayer::layerWeight::Getter(AnimatedLayer*);" 
 141AAD8B0 "void AnimatedLayer::layerWeight::Setter(AnimatedLayer*, const float&);" 
 1417B81F0 "float& AnimatedLayer::playbackSpeed::Getter(AnimatedLayer*);" 
 1417BFF40 "void AnimatedLayer::playbackSpeed::Setter(AnimatedLayer*, const float&);" 
 1401AD7A0 "int& AnimatedLayer::layerId::Getter(AnimatedLayer*);" 
 1401DF3E0 "void AnimatedLayer::layerId::Setter(AnimatedLayer*, const int&);" 
 1403F2E90 "float& AnimatedLayer::transitionTime::Getter(AnimatedLayer*);" 
 141AAD890 "void AnimatedLayer::transitionTime::Setter(AnimatedLayer*, const float&);" 
 1403F11B0 "bool& AnimatedLayer::looping::Getter(AnimatedLayer*);" 
 141AAD870 "void AnimatedLayer::looping::Setter(AnimatedLayer*, const bool&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x2
 
[450] C: "AffixData"
T: 1A6A1FBC-320C-4AA4-A457-15E95EF55B90, S: F8
 Ctor: 1446F1D00, Dtor: 1446F4160, Alloc: 144917920, Dealloc: 142A1EF10, RTTI: 0
m_properties:
 141692540 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AffixData::weaponAffixData::Getter(AffixData*);" 
 14453DDD0 "void AffixData::weaponAffixData::Setter(AffixData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140C46640 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AffixData::miscAffixData::Getter(AffixData*);" 
 141712400 "void AffixData::miscAffixData::Setter(AffixData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1403F11C0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AffixData::category::Getter(AffixData*);" 
 142004F50 "void AffixData::category::Setter(AffixData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1406414E0 "float& AffixData::qualityContribution::Getter(AffixData*);" 
 140541A40 "void AffixData::qualityContribution::Setter(AffixData*, const float&);" 
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AffixData::id::Getter(AffixData*);" 
 1403188A0 "void AffixData::id::Setter(AffixData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140780AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AffixData::name::Getter(AffixData*);" 
 142004F30 "void AffixData::name::Setter(AffixData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 140584300 "float& AffixData::gearScoreContribution::Getter(AffixData*);" 
 144848650 "void AffixData::gearScoreContribution::Setter(AffixData*, const float&);" 
 141C8A130 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& AffixData::armorAffixData::Getter(AffixData*);" 
 143B08F70 "void AffixData::armorAffixData::Setter(AffixData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Script::Attributes::StorageType" 9797D88C-6D64-5B4C-8E8F-05C9F344427F), VT: 1454208D0, V: 0x1
 
[451] C: "UiSalvageData"
T: E8B14AC1-6A28-44A6-ABEB-CD735FBE8931, S: 38
 Ctor: 1446F2870, Dtor: 1401DF410, Alloc: 144918A00, Dealloc: 1406306C0, RTTI: 0
m_properties:
 1401AD7A0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>& UiSalvageData::itemId::Getter(UiSalvageData*);" 
 1403188A0 "void UiSalvageData::itemId::Setter(UiSalvageData*, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 1417B81E0 "int& UiSalvageData::maxQuantity::Getter(UiSalvageData*);" 
 1417BFF20 "void UiSalvageData::maxQuantity::Setter(UiSalvageData*, const int&);" 
 140780AF0 "int& UiSalvageData::minQuantity::Getter(UiSalvageData*);" 
 1417BFF10 "void UiSalvageData::minQuantity::Setter(UiSalvageData*, const int&);" 
 1403F11B0 "int& UiSalvageData::roll::Getter(UiSalvageData*);" 
 1417BFF30 "void UiSalvageData::roll::Setter(UiSalvageData*, const int&);" 
 
 
=====================================================================================================================================
[17:10:40] m_ebuses count: 497
[000] "UiCanvasNotificationLuaBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141650BE0 "BehaviorEBusHandler* UiCanvasNotificationLuaBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCanvasNotificationLuaBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FB80 "const EntityId* UiCanvasNotificationLuaBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[001] "TransformBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1403F2720 "const EntityId* TransformBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC48 "void SetRotationX(float);" 
 [01] 1405F6B20 "Vector3 GetWorldRotation();" 
 [02] 1405F6B5C "void RotateAroundLocalY(float);" 
 [03] 14050D22C "void SetRotationQuaternion(const Quaternion&);" 
 [04] 1405F6C70 "AZStd::vector<EntityId, allocator> GetAllDescendants();" 
 [05] 14050D25C "void SetEulerRotation(const Vector3&);" 
 [06] 14050D250 "float GetLocalZ();" 
 [07] 1405F6B80 "Quaternion GetLocalRotationQuaternion();" 
 [08] 1404C7AC0 "void SetLocalZ(float);" 
 [09] 1405F6C1C "Vector3 GetLocalScale();" 
 [10] 1404C7A90 "float GetWorldY();" 
 [11] 1404C7A84 "float GetWorldX();" 
 [12] 1405F6C4C "void SetParent(EntityId);" 
 [13] 1405F6AD8 "void RotateByZ(float);" 
 [14] 14031EBE8 "void SetWorldX(float);" 
 [15] 1405F6C58 "void SetParentRelative(EntityId);" 
 [16] 1405F6C34 "EntityId GetRootId();" 
 [17] 14031EC04 "void SetWorldTM(const Transform&);" 
 [18] 1404C7AA8 "void SetLocalX(float);" 
 [19] 14031EC3C "void RotateByY(float);" 
 [20] 1405F6C40 "EntityId GetParentId();" 
 [21] 1405F6BD4 "float GetScaleY();" 
 [22] 14031EBFC "const Transform& GetWorldTM();" 
 [23] 14050D238 "float GetLocalX();" 
 [24] 1404C7A9C "float GetWorldZ();" 
 [25] 14031EC68 "void SetLocalTM(const Transform&);" 
 [26] 14031EBE0 "void SetLocalTranslation(const Vector3&);" 
 [27] 14031EBD0 "void GetLocalAndWorld(Transform&, Transform&);" 
 [28] 1405F6BC8 "float GetScaleX();" 
 [29] 1405F6C88 "bool IsStaticTransform();" 
 [30] 14050D244 "float GetLocalY();" 
 [31] 1404C7AB4 "void SetLocalY(float);" 
 [32] 1405F6ACC "void RotateByX(float);" 
 [33] 14031EBF4 "const Transform& GetLocalTM();" 
 [34] 1405F6C28 "Vector3 GetWorldScale();" 
 [35] 1405F6B44 "void SetLocalRotationQuaternion(const Quaternion&);" 
 [36] 1405F6BEC "void SetLocalScale(const Vector3&);" 
 [37] 14031EBD8 "void SetWorldTranslation(const Vector3&);" 
 [38] 14050D268 "void SetRotationY(float);" 
 [39] 14031EC0C "Vector3 GetWorldTranslation();" 
 [40] 14031EC70 "void SetWorldZ(float);" 
 [41] 14031EC54 "Vector3 GetLocalTranslation();" 
 [42] 14031EC5C "void MoveEntity(const Vector3&);" 
 [43] 1405F6C64 "AZStd::vector<EntityId, allocator> GetChildren();" 
 [44] 14050D274 "void SetWorldY(float);" 
 [45] 14050D220 "void SetRotationZ(float);" 
 [46] 1405F6AE4 "Vector3 GetEulerRotation();" 
 [47] 1405F6AF0 "Quaternion GetRotationQuaternion();" 
 [48] 1405F6AFC "float GetRotationX();" 
 [49] 1405F6BB0 "void SetScaleZ(float);" 
 [50] 1405F6B08 "float GetRotationY();" 
 [51] 1405F6B14 "float GetRotationZ();" 
 [52] 1405F6B98 "void SetScaleX(float);" 
 [53] 1405F6B2C "Quaternion GetWorldRotationQuaternion();" 
 [54] 1405F6B38 "void SetLocalRotation(const Vector3&);" 
 [55] 1405F6B50 "void RotateAroundLocalX(float);" 
 [56] 1405F6B68 "void RotateAroundLocalZ(float);" 
 [57] 1405F6B74 "Vector3 GetLocalRotation();" 
 [58] 1405F6B8C "void SetScale(const Vector3&);" 
 [59] 1405F6BA4 "void SetScaleY(float);" 
 [60] 1405F6BBC "Vector3 GetScale();" 
 [61] 1405F6BE0 "float GetScaleZ();" 
 [62] 1405F6BF8 "void SetLocalScaleX(float);" 
 [63] 1405F6C04 "void SetLocalScaleY(float);" 
 [64] 1405F6C10 "void SetLocalScaleZ(float);" 
 [65] 1405F6C7C "AZStd::vector<EntityId, allocator> GetEntityAndAllDescendants();" 
m_virtualProperties:
 [00]
  14031EC54 "Vector3 Position();" 
  14031EC54 "Vector3 Position(EntityId);" 
 [01]
  1405F6C1C "Vector3 Scale();" 
  1405F6C1C "Vector3 Scale(EntityId);" 
 [02]
  1405F6B80 "Quaternion Rotation();" 
  1405F6B80 "Quaternion Rotation(EntityId);" 
 
[002] "NetBindingHandlerBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14063E4F0 "const EntityId* NetBindingHandlerBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "bool IsEntityBoundToNetwork();" 
 [01] 14031EBFC "bool IsEntityAuthoritative();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[003] "LoadScreenNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 141C3C970 "BehaviorEBusHandler* LoadScreenNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LoadScreenNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[004] "WorldMaterialRequestsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetSurfaceTypeAtPosition(Vector2);" 
 
[005] "GeometryCacheComponentNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 141C3C6B0 "BehaviorEBusHandler* GeometryCacheComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GeometryCacheComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[006] "GeometryCacheComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87790 "const EntityId* GeometryCacheComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7AA8 "float GetStandInDistance();" 
 [01] 14031EBD8 "void SetStartTime(float);" 
 [02] 14031EC04 "void SetLoop(bool);" 
 [03] 14050D274 "void SetLastFrameStandIn(EntityId);" 
 [04] 14031EC54 "float GetStreamInDistance();" 
 [05] 14031EC68 "void SetVisible(bool);" 
 [06] 14031EBE8 "EntityId GetFirstFrameStandIn();" 
 [07] 14031EC5C "void SetFirstFrameStandIn(EntityId);" 
 [08] 14031EC0C "void SetStreamInDistance(float);" 
 [09] 14031EBC0 "void Play();" 
 [10] 14031EC70 "EntityId GetLastFrameStandIn();" 
 [11] 14031EBFC "bool GetVisible();" 
 [12] 14031EBD0 "bool GetLoop();" 
 [13] 14031EC1C "void Pause();" 
 [14] 1404C7A9C "void SetStandInDistance(float);" 
 [15] 14031EC24 "void Stop();" 
 [16] 14031EC2C "float GetTimeRemaining();" 
 [17] 1404C7A84 "void SetStandIn(EntityId);" 
 [18] 14031EBE0 "float GetStartTime();" 
 [19] 1404C7A90 "EntityId GetStandIn();" 
m_virtualProperties:
 [00]
  14031EC54 "float StreamInDistance();" 
  14031EC54 "float StreamInDistance(EntityId);" 
 [01]
  1404C7A90 "EntityId StandIn();" 
  1404C7A90 "EntityId StandIn(EntityId);" 
 [02]
  14031EBE0 "float StartTime();" 
  14031EBE0 "float StartTime(EntityId);" 
 [03]
  14031EBFC "bool Visible();" 
  14031EBFC "bool Visible(EntityId);" 
 [04]
  14031EBE8 "EntityId FirstFrameStandIn();" 
  14031EBE8 "EntityId FirstFrameStandIn(EntityId);" 
 [05]
  14031EC70 "EntityId LastFrameStandIn();" 
  14031EC70 "EntityId LastFrameStandIn(EntityId);" 
 [06]
  14031EBD0 "bool Loop();" 
  14031EBD0 "bool Loop(EntityId);" 
 [07]
  1404C7AA8 "float StandInDistance();" 
  1404C7AA8 "float StandInDistance(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[007] "FogVolumeComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87700 "const EntityId* FogVolumeComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6B2C "void SetIgnoresVisAreas(bool);" 
 [01] 1405F6B20 "bool GetIgnoresVisAreas();" 
 [02] 1405F6B08 "Vector3 GetDensityNoiseFrequency();" 
 [03] 1405F6AFC "void SetDensityNoiseTimeFrequency(float);" 
 [04] 1405F6AE4 "void SetDensityNoiseOffset(float);" 
 [05] 1405F6AD8 "float GetDensityNoiseOffset();" 
 [06] 14031EC3C "void SetDensityNoiseScale(float);" 
 [07] 1405F6ACC "float GetDensityNoiseScale();" 
 [08] 14031EBD0 "void SetGlobalDensity(float);" 
 [09] 14031EC2C "Color GetColor();" 
 [10] 14031EBD8 "float GetDensityOffset();" 
 [11] 14031EBFC "void SetUseGlobalFogColor(bool);" 
 [12] 14031EC70 "void SetFallOffDirLatitude(float);" 
 [13] 14031EC34 "void SetColor(Color);" 
 [14] 14031EC68 "bool GetUseGlobalFogColor();" 
 [15] 14031EBE0 "void SetDensityOffset(float);" 
 [16] 14050D274 "float GetFallOffDirLatitude();" 
 [17] 14031EC0C "float GetNearCutoff();" 
 [18] 14031EBF4 "void SetHdrDynamic(float);" 
 [19] 14050D250 "float GetRampEnd();" 
 [20] 14031EC5C "float GetFallOffDirLong();" 
 [21] 14031EC04 "float GetGlobalDensity();" 
 [22] 14031EBC0 "void RefreshFog();" 
 [23] 14075959C "bool GetAffectsThisAreaOnly();" 
 [24] 14031EC1C "int GetVolumeType();" 
 [25] 14050D238 "float GetRampStart();" 
 [26] 1405F6B14 "void SetDensityNoiseFrequency(Vector3);" 
 [27] 14031EC24 "void SetVolumeType(int);" 
 [28] 14031EBC8 "float GetHdrDynamic();" 
 [29] 14031EBE8 "void SetFallOffDirLong(float);" 
 [30] 1407595A8 "void SetAffectsThisAreaOnly(bool);" 
 [31] 14050D25C "void SetRampEnd(float);" 
 [32] 14031EC54 "void SetNearCutoff(float);" 
 [33] 1404C7A84 "float GetFallOffShift();" 
 [34] 1404C7A90 "void SetFallOffShift(float);" 
 [35] 1404C7AC0 "void SetSoftEdges(float);" 
 [36] 1404C7A9C "float GetFallOffScale();" 
 [37] 1404C7AA8 "void SetFallOffScale(float);" 
 [38] 1404C7AB4 "float GetSoftEdges();" 
 [39] 14050D244 "void SetRampStart(float);" 
 [40] 14031EC48 "float GetRampInfluence();" 
 [41] 14050D268 "void SetRampInfluence(float);" 
 [42] 1405F6AF0 "float GetDensityNoiseTimeFrequency();" 
 [43] 14050D220 "float GetWindInfluence();" 
 [44] 14050D22C "void SetWindInfluence(float);" 
m_virtualProperties:
 [00]
  14075959C "bool AffectsThisAreaOnly();" 
  14075959C "bool AffectsThisAreaOnly(EntityId);" 
 [01]
  1405F6B08 "Vector3 DensityNoiseFrequency();" 
  1405F6B08 "Vector3 DensityNoiseFrequency(EntityId);" 
 [02]
  1405F6AF0 "float DensityNoiseTimeFrequency();" 
  1405F6AF0 "float DensityNoiseTimeFrequency(EntityId);" 
 [03]
  1405F6AD8 "float DensityNoiseOffset();" 
  1405F6AD8 "float DensityNoiseOffset(EntityId);" 
 [04]
  14050D274 "float FallOffDirLatitude();" 
  14050D274 "float FallOffDirLatitude(EntityId);" 
 [05]
  14031EC2C "Color Color();" 
  14031EC2C "Color Color(EntityId);" 
 [06]
  14031EBD8 "float DensityOffset();" 
  14031EBD8 "float DensityOffset(EntityId);" 
 [07]
  14031EC68 "bool UseGlobalFogColor();" 
  14031EC68 "bool UseGlobalFogColor(EntityId);" 
 [08]
  1405F6B20 "bool IgnoresVisAreas();" 
  1405F6B20 "bool IgnoresVisAreas(EntityId);" 
 [09]
  14031EC04 "float GlobalDensity();" 
  14031EC04 "float GlobalDensity(EntityId);" 
 [10]
  14031EBC8 "float HdrDynamic();" 
  14031EBC8 "float HdrDynamic(EntityId);" 
 [11]
  14031EC0C "float NearCutoff();" 
  14031EC0C "float NearCutoff(EntityId);" 
 [12]
  14031EC5C "float FallOffDirLong();" 
  14031EC5C "float FallOffDirLong(EntityId);" 
 [13]
  1404C7A84 "float FallOffShift();" 
  1404C7A84 "float FallOffShift(EntityId);" 
 [14]
  14031EC1C "int VolumeType();" 
  14031EC1C "int VolumeType(EntityId);" 
 [15]
  1405F6ACC "float DensityNoiseScale();" 
  1405F6ACC "float DensityNoiseScale(EntityId);" 
 [16]
  1404C7A9C "float FallOffScale();" 
  1404C7A9C "float FallOffScale(EntityId);" 
 [17]
  1404C7AB4 "float SoftEdges();" 
  1404C7AB4 "float SoftEdges(EntityId);" 
 [18]
  14050D238 "float RampStart();" 
  14050D238 "float RampStart(EntityId);" 
 [19]
  14050D250 "float RampEnd();" 
  14050D250 "float RampEnd(EntityId);" 
 [20]
  14031EC48 "float RampInfluence();" 
  14031EC48 "float RampInfluence(EntityId);" 
 [21]
  14050D220 "float WindInfluence();" 
  14050D220 "float WindInfluence(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[008] "PolygonPrismShapeComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87A90 "const EntityId* PolygonPrismShapeComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "void ClearVertices();" 
 [01] 14031EBC8 "bool RemoveVertex(AZ::u64);" 
 [02] 14031EC2C "void SetHeight(float);" 
 [03] 14031EBC0 "AZStd::shared_ptr<const PolygonPrism> GetPolygonPrism();" 
 [04] 14031EC34 "bool InsertVertex(AZ::u64, const Vector2&);" 
 [05] 14031EC2C "void AddVertex(const Vector2&);" 
 [06] 14031EC1C "bool UpdateVertex(AZ::u64, const Vector2&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[009] "CapsuleShapeComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87520 "const EntityId* CapsuleShapeComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "CapsuleShapeConfig GetCapsuleConfiguration();" 
 [01] 14031EC1C "void SetHeight(float);" 
 [02] 14031EC24 "void SetRadius(float);" 
 
[010] "CylinderShapeComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C876A0 "const EntityId* CylinderShapeComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "CylinderShapeConfig GetCylinderConfiguration();" 
 [01] 14031EC24 "void SetRadius(float);" 
 [02] 14031EC1C "void SetHeight(float);" 
 
[011] "BoxShapeComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C874F0 "const EntityId* BoxShapeComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "BoxShapeConfig GetBoxConfiguration();" 
 [01] 14031EC1C "Vector3 GetBoxDimensions();" 
 [02] 14031EC24 "void SetBoxDimensions(Vector3);" 
 
[012] "CharacterAnimationNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3D310 "BehaviorEBusHandler* CharacterAnimationNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CharacterAnimationNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87550 "const EntityId* CharacterAnimationNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[013] "TagComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3D050 "BehaviorEBusHandler* TagComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TagComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87DF0 "const EntityId* TagComponentNotificationsBus::GetCurrentBusId();" 
 
[014] "TagGlobalRequestBus" 
BehaviorParameter: m_name: "Crc32", m_traits: 0
m_getCurrentId:
 141C87E80 "const Crc32* TagGlobalRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "const EntityId RequestTaggedEntities();" 
 
[015] "TagComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87E20 "const EntityId* TagComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void RemoveTag(const Crc32&);" 
 [01] 14031EBC0 "bool HasTag(const Crc32&);" 
 [02] 14031EC1C "void AddTag(const Crc32&);" 
 
[016] "TriggerAreaNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3D260 "BehaviorEBusHandler* TriggerAreaNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TriggerAreaNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87EE0 "const EntityId* TriggerAreaNotificationBus::GetCurrentBusId();" 
 
[017] "SimpleAnimationComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87C70 "const EntityId* SimpleAnimationComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC68 "int SetPlaybackWeight(int, float);" 
 [01] 14031EC34 "int StopAllAnimations();" 
 [02] 14031EBC0 "int StartDefaultAnimations();" 
 [03] 14031EC24 "int StartAnimation(const AnimatedLayer&);" 
 [04] 14031EC1C "int StartAnimationByName(const char*, int);" 
 [05] 14031EBF4 "int SetPlaybackSpeed(int, float);" 
 [06] 14031EBC8 "int StopAnimationsOnLayer(int, float);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[018] "PhysicsSystemRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "RayCastResult RayCast(const RayCastConfiguration&);" 
 [01] 14031EC1C "AZStd::vector<EntityId, allocator> GatherPhysicalEntitiesInAABB(const Aabb&, unsigned int);" 
 [02] 14031EC24 "AZStd::vector<EntityId, allocator> GatherPhysicalEntitiesAroundPoint(const Vector3&, float, unsigned int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[019] "MeshComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3D730 "BehaviorEBusHandler* MeshComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void MeshComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C879A0 "const EntityId* MeshComponentNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[020] "MaterialOwnerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87970 "const EntityId* MaterialOwnerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "Color GetParamColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [01] 14031EBFC "void SetParamVector3(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const Vector3&, int);" 
 [02] 14031EC68 "void SetParamVector4(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const Vector4&, int);" 
 [03] 14031EBD0 "void SetParamNumber(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float, int);" 
 [04] 14031EBF4 "MaterialHandle GetMaterial();" 
 [05] 14031EC34 "bool IsMaterialOwnerReady();" 
 [06] 14031EBC8 "void SetMaterial(MaterialHandle);" 
 [07] 14031EC04 "void SetParamColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const Color&, int);" 
 [08] 14031EBD8 "Vector4 GetParamVector4(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [09] 14031EC54 "float GetParamNumber(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [10] 14031EBE0 "Vector3 GetParamVector3(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[021] "RenderBoundsRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87B20 "const EntityId* RenderBoundsRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "Aabb GetLocalBounds();" 
 [01] 14031EBC0 "Aabb GetWorldBounds();" 
 
[022] "MeshComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C879D0 "const EntityId* MeshComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void SetVisibility(bool);" 
 [01] 14031EC34 "bool GetVisibility();" 
 [02] 14031EBE0 "void SetOpacity(float);" 
m_virtualProperties:
 [00]
  14031EC34 "bool Visibility();" 
  14031EC34 "bool Visibility(EntityId);" 
 
[023] "HighQualityShadowComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C877C0 "const EntityId* HighQualityShadowComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetEnabled(bool);" 
 [01] 14031EC1C "bool GetEnabled();" 
m_virtualProperties:
 [00]
  14031EC1C "bool Enabled();" 
  14031EC1C "bool Enabled(EntityId);" 
 
[024] "LightComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3C8C0 "BehaviorEBusHandler* LightNotification::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LightNotification::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87880 "const EntityId* LightNotification::GetCurrentBusId();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[025] "LightComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C878B0 "const EntityId* Light::GetCurrentBusId();" 
m_events:
 [00] 1405F6B80 "float GetProbeTODInfluence();" 
 [01] 1405F6B50 "float GetProbeAttenuationFalloff();" 
 [02] 1405F6B68 "float GetProbeFade();" 
 [03] 1405F6B2C "void SetProbeBoxLength(float);" 
 [04] 1405F6B14 "void SetProbeBoxHeight(float);" 
 [05] 1405F6B20 "float GetProbeBoxHeight();" 
 [06] 1405F6AFC "void SetProbeBoxProjected(bool);" 
 [07] 14050D274 "float GetPointAttenuationBulbSize();" 
 [08] 14050D22C "void SetProjectorNearPlane(float);" 
 [09] 14031EC5C "float GetPointMaxDistance();" 
 [10] 14031EC0C "bool GetAmbient();" 
 [11] 14031EBD8 "float GetSpecularMultiplier();" 
 [12] 1405F6B44 "void SetProbeAttenuationFalloff(float);" 
 [13] 14031EBFC "void SetDiffuseMultiplier(float);" 
 [14] 14075959C "float GetProbeBoxLength();" 
 [15] 14031EC2C "void Toggle();" 
 [16] 1404C7AA8 "void SetAreaHeight(float);" 
 [17] 14050D238 "float GetAreaFOV();" 
 [18] 14031EBD0 "void SetSpecularMultiplier(float);" 
 [19] 14031EBE0 "void SetAmbient(bool);" 
 [20] 1405F6B74 "void SetProbeTODInfluence(float);" 
 [21] 14031EC04 "float GetDiffuseMultiplier();" 
 [22] 14031EC54 "void SetPointMaxDistance(float);" 
 [23] 14031EBC0 "void SetState(int);" 
 [24] 14050D268 "void SetProjectorFOV(float);" 
 [25] 1407595A8 "void SetProbeBoxWidth(float);" 
 [26] 14031EBC8 "bool GetVisible();" 
 [27] 1405F6ACC "float GetProjectorNearPlane();" 
 [28] 14031EC1C "bool TurnOn();" 
 [29] 14031EC3C "void SetProbeAreaDimensions(const Vector3&);" 
 [30] 1405F6AF0 "unsigned int GetProbeSortPriority();" 
 [31] 14031EC24 "bool TurnOff();" 
 [32] 1405F6AE4 "void SetProbeSortPriority(unsigned int);" 
 [33] 14031EC34 "void SetVisible(bool);" 
 [34] 1404C7A84 "float GetAreaMaxDistance();" 
 [35] 1405F6AD8 "const Vector3 GetProbeAreaDimensions();" 
 [36] 14031EC68 "const Color GetColor();" 
 [37] 14031EBF4 "void SetColor(const Color&);" 
 [38] 14031EC70 "void SetAreaMaxDistance(float);" 
 [39] 14031EBE8 "void SetPointAttenuationBulbSize(float);" 
 [40] 1404C7A9C "float GetAreaWidth();" 
 [41] 14050D250 "float GetProjectorMaxDistance();" 
 [42] 1404C7A90 "void SetAreaWidth(float);" 
 [43] 1404C7AB4 "float GetAreaHeight();" 
 [44] 14031EC48 "float GetProjectorAttenuationBulbSize();" 
 [45] 1405F6B5C "void SetProbeFade(float);" 
 [46] 1404C7AC0 "void SetAreaFOV(float);" 
 [47] 14050D244 "void SetProjectorMaxDistance(float);" 
 [48] 14050D25C "void SetProjectorAttenuationBulbSize(float);" 
 [49] 14050D220 "float GetProjectorFOV();" 
 [50] 1405F6B08 "bool GetProbeBoxProjected();" 
 [51] 1405F6B38 "float GetProbeBoxWidth();" 
m_virtualProperties:
 [00]
  1405F6B50 "float ProbeAttenuationFalloff();" 
  1405F6B50 "float ProbeAttenuationFalloff(EntityId);" 
 [01]
  14075959C "float ProbeBoxLength();" 
  14075959C "float ProbeBoxLength(EntityId);" 
 [02]
  1405F6B38 "float ProbeBoxWidth();" 
  1405F6B38 "float ProbeBoxWidth(EntityId);" 
 [03]
  1405F6B08 "bool ProbeBoxProjected();" 
  1405F6B08 "bool ProbeBoxProjected(EntityId);" 
 [04]
  14031EC5C "float PointMaxDistance();" 
  14031EC5C "float PointMaxDistance(EntityId);" 
 [05]
  14050D220 "float ProjectorFOV();" 
  14050D220 "float ProjectorFOV(EntityId);" 
 [06]
  14031EC68 "const Color Color();" 
  14031EC68 "const Color Color(EntityId);" 
 [07]
  1404C7A9C "float AreaWidth();" 
  1404C7A9C "float AreaWidth(EntityId);" 
 [08]
  14031EC04 "float DiffuseMultiplier();" 
  14031EC04 "float DiffuseMultiplier(EntityId);" 
 [09]
  14031EBC8 "bool Visible();" 
  14031EBC8 "bool Visible(EntityId);" 
 [10]
  14050D274 "float PointAttenuationBulbSize();" 
  14050D274 "float PointAttenuationBulbSize(EntityId);" 
 [11]
  1405F6AF0 "unsigned int ProbeSortPriority();" 
  1405F6AF0 "unsigned int ProbeSortPriority(EntityId);" 
 [12]
  1404C7A84 "float AreaMaxDistance();" 
  1404C7A84 "float AreaMaxDistance(EntityId);" 
 [13]
  14031EC0C "bool Ambient();" 
  14031EC0C "bool Ambient(EntityId);" 
 [14]
  1405F6B80 "float ProbeTODInfluence();" 
  1405F6B80 "float ProbeTODInfluence(EntityId);" 
 [15]
  14050D238 "float AreaFOV();" 
  14050D238 "float AreaFOV(EntityId);" 
 [16]
  14031EBD8 "float SpecularMultiplier();" 
  14031EBD8 "float SpecularMultiplier(EntityId);" 
 [17]
  1404C7AB4 "float AreaHeight();" 
  1404C7AB4 "float AreaHeight(EntityId);" 
 [18]
  1405F6B68 "float ProbeFade();" 
  1405F6B68 "float ProbeFade(EntityId);" 
 [19]
  14050D250 "float ProjectorMaxDistance();" 
  14050D250 "float ProjectorMaxDistance(EntityId);" 
 [20]
  14031EC48 "float ProjectorAttenuationBulbSize();" 
  14031EC48 "float ProjectorAttenuationBulbSize(EntityId);" 
 [21]
  1405F6AD8 "const Vector3 ProbeAreaDimensions();" 
  1405F6AD8 "const Vector3 ProbeAreaDimensions(EntityId);" 
 [22]
  1405F6ACC "float ProjectorNearPlane();" 
  1405F6ACC "float ProjectorNearPlane(EntityId);" 
 [23]
  1405F6B20 "float ProbeBoxHeight();" 
  1405F6B20 "float ProbeBoxHeight(EntityId);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[026] "LensFlareComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87850 "const EntityId* LensFlareComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void ToggleLensFlare();" 
 [01] 14031EBC0 "void SetLensFlareState(int);" 
 [02] 14031EC1C "void TurnOnLensFlare();" 
 [03] 14031EC24 "void TurnOffLensFlare();" 
 
[027] "ConstraintComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3C550 "BehaviorEBusHandler* ConstraintComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ConstraintComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C875E0 "const EntityId* ConstraintComponentNotificationBus::GetCurrentBusId();" 
 
[028] "AudioTriggerComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3C4A0 "BehaviorEBusHandler* AudioTriggerComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void AudioTriggerComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87490 "const EntityId* AudioTriggerComponentNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[029] "AudioTriggerComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C874C0 "const EntityId* AudioTriggerComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD8 "void SetAudioContinuesToPlayAfterEntityDestruction(bool);" 
 [01] 14031EBE0 "void SetObstructionType(unsigned int);" 
 [02] 14031EBD0 "void SetMovesWithEntity(bool);" 
 [03] 14050D274 "unsigned int GetTriggerID(const char*);" 
 [04] 14031EC04 "void KillAllTriggers();" 
 [05] 14031EC1C "void Stop();" 
 [06] 14031EBC0 "void Play();" 
 [07] 14031EC34 "void ExecuteTriggerOnJoint(const char*, int);" 
 [08] 14031EBFC "void KillTrigger(const char*);" 
 [09] 14031EC2C "void ExecuteTriggerWithCallback(const char*, bool, const char*);" 
 [10] 14031EC24 "void ExecuteTrigger(const char*);" 
 [11] 14031EBC8 "float GetTriggerNamePlaybackTime(const char*);" 
 [12] 14031EC68 "void ExecuteTriggerWithExternalSource(const char*, const char*);" 
 [13] 14031EBF4 "float GetTriggerPlaybackTime(unsigned int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[030] "AudioSwitchComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87460 "const EntityId* AudioSwitchComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetState(const char*);" 
 [01] 14031EC1C "void SetSwitchState(const char*, const char*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[031] "AudioProxyComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87400 "const EntityId* AudioProxyComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7A90 "void SetTransformTolerance(float);" 
 [01] 14031EBE0 "void SetSwitchStateOnBoneName(const char*, const char*, const char*);" 
 [02] 14031EC04 "void SetRtpcValueOnBoneName(const char*, float, const char*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[032] "AudioListenerComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C873A0 "const EntityId* AudioListenerComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void SetSubjectEntity(const EntityId&);" 
 [01] 14031EC2C "void SetRotationEntity(const EntityId&);" 
 [02] 14031EBC8 "void SetPositionEntity(const EntityId&);" 
 [03] 14031EC2C "void SetCameraEntity(const EntityId&);" 
 [04] 14031EBF4 "void SetFullTransformEntity(const EntityId&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[033] "AttachmentComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3C3F0 "BehaviorEBusHandler* AttachmentComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void AttachmentComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87310 "const EntityId* AttachmentComponentNotificationBus::GetCurrentBusId();" 
 
[034] "AttachmentComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87340 "const EntityId* AttachmentComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void Detach();" 
 [01] 14031EBC0 "void Attach(EntityId, unsigned int, const Transform&, unsigned int);" 
 [02] 14031EC24 "void SetAttachmentOffset(const Transform&);" 
 
[035] "OceanEnvironmentRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBFC "void SetOceanMaterialName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC68 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetOceanMaterialName();" 
 [02] 1405F6B14 "void SetCausticsTiling(float);" 
 [03] 1405F6B08 "void SetCausticsIntensity(float);" 
 [04] 1405F6AFC "void SetCausticsDepth(float);" 
 [05] 1404C7AB4 "void SetReflectRenderFlag(int, bool);" 
 [06] 14031EBD8 "float GetAnimationWavesSpeed();" 
 [07] 14050D274 "void SetAnimationWavesSize(float);" 
 [08] 14031EBD0 "float GetAnimationWindSpeed();" 
 [09] 14031EBC8 "int GetWaterTessellationAmount();" 
 [10] 14050D250 "void SetUseOceanBottom(bool);" 
 [11] 14050D22C "bool GetCausticsEnabled();" 
 [12] 14031EC04 "float GetAnimationWindDirection();" 
 [13] 1404C7A90 "bool GetReflectRenderFlag(int);" 
 [14] 1405F6B5C "void SetNearFogColor(const Color&);" 
 [15] 1405F6B38 "float GetFogColorMulitplier();" 
 [16] 1405F6B44 "void SetFogColorMulitplier(float);" 
 [17] 14031EBC0 "float GetOceanLevel();" 
 [18] 1405F6B74 "void SetFogDensity(float);" 
 [19] 14031EC0C "float GetAnimationWavesAmount();" 
 [20] 14031EC48 "void SetGodRaysEnabled(bool);" 
 [21] 14075959C "Color GetFogColor();" 
 [22] 1405F6B2C "Color GetFogColorPremultiplied();" 
 [23] 1407595A8 "void SetFogColor(const Color&);" 
 [24] 1404C7AC0 "void SetReflectResolutionScale(float);" 
 [25] 14031EC5C "void SetAnimationWindSpeed(float);" 
 [26] 14031EBF4 "void SetWaterTessellationAmount(int);" 
 [27] 1404C7AA8 "bool GetReflectionAnisotropic();" 
 [28] 14031EC3C "float GetCausticsIntensity();" 
 [29] 1405F6B68 "float GetFogDensity();" 
 [30] 14050D244 "bool GetUseOceanBottom();" 
 [31] 1405F6B50 "Color GetNearFogColor();" 
 [32] 14031EC54 "void SetAnimationWindDirection(float);" 
 [33] 14031EBE8 "void SetAnimationWavesSpeed(float);" 
 [34] 14031EBE0 "float GetAnimationWavesSize();" 
 [35] 14031EC70 "void SetAnimationWavesAmount(float);" 
 [36] 1405F6AF0 "void SetCausticsEnabled(bool);" 
 [37] 1405F6AE4 "float GetCausticsDistanceAttenuation();" 
 [38] 1404C7A9C "float GetReflectResolutionScale();" 
 [39] 14050D238 "void SetReflectionAnisotropic(bool);" 
 [40] 1405F6B20 "void SetCausticsDistanceAttenuation(float);" 
 [41] 14050D25C "bool GetGodRaysEnabled();" 
 [42] 1405F6ACC "float GetCausticsDepth();" 
 [43] 14050D268 "float GetUnderwaterDistortion();" 
 [44] 1405F6AD8 "float GetCausticsTiling();" 
 [45] 14050D220 "void SetUnderwaterDistortion(float);" 
m_virtualProperties:
 [00]
  1404C7AA8 "bool ReflectionAnisotropic();" 
 [01]
  1404C7A9C "float ReflectResolutionScale();" 
 [02]
  14050D268 "float UnderwaterDistortion();" 
 [03]
  1405F6B38 "float FogColorMulitplier();" 
 [04]
  1405F6B68 "float FogDensity();" 
 [05]
  1405F6ACC "float CausticsDepth();" 
 [06]
  14031EC0C "float WavesAmount();" 
 [07]
  1405F6AE4 "float CausticsDistanceAttenuation();" 
 [08]
  14050D244 "bool OceanBottom();" 
 [09]
  14075959C "Color FogColor();" 
 [10]
  14031EBD8 "float WavesSpeed();" 
 [11]
  1405F6B50 "Color NearFogColor();" 
 [12]
  14050D25C "bool GodRays();" 
 [13]
  14031EBE0 "float WavesSize();" 
 [14]
  14050D22C "bool CausticsEnabled();" 
 [15]
  14031EC3C "float CausticsIntensity();" 
 [16]
  1405F6AD8 "float CausticsTiling();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[036] "SnowComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14183C5B0 "const EntityId* SnowComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBE8 "void SetSnowFlakeCount(unsigned int);" 
 [01] 14031EBE0 "void SetSnowBrightness(float);" 
 [02] 14050D220 "SnowOptions GetSnowOptions();" 
 [03] 14031EBD8 "float GetSurfaceFreezing();" 
 [04] 14050D238 "float GetSnowFallWindScale();" 
 [05] 14031EC04 "float GetFrostAmount();" 
 [06] 14050D22C "void UpdateSnow();" 
 [07] 14031EC48 "float GetSnowFallTurbulenceFreq();" 
 [08] 14031EBC0 "void Enable();" 
 [09] 14031EC2C "bool IsEnabled();" 
 [10] 14031EBD0 "void SetSurfaceFreezing(float);" 
 [11] 14031EC24 "void Toggle();" 
 [12] 14031EBC8 "float GetRadius();" 
 [13] 1404C7AA8 "void SetSnowFallGravityScale(float);" 
 [14] 14031EC34 "void SetRadius(float);" 
 [15] 14031EC0C "float GetSnowBrightness();" 
 [16] 14031EBFC "void SetFrostAmount(float);" 
 [17] 14031EC1C "void Disable();" 
 [18] 14050D274 "unsigned int GetSnowFlakeCount();" 
 [19] 14031EBF4 "void SetSnowAmount(float);" 
 [20] 14031EC54 "void SetFrostBrightness(float);" 
 [21] 14050D250 "float GetSnowFallTurbulence();" 
 [22] 14031EC5C "float GetFrostBrightness();" 
 [23] 14031EC68 "float GetSnowAmount();" 
 [24] 14050D244 "void SetSnowFallTurbulence(float);" 
 [25] 14031EC70 "void SetSnowFlakeSize(float);" 
 [26] 1404C7A84 "float GetSnowFlakeSize();" 
 [27] 1404C7A90 "void SetSnowFallBrightness(float);" 
 [28] 1404C7A9C "float GetSnowFallBrightness();" 
 [29] 1404C7AB4 "float GetSnowFallGravityScale();" 
 [30] 1404C7AC0 "void SetSnowFallWindScale(float);" 
 [31] 14050D25C "void SetSnowFallTurbulenceFreq(float);" 
 [32] 14050D268 "void SetSnowOptions(SnowOptions);" 
m_virtualProperties:
 [00]
  14031EC48 "float SnowFallTurbulenceFreq();" 
  14031EC48 "float SnowFallTurbulenceFreq(EntityId);" 
 [01]
  14050D250 "float SnowFallTurbulence();" 
  14050D250 "float SnowFallTurbulence(EntityId);" 
 [02]
  14050D238 "float SnowFallWindScale();" 
  14050D238 "float SnowFallWindScale(EntityId);" 
 [03]
  1404C7AB4 "float SnowFallGravityScale();" 
  1404C7AB4 "float SnowFallGravityScale(EntityId);" 
 [04]
  14031EBD8 "float SurfaceFreezing();" 
  14031EBD8 "float SurfaceFreezing(EntityId);" 
 [05]
  14031EC0C "float SnowBrightness();" 
  14031EC0C "float SnowBrightness(EntityId);" 
 [06]
  14031EC04 "float FrostAmount();" 
  14031EC04 "float FrostAmount(EntityId);" 
 [07]
  14031EBC8 "float Radius();" 
  14031EBC8 "float Radius(EntityId);" 
 [08]
  14031EC68 "float SnowAmount();" 
  14031EC68 "float SnowAmount(EntityId);" 
 [09]
  14050D274 "unsigned int SnowFlakeCount();" 
  14050D274 "unsigned int SnowFlakeCount(EntityId);" 
 [10]
  1404C7A84 "float SnowFlakeSize();" 
  1404C7A84 "float SnowFlakeSize(EntityId);" 
 [11]
  14031EC5C "float FrostBrightness();" 
  14031EC5C "float FrostBrightness(EntityId);" 
 [12]
  1404C7A9C "float SnowFallBrightness();" 
  1404C7A9C "float SnowFallBrightness(EntityId);" 
 [13]
  14050D220 "SnowOptions SnowOptions();" 
  14050D220 "SnowOptions SnowOptions(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[037] "ScreenFaderNotificationBus" 
BehaviorParameter: m_name: "int", m_traits: 0
m_createHandler:
 141352D70 "BehaviorEBusHandler* ScreenFaderNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ScreenFaderNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14135BF40 "const int* ScreenFaderNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[038] "CharacterControllerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C875B0 "const EntityId* CharacterControllerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void RequestVelocity(const Vector3&);" 
 [01] 14031EC24 "void Integrate(float);" 
 [02] 14031EC1C "void CheckSupport(const Vector3&, float, RockNRoll::CharacterSupportInfo&);" 
 
[039] "CinematicEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 141827E40 "BehaviorEBusHandler* CinematicEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CinematicEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[040] "CinematicRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "void StopSequence(const char*);" 
 [01] 14031EBC0 "void PlaySequenceByName(const char*);" 
 [02] 14031EC14 "void PlaySequence(EntityId&);" 
 
[041] "SequenceComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141828050 "BehaviorEBusHandler* SequenceComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SequenceComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14183C550 "const EntityId* SequenceComponentNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[042] "SequenceComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14183C580 "const EntityId* SequenceComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "float GetPlaySpeed();" 
 [01] 14031EBE0 "float GetCurrentPlayTime();" 
 [02] 14031EC68 "void Resume();" 
 [03] 14031EBC8 "void Stop();" 
 [04] 14031EC34 "void PlayBetweenTimes(float, float);" 
 [05] 14031EBF4 "void Pause();" 
 [06] 14031EC04 "void JumpToTime(float);" 
 [07] 14031EC2C "void Play();" 
 [08] 14031EBD8 "void JumpToBeginning();" 
 [09] 14031EBFC "void SetPlaySpeed(float);" 
 [10] 14031EBD0 "void JumpToEnd();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[043] "UiProgressBarBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680450 "const EntityId* UiProgressBarBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetProgressPercent(float);" 
 [01] 14031EC1C "void SetProgress(float, float);" 
 [02] 14031EC24 "float GetProgress();" 
 
[044] "UiParticleEmitterBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680420 "const EntityId* UiParticleEmitterBus::GetCurrentBusId();" 
m_events:
 [00] 1415531F0 "void SetParticleAlpha(float);" 
 [01] 1415531D8 "void SetParticleColorTintVariation(float);" 
 [02] 1415531CC "float GetParticleColorTintVariation();" 
 [03] 141553190 "void SetParticleRotationSpeedVariation(float);" 
 [04] 141553178 "void SetParticleRotationSpeed(float);" 
 [05] 141553160 "void SetParticleInitialRotationVariation(float);" 
 [06] 141553148 "void SetParticleInitialRotation(float);" 
 [07] 14155313C "float GetParticleInitialRotation();" 
 [08] 141553130 "void SetParticleAcceleration(Vector2);" 
 [09] 141553124 "Vector2 GetParticleAcceleration();" 
 [10] 141553118 "void SetParticleSpeedVariation(float);" 
 [11] 14155310C "float GetParticleSpeedVariation();" 
 [12] 141553100 "void SetParticleSpeed(float);" 
 [13] 1415530C4 "void SetParticleInitialVelocity(Vector2);" 
 [14] 1415530AC "void SetParticleAccelerationMovementSpace(int);" 
 [15] 1405F6C88 "int GetParticleAccelerationMovementSpace();" 
 [16] 1405F6C64 "void SetParticleHeightVariation(float);" 
 [17] 1405F6C58 "float GetParticleHeightVariation();" 
 [18] 1405F6C40 "void SetParticleWidthVariation(float);" 
 [19] 1415531C0 "void SetParticleColorBrightnessVariation(float);" 
 [20] 14050D25C "float GetOutsideEmitDistance();" 
 [21] 1405F6C70 "int GetParticleMovementCoordinateType();" 
 [22] 1405F6BEC "Vector2 GetParticlePivot();" 
 [23] 14050D250 "void SetInsideEmitDistance(float);" 
 [24] 14050D244 "float GetInsideEmitDistance();" 
 [25] 1404C7A90 "unsigned int GetMaxParticles();" 
 [26] 1405F6B38 "void SetSpritePathname(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [27] 1404C7A84 "void SetIsParticleCountLimited(bool);" 
 [28] 1404C7A9C "void SetMaxParticles(unsigned int);" 
 [29] 14031EC70 "bool GetIsParticleCountLimited();" 
 [30] 14031EC48 "void SetOutsideEmitDistance(float);" 
 [31] 1405F6B08 "void SetParticleLifetime(float);" 
 [32] 14155316C "float GetParticleRotationSpeed();" 
 [33] 1405F6ACC "void SetEmitAngle(float);" 
 [34] 14031EC68 "void SetIsParticlePositionRelativeToEmitter(bool);" 
 [35] 1405F6B98 "void SetSpriteSheetCellIndex(int);" 
 [36] 14031EBF4 "bool GetIsParticlePositionRelativeToEmitter();" 
 [37] 14050D22C "float GetEmitAngle();" 
 [38] 14031EC2C "void SetIsRandomSeedFixed(bool);" 
 [39] 14031EBC8 "void SetRandomSeed(int);" 
 [40] 14031EC34 "int GetRandomSeed();" 
 [41] 14031EC24 "bool GetIsRandomSeedFixed();" 
 [42] 14031EBD8 "void SetIsEmitOnActivate(bool);" 
 [43] 14050D274 "void SetEmitterLifetime(float);" 
 [44] 1405F6C04 "Vector2 GetParticleSize();" 
 [45] 141015BC8 "void SetIsParticleInitialRotationFromInitialVelocity(bool);" 
 [46] 14031EC1C "void SetIsEmitting(bool);" 
 [47] 14050D268 "int GetParticleInitialDirectionType();" 
 [48] 1405F6C34 "float GetParticleWidthVariation();" 
 [49] 1415531B4 "float GetParticleColorBrightnessVariation();" 
 [50] 14050D220 "void SetParticleInitialDirectionType(int);" 
 [51] 141015BBC "bool GetIsParticleInitialRotationFromInitialVelocity();" 
 [52] 14031EBE8 "float GetEmitterLifetime();" 
 [53] 14155319C "Color GetParticleColor();" 
 [54] 1404C7AB4 "void SetEmitterShape(int);" 
 [55] 14031EBC0 "bool GetIsEmitting();" 
 [56] 14031EBFC "float GetParticleEmitRate();" 
 [57] 14031EC5C "void SetIsEmitterLifetimeInfinite(bool);" 
 [58] 14050D238 "void SetIsEmitOnEdge(bool);" 
 [59] 1415530E8 "float GetParticleSpeed();" 
 [60] 141015BA4 "bool GetIsParticleRotationFromVelocity();" 
 [61] 14031EBD0 "bool GetIsEmitOnActivate();" 
 [62] 14031EC54 "bool GetIsEmitterLifetimeInfinite();" 
 [63] 1405F6B80 "void SetIsSpriteSheetIndexRandom(bool);" 
 [64] 1415531A8 "void SetParticleColor(Color);" 
 [65] 14031EC04 "void SetParticleEmitRate(float);" 
 [66] 1404C7AA8 "int GetEmitterShape();" 
 [67] 1404C7AC0 "bool GetIsEmitOnEdge();" 
 [68] 141015BB0 "void SetIsParticleRotationFromVelocity(bool);" 
 [69] 14031EBE0 "bool GetIsHitParticleCountOnActivate();" 
 [70] 14031EC0C "void SetIsHitParticleCountOnActivate(bool);" 
 [71] 14031EC3C "float GetEmitAngleVariation();" 
 [72] 1405F6AD8 "void SetEmitAngleVariation(float);" 
 [73] 1415530B8 "Vector2 GetParticleInitialVelocity();" 
 [74] 1405F6AE4 "bool GetIsParticleLifetimeInfinite();" 
 [75] 1405F6AFC "float GetParticleLifetime();" 
 [76] 1405F6AF0 "void SetIsParticleLifetimeInfinite(bool);" 
 [77] 1405F6B68 "void SetIsSpriteSheetAnimationLooped(bool);" 
 [78] 1405F6BD4 "bool GetIsParticleAspectRatioLocked();" 
 [79] 1415530F4 "float GetParticleHeight();" 
 [80] 1405F6B14 "float GetParticleLifetimeVariation();" 
 [81] 1405F6B20 "void SetParticleLifetimeVariation(float);" 
 [82] 141553184 "float GetParticleRotationSpeedVariation();" 
 [83] 1415531E4 "float GetParticleAlpha();" 
 [84] 1407595A8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetSpritePathname();" 
 [85] 1405F6C7C "void SetParticleMovementCoordinateType(int);" 
 [86] 1405F6B44 "bool GetIsSpriteSheetAnimated();" 
 [87] 1405F6C10 "void SetParticleSize(Vector2);" 
 [88] 1405F6B50 "void SetIsSpriteSheetAnimated(bool);" 
 [89] 1405F6B5C "bool GetIsSpriteSheetAnimationLooped();" 
 [90] 1405F6B74 "bool GetIsSpriteSheetIndexRandom();" 
 [91] 1405F6B8C "int GetSpriteSheetCellIndex();" 
 [92] 1405F6BA4 "int GetSpriteSheetCellEndIndex();" 
 [93] 1405F6C4C "void SetParticleHeight(float);" 
 [94] 1405F6BB0 "void SetSpriteSheetCellEndIndex(int);" 
 [95] 1405F6BBC "float GetSpriteSheetFrameDelay();" 
 [96] 1405F6BC8 "void SetSpriteSheetFrameDelay(float);" 
 [97] 1405F6BE0 "void SetIsParticleAspectRatioLocked(bool);" 
 [98] 141553154 "float GetParticleInitialRotationVariation();" 
 [99] 1405F6BF8 "void SetParticlePivot(Vector2);" 
 [100] 1405F6C1C "float GetParticleWidth();" 
 [101] 1405F6C28 "void SetParticleWidth(float);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[045] "TickRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "float GetTickDeltaTime();" 
 [01] 14031EBC0 "ScriptTimePoint GetTimeAtCurrentTick();" 
 
[046] "UiRadioButtonBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680510 "const EntityId* UiRadioButtonBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetChangedActionName();" 
 [01] 14031EC34 "EntityId GetUncheckedEntity();" 
 [02] 14031EC1C "EntityId GetGroup();" 
 [03] 14031EBFC "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTurnOffActionName();" 
 [04] 14031EBD8 "void SetChangedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EBC0 "bool GetState();" 
 [06] 14031EC68 "void SetTurnOnActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 14031EC24 "EntityId GetCheckedEntity();" 
 [08] 14031EC2C "void SetCheckedEntity(EntityId);" 
 [09] 14031EBC8 "void SetUncheckedEntity(EntityId);" 
 [10] 14031EBF4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTurnOnActionName();" 
 [11] 14031EC04 "void SetTurnOffActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[047] "UiSpawnerBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416806F0 "const EntityId* UiSpawnerBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "SliceInstantiationTicket Spawn();" 
 [01] 14031EC1C "SliceInstantiationTicket SpawnRelative(const Vector2&);" 
 [02] 14031EC34 "SliceInstantiationTicket SpawnSlicePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EC24 "SliceInstantiationTicket SpawnAbsolute(const Vector2&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[048] "UiDynamicScrollBoxElementNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141650F50 "BehaviorEBusHandler* UiDynamicScrollBoxElementNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDynamicScrollBoxElementNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FF10 "const EntityId* UiDynamicScrollBoxElementNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[049] "UiDynamicScrollBoxDataBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141650EA0 "BehaviorEBusHandler* UiDynamicScrollBoxDataBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDynamicScrollBoxDataBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FEE0 "const EntityId* UiDynamicScrollBoxDataBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[050] "UiDynamicLayoutBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FEB0 "const EntityId* UiDynamicLayoutBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetNumChildElements(int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[051] "GameplayNotificationBus" 
BehaviorParameter: m_name: "GameplayNotificationId", m_traits: 0
m_createHandler:
 141C3C600 "BehaviorEBusHandler* GameplayNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GameplayNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87760 "const GameplayNotificationId* GameplayNotificationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void OnEventBegin(const any&);" 
 [01] 14031EC24 "void OnEventEnd(const any&);" 
 [02] 14031EC1C "void OnEventUpdating(const any&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[052] "UiTooltipBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680810 "const EntityId* UiTooltipBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetText();" 
 [01] 14031EC1C "void SetText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[053] "UiLayoutGridBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416802D0 "const EntityId* UiLayoutGridBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "int GetStartingDirection();" 
 [01] 14031EC04 "void SetVerticalOrder(int);" 
 [02] 14031EC34 "Vector2 GetCellSize();" 
 [03] 14031EBC0 "Padding GetPadding();" 
 [04] 14031EC24 "Vector2 GetSpacing();" 
 [05] 14031EC1C "void SetPadding(Padding);" 
 [06] 14031EC2C "void SetSpacing(Vector2);" 
 [07] 14031EBD8 "void SetStartingDirection(int);" 
 [08] 14031EBC8 "void SetCellSize(Vector2);" 
 [09] 14031EBF4 "int GetHorizontalOrder();" 
 [10] 14031EC68 "void SetHorizontalOrder(int);" 
 [11] 14031EBFC "int GetVerticalOrder();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[054] "ScreenFaderManagementRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "int GetNumFaderIDs();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[055] "UiLayoutRowBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680330 "const EntityId* UiLayoutRowBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void SetOrder(int);" 
 [01] 14031EC1C "void SetPadding(Padding);" 
 [02] 14031EC2C "void SetSpacing(float);" 
 [03] 14031EBC0 "Padding GetPadding();" 
 [04] 14031EC24 "float GetSpacing();" 
 [05] 14031EC34 "int GetOrder();" 
m_virtualProperties:
 [00]
  14031EBC0 "Padding Padding();" 
  14031EBC0 "Padding Padding(EntityId);" 
 [01]
  14031EC24 "float Spacing();" 
  14031EC24 "float Spacing(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[056] "UiLayoutCellDefaultBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680210 "const EntityId* UiLayoutCellDefaultBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "float GetTargetHeight();" 
 
[057] "UiLayoutColumnBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680270 "const EntityId* UiLayoutColumnBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void SetOrder(int);" 
 [01] 14031EC1C "void SetPadding(Padding);" 
 [02] 14031EC2C "void SetSpacing(float);" 
 [03] 14031EBC0 "Padding GetPadding();" 
 [04] 14031EC24 "float GetSpacing();" 
 [05] 14031EC34 "int GetOrder();" 
m_virtualProperties:
 [00]
  14031EBC0 "Padding Padding();" 
  14031EBC0 "Padding Padding(EntityId);" 
 [01]
  14031EC24 "float Spacing();" 
  14031EC24 "float Spacing(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[058] "UiLayoutFitterBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416802A0 "const EntityId* UiLayoutFitterBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "bool GetVerticalFit();" 
 [01] 14031EC2C "void SetVerticalFit(bool);" 
 [02] 14031EBC0 "bool GetHorizontalFit();" 
 [03] 14031EC1C "void SetHorizontalFit(bool);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[059] "UiFlipbookAnimationNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652760 "BehaviorEBusHandler* UiFlipbookAnimationNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiFlipbookAnimationNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680060 "const EntityId* UiFlipbookAnimationNotificationsBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[060] "UiFlipbookAnimationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680030 "const EntityId* UiFlipbookAnimationBus::GetCurrentBusId();" 
m_events:
 [00] 14050D244 "void SetFrameDelay(float);" 
 [01] 14050D238 "float GetFrameDelay();" 
 [02] 1404C7AB4 "bool GetIsAutoPlay();" 
 [03] 1404C7AA8 "void SetReverseDelay(float);" 
 [04] 14031EC70 "void SetStartDelay(float);" 
 [05] 1404C7A90 "void SetLoopDelay(float);" 
 [06] 14050D274 "float GetStartDelay();" 
 [07] 1404C7A84 "float GetLoopDelay();" 
 [08] 14031EBC8 "unsigned int GetEndFrame();" 
 [09] 14031EBE0 "void SetLoopType(int);" 
 [10] 14031EBFC "void SetCurrentFrame(unsigned int);" 
 [11] 14031EBC0 "void Start();" 
 [12] 14031EC68 "unsigned int GetCurrentFrame();" 
 [13] 14031EBD8 "int GetLoopType();" 
 [14] 14031EC1C "void Stop();" 
 [15] 14031EC24 "bool IsPlaying();" 
 [16] 14031EBF4 "void SetEndFrame(unsigned int);" 
 [17] 14031EC34 "void SetStartFrame(unsigned int);" 
 [18] 1404C7A9C "float GetReverseDelay();" 
 [19] 14031EC0C "float GetFramerate();" 
 [20] 14031EC2C "unsigned int GetStartFrame();" 
 [21] 1404C7AC0 "void SetIsAutoPlay(bool);" 
 [22] 14031EC04 "unsigned int GetLoopStartFrame();" 
 [23] 14031EBE8 "void SetFramerateUnit(int);" 
 [24] 14031EC5C "int GetFramerateUnit();" 
 [25] 14031EBD0 "void SetLoopStartFrame(unsigned int);" 
 [26] 14031EC54 "void SetFramerate(float);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[061] "UiDesaturatorNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141650DF0 "BehaviorEBusHandler* UiDesaturatorNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDesaturatorNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BFAC0 "void UiDesaturatorNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 14167FD00 "const EntityId* UiDesaturatorNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[062] "UiDesaturatorBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FCD0 "const EntityId* UiDesaturatorBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "bool IsSaturating();" 
 [01] 14031EBC0 "float GetSaturationValue();" 
 [02] 14031EC1C "void SetSaturationValue(float);" 
 [03] 14031EC24 "void Saturate(float, float);" 
m_virtualProperties:
 [00]
  14031EBC0 "float Saturation();" 
  14031EBC0 "float Saturation(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[063] "UiFaderNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651000 "BehaviorEBusHandler* UiFaderNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiFaderNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BFD90 "void UiFaderNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 141680000 "const EntityId* UiFaderNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[064] "UiScrollBoxNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651160 "BehaviorEBusHandler* UiScrollBoxNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiScrollBoxNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1416805D0 "const EntityId* UiScrollBoxNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[065] "UiTextInputNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651420 "BehaviorEBusHandler* UiTextInputNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiTextInputNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680780 "const EntityId* UiTextInputNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[066] "UiTextInputBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680750 "const EntityId* UiTextInputBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6B20 "void SetSelectionRange(int, int, const Color&);" 
 [01] 1405F6B14 "void BeginEdit();" 
 [02] 1405F6AF0 "unsigned int GetReplacementCharacter();" 
 [03] 1405F6AD8 "bool GetIsPasswordField();" 
 [04] 1405F6ACC "EntityId GetPlaceHolderTextEntity();" 
 [05] 1404C7AC0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetEndEditAction();" 
 [06] 14031EC68 "void SetMaxStringLength(int);" 
 [07] 1405F6AE4 "void SetIsPasswordField(bool);" 
 [08] 14031EBF4 "int GetMaxStringLength();" 
 [09] 14031EBC8 "void SetCursorBlinkInterval(float);" 
 [10] 14050D268 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetText();" 
 [11] 14031EC3C "void SetPlaceHolderTextEntity(EntityId);" 
 [12] 1405F6AFC "void SetReplacementCharacter(unsigned int);" 
 [13] 14050D250 "void SetEnterAction(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [14] 14031EC1C "void SetTextSelectionColor(const Color&);" 
 [15] 1404C7AB4 "void SetChangeAction(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [16] 14031EC24 "Color GetTextCursorColor();" 
 [17] 14050D244 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetEnterAction();" 
 [18] 14031EBC0 "Color GetTextSelectionColor();" 
 [19] 1404C7AA8 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetChangeAction();" 
 [20] 14031EC2C "void SetTextCursorColor(const Color&);" 
 [21] 14031EC34 "float GetCursorBlinkInterval();" 
 [22] 14050D220 "void SetText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [23] 14050D238 "void SetEndEditAction(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [24] 14050D25C "EntityId GetTextEntity();" 
 [25] 14031EC48 "void SetTextEntity(EntityId);" 
m_virtualProperties:
 [00]
  14031EBF4 "int MaxStringLength();" 
  14031EBF4 "int MaxStringLength(EntityId);" 
 [01]
  14031EBC0 "Color TextSelectionColor();" 
  14031EBC0 "Color TextSelectionColor(EntityId);" 
 [02]
  14031EC24 "Color TextCursorColor();" 
  14031EC24 "Color TextCursorColor(EntityId);" 
 [03]
  14031EC34 "float CursorBlinkInterval();" 
  14031EC34 "float CursorBlinkInterval(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[067] "UiSliderBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680690 "const EntityId* UiSliderBus::GetCurrentBusId();" 
m_events:
 [00] 14050D274 "EntityId GetTrackEntity();" 
 [01] 14031EC5C "void SetValueChangedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC1C "void SetValue(double);" 
 [03] 14031EBC8 "void SetMaxValue(double);" 
 [04] 14031EBC0 "double GetValue();" 
 [05] 14031EC34 "double GetMaxValue();" 
 [06] 14031EBF4 "double GetStepValue();" 
 [07] 14031EC2C "void SetMinValue(double);" 
 [08] 14031EBD8 "void SetValueChangingActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EC68 "void SetStepValue(double);" 
 [10] 1404C7A9C "EntityId GetManipulatorEntity();" 
 [11] 14031EC24 "double GetMinValue();" 
 [12] 14031EC70 "void SetFillEntity(EntityId);" 
 [13] 14031EBE8 "void SetTrackEntity(EntityId);" 
 [14] 1404C7A84 "EntityId GetFillEntity();" 
 [15] 1404C7A90 "void SetManipulatorEntity(EntityId);" 
 [16] 14031EBD0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetValueChangingActionName();" 
 [17] 14031EC54 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetValueChangedActionName();" 
m_virtualProperties:
 [00]
  14031EC24 "double MinValue();" 
  14031EC24 "double MinValue(EntityId);" 
 [01]
  14031EBF4 "double StepValue();" 
  14031EBF4 "double StepValue(EntityId);" 
 [02]
  14031EBC0 "double Value();" 
  14031EBC0 "double Value(EntityId);" 
 [03]
  14031EC34 "double MaxValue();" 
  14031EC34 "double MaxValue(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[068] "UiDraggableNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652290 "BehaviorEBusHandler* UiDraggableNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDraggableNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BFBB0 "void UiDraggableNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 14167FD60 "const EntityId* UiDraggableNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[069] "UiScrollerBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680630 "const EntityId* UiScrollerBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "void SetValueChangedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBE0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetValueChangedActionName();" 
 [02] 14031EBD8 "void SetValueChangingActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EC2C "void SetOrientation(int);" 
 [04] 14031EC24 "int GetOrientation();" 
 [05] 14031EC1C "void SetValue(float);" 
 [06] 14031EBC0 "float GetValue();" 
 [07] 14031EBD0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetValueChangingActionName();" 
m_virtualProperties:
 [00]
  14031EBC0 "float Value();" 
  14031EBC0 "float Value(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[070] "UiDraggableBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FD30 "const EntityId* UiDraggableBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void SetAsProxy(EntityId, Vector2);" 
 [01] 14031EC34 "void ProxyDragEnd(Vector2);" 
 [02] 14031EBC0 "int GetDragState();" 
 [03] 14031EC1C "void SetDragState(int);" 
 [04] 14031EC24 "void RedoDrag(Vector2);" 
 [05] 14031EC68 "bool GetCanDropOnAnyCanvas();" 
 [06] 14031EBFC "void SetCanDropOnAnyCanvas(bool);" 
 [07] 14031EBC8 "bool IsProxy();" 
 [08] 14031EBF4 "EntityId GetOriginalFromProxy();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[071] "UiCheckboxNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652080 "BehaviorEBusHandler* UiCheckboxNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCheckboxNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FC70 "const EntityId* UiCheckboxNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[072] "UiMarkupButtonNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652A20 "BehaviorEBusHandler* UiMarkupButtonNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiMarkupButtonNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BFF70 "void UiMarkupButtonNotificationsBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 141680390 "const EntityId* UiMarkupButtonNotificationsBus::GetCurrentBusId();" 
 
[073] "UiButtonNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416516E0 "BehaviorEBusHandler* UiButtonNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiButtonNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BF8E0 "void UiButtonNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 14167FA00 "const EntityId* UiButtonNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[074] "UiButtonBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167F9D0 "const EntityId* UiButtonBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetOnClickActionName();" 
 [01] 14031EC2C "void SetOnClickActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EBC8 "void SetUseClickBehavior(bool);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[075] "UiTextBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416807B0 "const EntityId* UiTextBus::GetCurrentBusId();" 
m_events:
 [00] 14050D274 "void SetHorizontalTextAlignment(int);" 
 [01] 14031EBE8 "int GetHorizontalTextAlignment();" 
 [02] 14031EBE0 "float GetFontSize();" 
 [03] 1404C7A9C "void SetCharacterSpacing(float);" 
 [04] 14031EC70 "int GetVerticalTextAlignment();" 
 [05] 14031EC2C "void SetTextWithFlags(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [06] 14031EBD8 "void SetFontEffectByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 1405F6AFC "void SetOverflowMode(int);" 
 [08] 14031EBF4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetFont();" 
 [09] 1404C7AA8 "float GetLineSpacing();" 
 [10] 1405F6B74 "int GetTextWidthFromCache(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [11] 14031EC34 "Color GetColor();" 
 [12] 1405F6AF0 "int GetOverflowMode();" 
 [13] 14031EC68 "void SetFont(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [14] 1404C7AB4 "void SetLineSpacing(float);" 
 [15] 14031EBC8 "void SetColor(const Color&);" 
 [16] 14031EBD0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetFontEffectName(int);" 
 [17] 1405F6B68 "void SetTextCase(int);" 
 [18] 14031EBC0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetText();" 
 [19] 14031EC1C "void SetText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [20] 1405F6B38 "void SetIsMarkupEnabled(bool);" 
 [21] 14031EC0C "void SetFontSize(float);" 
 [22] 14031EBFC "int GetFontEffect();" 
 [23] 1404C7A90 "float GetCharacterSpacing();" 
 [24] 1405F6B80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetWrappedTextFromCache(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [25] 1404C7A84 "void SetVerticalTextAlignment(int);" 
 [26] 14031EC04 "void SetFontEffect(int);" 
 [27] 1405F6B08 "int GetWrapText();" 
 [28] 1407595A8 "bool GetIsMarkupEnabled();" 
 [29] 1405F6B14 "void SetWrapText(int);" 
 [30] 1405F6B20 "int GetShrinkToFit();" 
 [31] 1405F6B2C "void SetShrinkToFit(int);" 
 [32] 14050D220 "Vector2 GetTextSize();" 
 [33] 14031EC48 "void SetSelectionRange(int, int, const Color&);" 
 [34] 1405F6B5C "int GetTextCase();" 
 [35] 14050D22C "float GetTextWidth();" 
 [36] 1405F6ACC "float GetTextHeight();" 
m_virtualProperties:
 [00]
  14031EBE0 "float FontSize();" 
  14031EBE0 "float FontSize(EntityId);" 
 [01]
  1404C7A90 "float CharacterSpacing();" 
  1404C7A90 "float CharacterSpacing(EntityId);" 
 [02]
  14031EC34 "Color Color();" 
  14031EC34 "Color Color(EntityId);" 
 [03]
  1404C7AA8 "float LineSpacing();" 
  1404C7AA8 "float LineSpacing(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[076] "UiTransformChangeNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652FA0 "BehaviorEBusHandler* UiTransformChangeNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiTransformChangeNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680870 "const EntityId* UiTransformChangeNotificationBus::GetCurrentBusId();" 
 
[077] "UiElementBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FF70 "const EntityId* UiElementBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBE0 "AZStd::vector<EntityId, allocator> GetChildren();" 
 [01] 14031EBE8 "void Reparent(EntityId, EntityId);" 
 [02] 1405F6AD8 "bool IsAncestor(EntityId);" 
 [03] 14031EBD0 "int GetIndexOfChildByEntityId(EntityId);" 
 [04] 14031EBFC "EntityId GetChild(int);" 
 [05] 14031EBC8 "EntityId GetParent();" 
 [06] 14031EC54 "void DestroyElement();" 
 [07] 1405F6ACC "int GetRenderPriority();" 
 [08] 14031EC2C "EntityId GetCanvas();" 
 [09] 14050D244 "EntityId FindDescendantByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [10] 14031EC24 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetName();" 
 [11] 14031EBF4 "int GetNumChildElements();" 
 [12] 14050D238 "EntityId FindChildByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [13] 1405F6AE4 "bool IsEnabled();" 
 [14] 1405F6AF0 "void SetIsEnabled(bool);" 
 [15] 1405F6AFC "bool GetAreElementAndAncestorsEnabled();" 
 [16] 14031EC3C "void SetRenderPriority(int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[078] "UiTransformBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416808A0 "const EntityId* UiTransformBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6B98 "void SetComputeTransformWhenHidden(bool);" 
 [01] 1405F6ACC "Vector2 GetViewportPosition();" 
 [02] 1407595A8 "void MoveViewportPositionBy(const Vector2&);" 
 [03] 14031EC5C "void SetScaleToDevice(bool);" 
 [04] 1405F6B2C "float GetLocalPositionY();" 
 [05] 14031EC54 "bool GetScaleToDevice();" 
 [06] 1405F6AD8 "Vector2 GetCanvasPosition();" 
 [07] 14031EC0C "void SetPivotY(float);" 
 [08] 1405F6B8C "bool GetComputeTransformWhenHidden();" 
 [09] 14031EBE0 "float GetPivotY();" 
 [10] 1405F6AF0 "void SetCanvasPosition(const Vector2&);" 
 [11] 14031EBD8 "void SetPivotX(float);" 
 [12] 14031EBD0 "float GetPivotX();" 
 [13] 14031EC24 "Vector2 GetScale();" 
 [14] 14031EC2C "void SetScale(Vector2);" 
 [15] 1405F6B14 "float GetLocalPositionX();" 
 [16] 1405F6B68 "Vector2 ViewportPointToLocalPoint(Vector2);" 
 [17] 14031EBC0 "float GetZRotation();" 
 [18] 14031EBC8 "void SetScaleX(float);" 
 [19] 14031EC04 "void SetPivot(Vector2);" 
 [20] 1405F6B44 "void MoveLocalPositionBy(const Vector2&);" 
 [21] 14031EC34 "float GetScaleX();" 
 [22] 14031EBFC "Vector2 GetPivot();" 
 [23] 14031EC1C "void SetZRotation(float);" 
 [24] 14031EBF4 "float GetScaleY();" 
 [25] 14031EC68 "void SetScaleY(float);" 
 [26] 14031EC3C "void SetViewportPosition(const Vector2&);" 
 [27] 1405F6AFC "Vector2 GetLocalPosition();" 
 [28] 1405F6B08 "void SetLocalPosition(const Vector2&);" 
 [29] 14050D274 "Rect GetViewportSpaceRect();" 
 [30] 1405F6B20 "void SetLocalPositionX(float);" 
 [31] 14075959C "void SetLocalPositionY(float);" 
 [32] 1405F6B38 "void MoveCanvasPositionBy(const Vector2&);" 
 [33] 1405F6B80 "void SetRecomputeFlags(int);" 
 [34] 1405F6AE4 "void SetAnchorsByViewportPosition(const Vector2&);" 
m_virtualProperties:
 [00]
  14031EBC0 "float Rotation();" 
  14031EBC0 "float Rotation(EntityId);" 
 [01]
  1405F6B2C "float LocalPositionY();" 
  1405F6B2C "float LocalPositionY(EntityId);" 
 [02]
  14031EBF4 "float ScaleY();" 
  14031EBF4 "float ScaleY(EntityId);" 
 [03]
  14031EC34 "float ScaleX();" 
  14031EC34 "float ScaleX(EntityId);" 
 [04]
  1405F6B14 "float LocalPositionX();" 
  1405F6B14 "float LocalPositionX(EntityId);" 
 [05]
  14031EBD0 "float PivotX();" 
  14031EBD0 "float PivotX(EntityId);" 
 [06]
  14031EBE0 "float PivotY();" 
  14031EBE0 "float PivotY(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[079] "UiAnimationNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416514D0 "BehaviorEBusHandler* UiAnimationNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiAnimationNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BF7F0 "void UiAnimationNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 14167F9A0 "const EntityId* UiAnimationNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[080] "UiCanvasBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FAF0 "const EntityId* UiCanvasBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6BE0 "bool GetIsRenderToTexture();" 
 [01] 1405F6C34 "void SetIsNavigationSupported(bool);" 
 [02] 1405F6B98 "bool GetEnabled();" 
 [03] 1404C7AC0 "EntityId FindElementByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 1415530D0 "void ForceHoverInteractable(EntityId);" 
 [05] 14031EC2C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetCanvasName();" 
 [06] 1405F6BA4 "void SetEnabled(bool);" 
 [07] 14031EC0C "void SetKeepLoadedOnLevelUnload(bool);" 
 [08] 1404C7A9C "EntityId CreateChildElement(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EBF4 "int GetDrawOrder();" 
 [10] 1405F6C10 "bool GetIsPositionalInputSupported();" 
 [11] 1405F6B80 "void SetIsPixelAligned(bool);" 
 [12] 14031EBFC "bool GetKeepLoadedOnLevelUnload();" 
 [13] 14031EC68 "void SetDrawOrder(int);" 
 [14] 1405F6BC8 "void SetActiveInteractable(EntityId, bool);" 
 [15] 1405F6B74 "bool GetIsPixelAligned();" 
 [16] 1405F6C70 "void QueueHoverInteractableReset();" 
 [17] 14031EC54 "void RecomputeChangedLayouts();" 
 [18] 1405F6B20 "EntityId CloneElement(EntityId, EntityId, EntityId);" 
 [19] 14031EC5C "int GetNumChildElements();" 
 [20] 1415530DC "void InitializeMultithread();" 
 [21] 14050D274 "EntityId GetChildElement(int);" 
 [22] 1405F6BEC "void SetIsRenderToTexture(bool);" 
 [23] 1404C7A84 "AZStd::vector<EntityId, allocator> GetChildElements();" 
 [24] 1415530C4 "EntityId GetHoverInteractable();" 
 [25] 1405F6BF8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetRenderTargetName();" 
 [26] 1405F6C7C "Vector2 GetMousePosition();" 
 [27] 1405F6C04 "void SetRenderTargetName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [28] 1405F6C1C "void SetIsPositionalInputSupported(bool);" 
 [29] 1405F6C28 "bool GetIsNavigationSupported();" 
 [30] 1405F6C88 "EntityId GetTooltipDisplayElement();" 
 [31] 1415530AC "void SetTooltipDisplayElement(EntityId);" 
 [32] 1405F6B44 "Vector2 GetCanvasSize();" 
 [33] 1405F6B50 "void SetCanvasSize(const Vector2&);" 
 [34] 1415530E8 "void StopMultithread();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[081] "ParticleComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87A00 "const EntityId* ParticleComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6AD8 "void EmitPulse();" 
 [01] 14050D22C "ParticleEmitterSettings GetEmitterSettings();" 
 [02] 14031EC48 "void SetRTPC(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 1404C7AB4 "float GetParticleSizeScaleY();" 
 [04] 14050D250 "void SetLifetimeStrength(float);" 
 [05] 1404C7A90 "void SetParticleSizeScaleY(float);" 
 [06] 14050D220 "void SetUseVisArea(bool);" 
 [07] 1404C7AA8 "float GetParticleSizeScaleX();" 
 [08] 1404C7A84 "void SetParticleSizeScaleX(float);" 
 [09] 14031EC0C "void SetTimeScale(float);" 
 [10] 1404C7AC0 "float GetParticleSizeScaleZ();" 
 [11] 14031EBC8 "bool GetEnable();" 
 [12] 14031EBF4 "void EnablePreRoll(bool);" 
 [13] 14031EBD8 "void SetCountScale(float);" 
 [14] 14031EBE8 "float GetSpeedScale();" 
 [15] 14050D25C "void EnableAudio(bool);" 
 [16] 14031EBE0 "float GetCountScale();" 
 [17] 14031EBC0 "void Show();" 
 [18] 14031EC5C "void SetSpeedScale(float);" 
 [19] 1404C7A9C "void SetParticleSizeScaleZ(float);" 
 [20] 14031EC2C "bool GetVisibility();" 
 [21] 14031EC68 "void SetColorTint(const Color&);" 
 [22] 14031EBFC "Color GetColorTint();" 
 [23] 14031EC24 "void SetVisibility(bool);" 
 [24] 14031EBD0 "float GetAlphaScale();" 
 [25] 14050D274 "void SetGlobalSizeScale(float);" 
 [26] 14050D268 "void SetViewDistMultiplier(float);" 
 [27] 14031EC1C "void Hide();" 
 [28] 14031EC34 "void Enable(bool);" 
 [29] 14031EC04 "void SetAlphaScale(float);" 
 [30] 14031EC70 "float GetGlobalSizeScale();" 
 [31] 14031EC54 "float GetTimeScale();" 
m_virtualProperties:
 [00]
  1404C7AC0 "float ParticleSizeScaleZ();" 
  1404C7AC0 "float ParticleSizeScaleZ(EntityId);" 
 [01]
  1404C7AB4 "float ParticleSizeScaleY();" 
  1404C7AB4 "float ParticleSizeScaleY(EntityId);" 
 [02]
  14031EBD0 "float AlphaScale();" 
  14031EBD0 "float AlphaScale(EntityId);" 
 [03]
  14031EC2C "bool Visible();" 
  14031EC2C "bool Visible(EntityId);" 
 [04]
  14031EBFC "Color ColorTint();" 
  14031EBFC "Color ColorTint(EntityId);" 
 [05]
  14031EBC8 "bool Enable();" 
  14031EBC8 "bool Enable(EntityId);" 
 [06]
  14031EBE0 "float CountScale();" 
  14031EBE0 "float CountScale(EntityId);" 
 [07]
  14031EC54 "float TimeScale();" 
  14031EC54 "float TimeScale(EntityId);" 
 [08]
  14031EBE8 "float SpeedScale();" 
  14031EBE8 "float SpeedScale(EntityId);" 
 [09]
  14031EC70 "float GlobalSizeScale();" 
  14031EC70 "float GlobalSizeScale(EntityId);" 
 [10]
  1404C7AA8 "float ParticleSizeScaleX();" 
  1404C7AA8 "float ParticleSizeScaleX(EntityId);" 
 
[082] "UiCanvasRefNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651C60 "BehaviorEBusHandler* UiCanvasRefNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCanvasRefNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FC10 "const EntityId* UiCanvasRefNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[083] "UiRadioButtonGroupCommunicationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680480 "const EntityId* UiRadioButtonGroupCommunicationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void RequestRadioButtonStateChange(EntityId, bool);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[084] "UiCanvasLuaBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FB50 "const EntityId* UiCanvasLuaBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "EntityId FindElementByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC24 "bool GetEnabled();" 
 [02] 14031EC2C "void SetEnabled(bool);" 
 [03] 14031EBC0 "EntityId FindElementById(unsigned int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[085] "UiCanvasLoaderEntityBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FB20 "const EntityId* UiCanvasLoaderEntityBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "EntityId GetLoaderEntityId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[086] "UiCursorBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "bool IsUiCursorVisible();" 
 [01] 14031EBC0 "void DecrementVisibleCounter();" 
 [02] 14031EC14 "void IncrementVisibleCounter();" 
 [03] 14031EC2C "Vector2 GetUiCursorPosition();" 
 [04] 14031EC24 "void SetUiCursor(const char*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[087] "UiCanvasManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "EntityId CreateCanvas();" 
 [01] 14031EBC0 "EntityId LoadCanvas(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC1C "void UnloadCanvas(EntityId);" 
 [03] 14031EC24 "EntityId FindLoadedCanvasByPathName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[088] "ConstraintComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87610 "const EntityId* ConstraintComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void EnableConstraint();" 
 [01] 14031EBC0 "void SetConstraintEntities(const EntityId&, const EntityId&);" 
 [02] 14031EC1C "void SetConstraintEntitiesWithPartIds(const EntityId&, int, const EntityId&, int);" 
 [03] 14031EC2C "void DisableConstraint();" 
 
[089] "SphereShapeComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87D60 "const EntityId* SphereShapeComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void SetRadius(float);" 
 [01] 14031EBC0 "SphereShapeConfig GetSphereConfiguration();" 
 
[090] "UiNavigationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416803F0 "const EntityId* UiNavigationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC04 "void SetOnRightEntity(EntityId);" 
 [01] 14031EC34 "EntityId GetOnDownEntity();" 
 [02] 14031EC24 "EntityId GetOnUpEntity();" 
 [03] 14031EBF4 "EntityId GetOnLeftEntity();" 
 [04] 14031EC68 "void SetOnLeftEntity(EntityId);" 
 [05] 14031EC2C "void SetOnUpEntity(EntityId);" 
 [06] 14031EBC0 "int GetNavigationMode();" 
 [07] 14031EC1C "void SetNavigationMode(int);" 
 [08] 14031EBC8 "void SetOnDownEntity(EntityId);" 
 [09] 14031EBFC "EntityId GetOnRightEntity();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[091] "UiLayoutBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680300 "const EntityId* UiLayoutBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void SetIgnoreDefaultLayoutCells(bool);" 
 [01] 14031EC34 "void SetHorizontalChildAlignment(int);" 
 [02] 14031EC2C "int GetHorizontalChildAlignment();" 
 [03] 14031EBF4 "void SetVerticalChildAlignment(int);" 
 [04] 14031EBC8 "int GetVerticalChildAlignment();" 
 [05] 14031EC1C "bool GetIgnoreDefaultLayoutCells();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[092] "UiInteractableNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416510B0 "BehaviorEBusHandler* UiInteractableNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiInteractableNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BFE80 "void UiInteractableNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 1416801B0 "const EntityId* UiInteractableNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[093] "UiRadioButtonGroupNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652AD0 "BehaviorEBusHandler* UiRadioButtonGroupNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiRadioButtonGroupNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1416804E0 "const EntityId* UiRadioButtonGroupNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[094] "DecalComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C876D0 "const EntityId* DecalComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void Hide();" 
 [01] 14031EC24 "void SetVisibility(bool);" 
 [02] 14031EBC0 "void Show();" 
 
[095] "ProfanityFilterRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> ProcessText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC14 "void SetDictionary(const char*);" 
 [02] 14031EC1C "bool IsUsingBadWords(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[096] "ScriptedEntityTweenerNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 141352E20 "BehaviorEBusHandler* ScriptedEntityTweenerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ScriptedEntityTweenerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[097] "JavelinRadioButtonBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167F940 "const EntityId* JavelinRadioButtonBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "bool GetState();" 
 [01] 14031EC1C "void SetState(bool, bool);" 
 [02] 14031EC24 "void SetOptionalSelectedEntity(EntityId);" 
 [03] 14031EC2C "EntityId GetOptionalSelectedEntity();" 
 
[098] "GameModeParticipantComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 142BEF080 "const EntityId* GameModeParticipantComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "void SendClientEventWithValue(const Crc32&, int);" 
 [01] 14031EC04 "void SendClientEvent(const Crc32&);" 
 
[099] "StorageComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1427CC850 "const EntityId* StorageComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "bool ChangeStorageSessionForPlayer(EntityId, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[100] "InputEventNotificationBus" 
BehaviorParameter: m_name: "InputEventNotificationId", m_traits: 0
m_createHandler:
 141C3C760 "BehaviorEBusHandler* InputEventNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void InputEventNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C877F0 "const InputEventNotificationId* InputEventNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[101] "PlayerGenericInviteComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 142C9D050 "BehaviorEBusHandler* PlayerGenericInviteComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PlayerGenericInviteComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 142C9EA40 "const EntityId* PlayerGenericInviteComponentNotificationBus::GetCurrentBusId();" 
 
[102] "PlayerGenericInviteComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 142C9EA70 "const EntityId* PlayerGenericInviteComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "void RequestReplyToInvite(bool);" 
 [01] 14031EC24 "const GenericInviteStaticData& GetInviteStaticData(Crc32);" 
 [02] 14031EC1C "bool CheckThrottle(Crc32);" 
 [03] 14031EBF4 "int ValidateEligibilityByEntityId(Crc32, const Vector3&, const EntityId&);" 
 [04] 14031EC68 "bool RequestSendNewInvite(const GenericInviteRequest&);" 
 [05] 14031EBC0 "bool HasPendingInvite();" 
 [06] 14031EC34 "int ValidateEligibilityByCharacterId(Crc32, const Vector3&, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[103] "P2PTradeComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14374E570 "const EntityId* P2PTradeComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC68 "void CancelTrade();" 
 [01] 14031EC1C "AZ::u64 GetOfferedCoin(bool);" 
 [02] 14031EBF4 "void ConfirmTrade();" 
 [03] 14031EBC0 "const AZStd::vector<ItemContainerSlot, allocator>& GetOfferedItems(bool);" 
 [04] 14031EC34 "void UpdateOfferedCoin(AZ::u64);" 
 [05] 14031EC24 "bool IsOfferLockedIn(bool);" 
 [06] 14031EC2C "void UpdateOfferedItems(const AZStd::vector<int, allocator>&, const AZStd::vector<int, allocator>&);" 
 [07] 14031EBC8 "void LockInOffer();" 
 
[104] "CraftingRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1405F6B74 "unsigned int GetCooldownDuration(Crc32);" 
 [01] 1405F6B68 "unsigned int GetRemainingCooldownCount(Crc32);" 
 [02] 1405F6B5C "bool IsRecipeOnCooldown(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 [03] 1405F6B8C "AZStd::vector<Crc32, allocator>& GetAllPossibleResults(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 1405F6B38 "unsigned int GetCraftingFeeOnCurrentTerritory(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 [05] 1405F6B2C "NumberRange GetGearScoreBonus(const RecipeData&, unsigned int, Crc32, const AZStd::vector<Crc32, allocator>&);" 
 [06] 1405F6B08 "const StaticItemData& GetItemDataByRecipeId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 14031EC0C "AZStd::vector<ItemDescriptor, allocator> GetSalvageOutputFromDescriptor(const ItemDescriptor&, unsigned int);" 
 [08] 14050D268 "const ItemDescriptor& GetPotentialResultItemDescriptor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EC5C "int GetRecipeTradeskillLevel(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [10] 1405F6AE4 "const AZStd::vector<int, allocator>& GetRolls(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [11] 14050D274 "AZStd::vector<ItemDescriptor, allocator> GetRecipe(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [12] 14031EBE0 "AZStd::vector<ItemDescriptor, allocator> GetSalvageOutput(int, unsigned int);" 
 [13] 14031EBC8 "void OnCraftingScreenHidden();" 
 [14] 1404C7AB4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetRecipeResultIconName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [15] 1407595A8 "AZStd::vector<CraftingFeeDiscountEntry, allocator>& GetCraftingDiscountList(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [16] 14031EC24 "bool CraftRecipe(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int, Crc32, unsigned int, const AZStd::vector<Crc32, allocator>&);" 
 [17] 14031EBF4 "bool IsValidRecipe(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int&);" 
 [18] 14031EC04 "bool CanCraftRecipe(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::vector<Crc32, allocator>&);" 
 [19] 14031EC2C "int GetRecipeOutputQuantity(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [20] 1404C7A90 "const Crc32& GetRecipeResultId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [21] 14031EC48 "unsigned int GetPerkCostForLocalPlayer(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [22] 14050D250 "bool IsSpecialItemAttributePerk(Crc32);" 
 [23] 1404C7A9C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetRecipeResultDisplayName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [24] 14031EC34 "void CancelCrafting();" 
 [25] 1405F6AFC "bool IsRecipeRefining(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [26] 14031EC54 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetRecipeTradeskill(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [27] 14031EBE8 "int GetRequiredRecipeLevel(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [28] 1404C7A84 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetRecipes();" 
 [29] 1405F6AD8 "int GetTradeskillLevelRequiredForRecipeLevel(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [30] 1405F6B50 "bool HasCooldown(Crc32);" 
 [31] 14031EC68 "bool IsRecipeKnown(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [32] 14031EBFC "bool IsRecipeBlockedByAchievement(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [33] 14050D244 "bool GetRecipeHasResultofTier(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 [34] 1404C7AA8 "int GetRecipeResultQuantity(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [35] 1405F6B44 "bool IsCurrentCraftingStationCamp();" 
 [36] 1404C7AC0 "int GetRecipeResultTier(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [37] 1405F6B14 "int GetBonusRollBonus(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [38] 14050D238 "Crc32 GetProceduralCraftingResult(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::vector<Crc32, allocator>&);" 
 [39] 14050D25C "bool IsSpecialItemGemSlotPerk(Crc32);" 
 [40] 14050D220 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetRecipeResultItemType(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [41] 14050D22C "bool GetRecipeResultIsTrinket(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [42] 1405F6ACC "bool GetRecipeResultIsBag(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [43] 1405F6AF0 "bool IsRecipeCraftAll(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [44] 1405F6B80 "WallClockTimePoint GetCooldownEndTime(Crc32);" 
 [45] 14031EC3C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetCraftingStationName();" 
 [46] 14075959C "float GetChanceForBonusItems(const RecipeData&, const AZStd::vector<Crc32, allocator>&);" 
 
[105] "SimpleStateComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3CCE0 "BehaviorEBusHandler* SimpleStateComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SimpleStateComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87CA0 "const EntityId* SimpleStateComponentNotificationBus::GetCurrentBusId();" 
 
[106] "NpcComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 142F40F60 "const EntityId* NpcComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void RequestPublishNpcStates();" 
 [01] 14031EC1C "const StaticNPCData& GetNpcData();" 
 
[107] "ProgressionRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1433F5580 "const EntityId* ProgressionRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "int GetMaxLevel();" 
 
[108] "UiSliderNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652EF0 "BehaviorEBusHandler* UiSliderNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiSliderNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1416806C0 "const EntityId* UiSliderNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[109] "UiGatheringComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143D93AE0 "const EntityId* UiGatheringComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "ItemContainerSlot GetFirstSlotWithItem(const ItemDescriptor&);" 
 [01] 14031EC1C "ItemContainerSlot GetValidGatheringToolList(Crc32);" 
 
[110] "UiTriggerAreaEventNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1438D33F0 "BehaviorEBusHandler* UiTriggerAreaEventNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiTriggerAreaEventNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[111] "UiDropTargetBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FD90 "const EntityId* UiDropTargetBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetOnDropActionName();" 
 [01] 14031EC1C "void SetOnDropActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EBC8 "int GetDropState();" 
 [03] 14031EBF4 "void SetDropState(int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[112] "DamageNumbersAnchorBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143828AD0 "const EntityId* DamageNumbersAnchorBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void ConnectMarkerId(EntityId);" 
 [01] 14031EC1C "void DisconnectMarkerId(EntityId);" 
 
[113] "SpawnerComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87D30 "const EntityId* SpawnerComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "SliceInstantiationTicket SpawnRelative(const Transform&);" 
 [01] 14031EBD8 "AZStd::vector<SliceInstantiationTicket, allocator> GetCurrentlySpawnedSlices();" 
 [02] 14031EC2C "SliceInstantiationTicket Spawn();" 
 [03] 14031EBC8 "SliceInstantiationTicket SpawnAbsolute(const Transform&);" 
 [04] 14031EC04 "void DestroySpawnedSlice(const SliceInstantiationTicket&);" 
 [05] 14031EC54 "AZStd::vector<EntityId, allocator> GetAllCurrentlySpawnedEntities();" 
 [06] 14031EBD0 "void DestroyAllSpawnedSlices();" 
 [07] 14031EBE0 "bool HasAnyCurrentlySpawnedSlices();" 
 [08] 14031EC0C "AZStd::vector<EntityId, allocator> GetCurrentEntitiesFromSpawnedSlice(const SliceInstantiationTicket&);" 
 
[114] "DamageNumbersNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 143826660 "BehaviorEBusHandler* DamageNumbersNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void DamageNumbersNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 143828B00 "const EntityId* DamageNumbersNotificationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void NOCALL_OnCombinedDamageDisplayed(const AZStd::vector<DamageByTypeData, allocator>&, bool, float, int, bool, const AZStd::vector<AZStd::pair<float, float>, allocator>&);" 
 
[115] "ChatMessageBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1437CF220 "const EntityId* ChatMessageBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "ChatMessageComponent& GetChatMessage();" 
 
[116] "CollapsableScrollListBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143828A70 "const EntityId* CollapsableScrollListBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC54 "int GetNumVisibleEntries();" 
 [01] 14031EC0C "void SelectFirstEntity();" 
 [02] 14031EBFC "void UpdateCurrentSelection();" 
 [03] 14031EC2C "EntityId GetEntry(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EBC0 "void Initialize(EntityId, EntityId, bool);" 
 [05] 14031EC24 "EntityId HideEntry(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EBD0 "void UpdateSelectedEntryById(EntityId);" 
 [07] 14031EBC8 "void UpdateCategoryVisibility(EntityId);" 
 [08] 14031EC1C "EntityId AddEntry(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EBF4 "void UpdateVisibleEntries();" 
 [10] 14031EC68 "void UpdateEntryVisibilityById(EntityId);" 
 [11] 14031EBE0 "void HideAllEntries();" 
 [12] 14031EC04 "void UpdateSelectedEntryByName(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [13] 14031EC34 "void CollapseAllCategories();" 
 
[117] "UiElementNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416526B0 "BehaviorEBusHandler* UiElementNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiElementNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FFA0 "const EntityId* UiElementNotificationBus::GetCurrentBusId();" 
 
[118] "UiScrollBarMouseWheelBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143865960 "const EntityId* UiScrollBarMouseWheelBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "float GetWheelStepValue();" 
 [01] 14031EC1C "void SetWheelStepValue(float);" 
 [02] 14031EC24 "EntityId GetScrollBarEntity();" 
 [03] 14031EC2C "void SetScrollBarEntity(EntityId);" 
 
[119] "UiFaderBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FFD0 "const EntityId* UiFaderBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void Fade(float, float);" 
 [01] 14031EC1C "void SetFadeValue(float);" 
 [02] 14031EBC8 "void SetUseRenderToTexture(bool);" 
 [03] 14031EBC0 "float GetFadeValue();" 
 [04] 14031EC34 "bool GetUseRenderToTexture();" 
 [05] 14031EC2C "bool IsFading();" 
m_virtualProperties:
 [00]
  14031EBC0 "float Fade();" 
  14031EBC0 "float Fade(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[120] "UiJavCanvasComponentBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1438486A0 "const EntityId* UiJavCanvasComponentBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "bool RequiresMouse();" 
 [01] 14031EC34 "void SetOverridesActionMap(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [02] 14031EC2C "void SetRequiresMouse(bool);" 
 [03] 14031EC1C "bool OverridesActionMap(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EBC8 "void ResetActionMapOverrides();" 
 
[121] "P2PTradeComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14374A1E0 "BehaviorEBusHandler* P2PTradeComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 14374BE00 "void P2PTradeComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14374E530 "const EntityId* P2PTradeComponentNotificationBus::GetCurrentBusId();" 
 
[122] "UiExitHoverEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143828B30 "const EntityId* UiExitHoverEventBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void ResetTimer();" 
 [01] 14031EBC0 "void Reset();" 
 
[123] "VegetationAudioRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143BAD6C0 "const EntityId* VegetationAudioRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void EndVegetationProcessing();" 
 [01] 14031EBC0 "void StartVegetationProcessing();" 
 
[124] "UiIndexableImageBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416800F0 "const EntityId* UiIndexableImageBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "const unsigned int GetImageIndexCount();" 
 [01] 14031EBC0 "void SetImageIndex(unsigned int);" 
 [02] 14031EC2C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetImageIndexAlias(unsigned int);" 
 [03] 14031EBC8 "unsigned int GetImageIndexFromAlias(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EC1C "const unsigned int GetImageIndex();" 
 [05] 14031EC34 "void SetImageIndexAlias(unsigned int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[125] "RenderGuildFlagOfflineBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1438D5280 "const EntityId* RenderGuildFlagOfflineBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetGuildFlagIconData(const GuildId&, const GuildIconData&);" 
 
[126] "UiMainMenuBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143886D60 "BehaviorEBusHandler* UiMainMenuBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiMainMenuBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EBF4 "void RenameCharacterResult(bool, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [01] 14031EBC0 "void ResetScreenAfterError();" 
 [02] 14031EC34 "void SetCustomizableCharacterEntityId(EntityId);" 
 [03] 14031EC2C "void OnAuthComplete(bool);" 
 
[127] "TwitchSystemRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC68 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTwitchUserName();" 
 [01] 14031EC04 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTwitchLogoUrl();" 
 [02] 14031EBC0 "void RefreshTwitchLogin();" 
 [03] 14031EC34 "bool IsLoggedIn();" 
 [04] 14031EC14 "void StartTwitchLogin(bool);" 
 [05] 14031EBFC "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTwitchDisplayName();" 
 [06] 14031EC2C "void Logout();" 
 
[128] "MainMenuSystemRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "void SetSelectedWorldId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC24 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetSelectedWorldId();" 
 
[129] "RainComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14183C4F0 "const EntityId* RainComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7AB4 "void SetPuddlesAmount(float);" 
 [01] 14031EC54 "float GetDiffuseDarkening();" 
 [02] 14031EC70 "float GetRainDropsSpeed();" 
 [03] 14031EC0C "void SetAmount(float);" 
 [04] 14031EBFC "float GetInnerRadius();" 
 [05] 14031EC04 "void SetInnerRadius(float);" 
 [06] 14031EBD0 "float GetOuterRadius();" 
 [07] 14031EBF4 "bool GetDisableOcclusion();" 
 [08] 14050D244 "float GetPuddlesRippleAmount();" 
 [09] 14031EBC0 "void Enable();" 
 [10] 14031EC2C "bool IsEnabled();" 
 [11] 14031EBC8 "void SetIgnoreVisAreas(bool);" 
 [12] 14050D268 "RainOptions GetRainOptions();" 
 [13] 14031EC24 "void Toggle();" 
 [14] 14050D274 "void SetRainDropsAmount(float);" 
 [15] 1404C7A9C "void SetRainDropsLighting(float);" 
 [16] 14031EC1C "void Disable();" 
 [17] 14031EBE0 "float GetAmount();" 
 [18] 14031EBE8 "float GetRainDropsAmount();" 
 [19] 14031EC34 "bool GetIgnoreVisAreas();" 
 [20] 1404C7A90 "float GetRainDropsLighting();" 
 [21] 14031EC68 "void SetDisableOcclusion(bool);" 
 [22] 14031EC5C "void SetDiffuseDarkening(float);" 
 [23] 14031EBD8 "void SetOuterRadius(float);" 
 [24] 1404C7A84 "void SetRainDropsSpeed(float);" 
 [25] 1404C7AA8 "float GetPuddlesAmount();" 
 [26] 14050D25C "float GetSplashesAmount();" 
 [27] 14050D238 "void SetPuddlesMaskAmount(float);" 
 [28] 14031EC48 "void SetSplashesAmount(float);" 
 [29] 1404C7AC0 "float GetPuddlesMaskAmount();" 
 [30] 14050D250 "void SetPuddlesRippleAmount(float);" 
 [31] 14050D220 "void SetRainOptions(RainOptions);" 
 [32] 14050D22C "void UpdateRain();" 
m_virtualProperties:
 [00]
  14050D244 "float PuddlesRippleAmount();" 
  14050D244 "float PuddlesRippleAmount(EntityId);" 
 [01]
  1404C7AA8 "float PuddlesAmount();" 
  1404C7AA8 "float PuddlesAmount(EntityId);" 
 [02]
  1404C7AC0 "float PuddlesMaskAmount();" 
  1404C7AC0 "float PuddlesMaskAmount(EntityId);" 
 [03]
  14050D25C "float SplashesAmount();" 
  14050D25C "float SplashesAmount(EntityId);" 
 [04]
  14031EBFC "float InnerRadius();" 
  14031EBFC "float InnerRadius(EntityId);" 
 [05]
  14031EBE0 "float Amount();" 
  14031EBE0 "float Amount(EntityId);" 
 [06]
  14031EBE8 "float RainDropsAmount();" 
  14031EBE8 "float RainDropsAmount(EntityId);" 
 [07]
  14031EC34 "bool IgnoreVisAreas();" 
  14031EC34 "bool IgnoreVisAreas(EntityId);" 
 [08]
  14050D268 "RainOptions RainOptions();" 
  14050D268 "RainOptions RainOptions(EntityId);" 
 [09]
  14031EBD0 "float OuterRadius();" 
  14031EBD0 "float OuterRadius(EntityId);" 
 [10]
  14031EBF4 "bool DisableOcclusion();" 
  14031EBF4 "bool DisableOcclusion(EntityId);" 
 [11]
  14031EC70 "float RainDropsSpeed();" 
  14031EC70 "float RainDropsSpeed(EntityId);" 
 [12]
  14031EC54 "float DiffuseDarkening();" 
  14031EC54 "float DiffuseDarkening(EntityId);" 
 [13]
  1404C7A90 "float RainDropsLighting();" 
  1404C7A90 "float RainDropsLighting(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[130] "WaterDataRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "void GetWaterFlags(float, float, WaterFlagsQueryResult&);" 
 [01] 14031EC14 "float GetWaterHeightIfAvailable(float, float);" 
 [02] 14031EBC0 "float GetWaterDepthIfAvailable(float, float);" 
 [03] 14031EC24 "ClosestWaterQueryResult GetClosestWaterDistanceAndPositionWithinDistanceIfAvailable(float, float, float, float);" 
 [04] 14031EC2C "ClosestWaterQueryResult GetClosestWaterDistanceAndPositionIfAvailable(float, float, float);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[131] "OptionsDataBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1415531A8 "void CompleteOutpostRushTutorial(int);" 
 [01] 14155319C "bool CheckOutpostRushTutorial(int);" 
 [02] 14031EBE8 "void OpenWorldTransferFaq();" 
 [03] 141553130 "const InGameSurveyResponse& ShouldShowInGameSurvey();" 
 [04] 141553118 "void SetHasViewedNewMilestoneReward(bool);" 
 [05] 1415530C4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetCodeOfConductText();" 
 [06] 1415530B8 "void SetCodeOfConductVersion(unsigned char);" 
 [07] 1405F6C88 "void SetAnalyticsEnabled(bool);" 
 [08] 1405F6C7C "void SetBandwidthMode(int);" 
 [09] 141553184 "void SetAudioOutputConfiguration(int);" 
 [10] 141553178 "void ResetChatSettings();" 
 [11] 14155316C "void ResetAccessibilitySettings();" 
 [12] 141553148 "void ResetCommunicationSettings();" 
 [13] 14155313C "void ResetAudioSettings();" 
 [14] 141015BC8 "void ResetPreferencesSettings();" 
 [15] 141015BBC "void ResetBrightnessAndContrastSettings();" 
 [16] 1405F6ACC "void SetShadowsQuality(int, bool);" 
 [17] 141015BA4 "void ResetGameplaySettings();" 
 [18] 14050D220 "void SetObjectsQuality(int, bool);" 
 [19] 1404C7AB4 "void SetMaxFps(int);" 
 [20] 1405F6B50 "void SetColorBlindness(int);" 
 [21] 1405F6BEC "void SetStreamerModeServerGroupBlock(bool);" 
 [22] 14031EC48 "void SetEffectsQuality(int, bool);" 
 [23] 14050D250 "void SetContrast(float);" 
 [24] 1405F6AFC "void SetHudShowAllWeapons(bool);" 
 [25] 1405F6B68 "void SetTextSize(int);" 
 [26] 1405F6B44 "void SetSpectatorPrivacy(bool);" 
 [27] 14050D25C "void SetMotionBlur(bool);" 
 [28] 14050D244 "void SetBrightness(float);" 
 [29] 1404C7AC0 "void SetVsync(bool);" 
 [30] 1405F6AD8 "void SetTexturesQuality(int, bool);" 
 [31] 14050D238 "void SetGamma(float);" 
 [32] 14050D268 "void SetLightingQuality(int, bool);" 
 [33] 1404C7A90 "void SetResolution(int, int);" 
 [34] 1404C7A84 "void GoWindowed();" 
 [35] 1405F6BC8 "void SetStreamerModeUIEnabled(bool);" 
 [36] 14031EC54 "void OpenTwitchStreamInBrowser(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [37] 1404C7AA8 "void SetGraphicsQuality(int);" 
 [38] 14050D22C "void SetPostProcessingQuality(int, bool);" 
 [39] 1405F6C04 "void SetStreamerModeServerTradeBlock(bool);" 
 [40] 14031EC24 "void OpenTermsInBrowser();" 
 [41] 1405F6B08 "void SetLanguage(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [42] 1405F6B74 "void SetTTSEnabled(bool);" 
 [43] 14031EBC0 "void InitializeSerializedOptions();" 
 [44] 14031EC68 "void OpenAntiCheatDisclosure();" 
 [45] 14031EC1C "void SerializeOptions();" 
 [46] 14031EBFC "void CopyVersionInfoToClipboard();" 
 [47] 1405F6C40 "void SetTwitchStreamerSpotlight(bool);" 
 [48] 14031EC2C "void OpenPrivacyInBrowser();" 
 [49] 14031EBF4 "void OpenCodeOfConductInBrowser();" 
 [50] 14031EC34 "void OpenNoticesInBrowser();" 
 [51] 1415530AC "unsigned char GetCodeOfConductVersion();" 
 [52] 1405F6B98 "void SetGENAEnabled(bool);" 
 [53] 14031EC0C "void OpenFolderWithArtBook();" 
 [54] 14031EBC8 "void OpenForumsInBrowser();" 
 [55] 14031EC04 "void OpenNewWorldSiteInBrowser();" 
 [56] 14031EC3C "void SetTerrainQuality(int, bool);" 
 [57] 14031EBD0 "void OpenHelpInBrowser();" 
 [58] 14050D274 "void OpenCalendarEventDetailsInBrowser();" 
 [59] 1404C7A9C "void SetShowFrameCount(bool);" 
 [60] 141553154 "void ResetSocialSettings();" 
 [61] 14031EBD8 "void OpenCreditsInBrowser();" 
 [62] 14031EBE0 "void OpenRefundPolicyInBrowser();" 
 [63] 1415531B4 "void ResetOutpostRushTutorial();" 
 [64] 1415530F4 "void SetTwitchHideOtherStreamers(bool);" 
 [65] 14031EC70 "void GoFullscreen(bool);" 
 [66] 1405F6C64 "void SetVoipVolumesFromUI();" 
 [67] 141553160 "void ResetTwitchSettings();" 
 [68] 1405F6C10 "void SetStreamerModeServerDuelBlock(bool);" 
 [69] 1405F6AE4 "void SetWaterQuality(int, bool);" 
 [70] 1405F6AF0 "void SetHudAlwaysFade(bool);" 
 [71] 141553190 "AZStd::vector<ChatMessageTypeToState, allocator>& GetChatTypeStates();" 
 [72] 1415530E8 "void SetGenericInviteEnabled(Crc32, bool);" 
 [73] 1405F6B2C "void SetChatProfanityFilter(bool);" 
 [74] 1407595A8 "void SetSubtitles(bool);" 
 [75] 1405F6BB0 "void SetSpeechToTextEnabled(bool);" 
 [76] 1405F6B80 "void SetTTSRate(int);" 
 [77] 14155310C "bool GetHasViewedNewMilestoneReward();" 
 [78] 1405F6B8C "void SetTTSVolume(int);" 
 [79] 1405F6BD4 "void SetStreamerModeServerBlock(bool);" 
 [80] 1405F6BE0 "void SetStreamerModeServerFriendBlock(bool);" 
 [81] 141015BB0 "void ResetVisualSettings();" 
 [82] 1405F6BF8 "void SetStreamerModeServerGuildBlock(bool);" 
 [83] 1405F6C1C "void SetStreamerModeServerChatBlock(bool);" 
 [84] 1405F6C28 "void SetStreamerModeServerCurrencyBlock(bool);" 
 [85] 1405F6C34 "void SetTwitchLogin(bool, bool);" 
 [86] 1405F6C4C "void SetTwitchSubArmy(bool);" 
 [87] 1405F6C58 "void SetAudioVolumesFromUI();" 
 [88] 14031EC5C "void OpenAppealBanInBrowser();" 
 [89] 1405F6C70 "void SetRegionId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[132] "DynamicContentBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "void ClearCMSData(unsigned char);" 
 [01] 14031EC24 "void RetrieveWorldsCMSData();" 
 [02] 14031EC14 "void RetrieveCMSData(unsigned char, bool);" 
 [03] 14031EC2C "void ClearWorldsCMSData();" 
 [04] 14031EC34 "void RetrieveWorldCMSWarning();" 
 
[133] "UiDropdownOptionBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FE50 "const EntityId* UiDropdownOptionBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void SetOwningDropdown(EntityId);" 
 [01] 14031EBC8 "void SetIconElement(EntityId);" 
 [02] 14031EBC0 "EntityId GetOwningDropdown();" 
 [03] 14031EC34 "EntityId GetIconElement();" 
 [04] 14031EC2C "void SetTextElement(EntityId);" 
 [05] 14031EC24 "EntityId GetTextElement();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[134] "UiMaskBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416803C0 "const EntityId* UiMaskBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC04 "void SetUseAlphaTest(bool);" 
 [01] 14031EC34 "bool GetDrawBehind();" 
 [02] 14031EBF4 "bool GetDrawInFront();" 
 [03] 14031EC24 "bool GetIsInteractionMaskingEnabled();" 
 [04] 14031EC2C "void SetIsInteractionMaskingEnabled(bool);" 
 [05] 14031EBC0 "bool GetIsMaskingEnabled();" 
 [06] 14031EC1C "void SetIsMaskingEnabled(bool);" 
 [07] 14031EBFC "bool GetUseAlphaTest();" 
 [08] 14031EC68 "void SetDrawInFront(bool);" 
 [09] 14031EBC8 "void SetDrawBehind(bool);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[135] "MapComponentBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBE0 "const AZStd::vector<PrismOverlayData, allocator>& GetTerritories();" 
 [01] 14031EC54 "AZStd::vector<unsigned short, allocator> GetContainingTerritories(Vector3);" 
 [02] 14050D274 "const AZStd::vector<TerritoryLandmarkData, allocator>& GetLandmarksInTerritory(unsigned short);" 
 [03] 1404C7AA8 "bool HasDynamicPoiObjective(unsigned short);" 
 [04] 14031EC0C "unsigned short GetContainingTerritory(Vector3);" 
 [05] 14031EC24 "const AZStd::vector<POICapital, allocator>& GetSettlements();" 
 [06] 14031EC5C "unsigned short WorldPosToTerritoryLoRes(Vector3);" 
 [07] 14031EBFC "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetTractAtPosition(Vector2);" 
 [08] 14031EBC0 "const AZStd::vector<POICapital, allocator>& GetOutposts();" 
 [09] 14031EBD0 "const AZStd::vector<SimplePOI, allocator>& GetSimplePOIs();" 
 [10] 14031EC68 "const POICapital* GetNearestNamedTerritory(Vector2);" 
 [11] 14031EC04 "AZ::u64 RequestTractAtPositionAsync(Vector2);" 
 [12] 1404C7A9C "bool IsDynamicPoiObjectiveComplete(unsigned short);" 
 [13] 14031EC1C "const AZStd::vector<POICapital, allocator>& GetClaims();" 
 [14] 14031EBE8 "Vector3 GetTerritoryPosition(unsigned short);" 
 [15] 14031EC70 "const TerritoryLandmarkData& GetFirstLandmarkByType(unsigned short, unsigned char);" 
 [16] 1404C7AB4 "const AZStd::vector<unsigned short, allocator>& GetFastTravelPointPOIIds();" 
 [17] 1404C7A84 "int GetMedianPoiLevel(unsigned short);" 
 [18] 1404C7A90 "const NPCData& GetNpcData(Crc32);" 
 
[136] "UiAutomationNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143EA5D30 "BehaviorEBusHandler* UiAutomationNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiAutomationNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[137] "UiInteractableStatesBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416801E0 "const EntityId* UiInteractableStatesBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "unsigned int GetStateFontEffectIndex(int, EntityId);" 
 [01] 14031EBE0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetStateFontPathname(int, EntityId);" 
 [02] 14031EC34 "float GetStateAlpha(int, EntityId);" 
 [03] 14031EC2C "void SetStateAlpha(int, EntityId, float);" 
 [04] 14031EBC8 "bool HasStateAlpha(int, EntityId);" 
 [05] 14031EC1C "Color GetStateColor(int, EntityId);" 
 [06] 14031EBC0 "void SetStateColor(int, EntityId, const Color&);" 
 [07] 14031EC24 "bool HasStateColor(int, EntityId);" 
 [08] 14031EC04 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetStateSpritePathname(int, EntityId);" 
 [09] 14031EBD8 "void SetStateFont(int, EntityId, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 [10] 14031EC54 "bool HasStateFont(int, EntityId);" 
 [11] 14031EBFC "void SetStateSpritePathname(int, EntityId, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [12] 14031EBD0 "bool HasStateSprite(int, EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[138] "UiAnimationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167F970 "const EntityId* UiAnimationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "void ResumeSequence(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBF4 "float GetSequencePlayingSpeed(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC2C "void PauseSequence(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EC1C "void StopSequence(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EC24 "void AbortSequence(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EBC0 "void StartSequence(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EC04 "bool IsSequencePlaying(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 14031EBC8 "void ResetSequence(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [08] 14031EC68 "void SetSequencePlayingSpeed(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float);" 
 [09] 14031EBFC "float GetSequencePlayingTime(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[139] "ShapeComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87C10 "const EntityId* ShapeComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "bool IsPointInside(const Vector3&);" 
 [01] 14031EBC0 "Crc32 GetShapeType();" 
 [02] 14031EC34 "float DistanceFromPoint(const Vector3&);" 
 [03] 14031EBC8 "float DistanceSquaredFromPoint(const Vector3&);" 
 [04] 14031EC1C "Aabb GetEncompassingAabb();" 
 
[140] "CameraRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14183C4C0 "const EntityId* CameraRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "float GetFrustumHeight();" 
 [01] 14031EBC0 "float GetFov();" 
 [02] 14031EBC8 "void SetFov(float);" 
 [03] 14031EC1C "float GetNearClipDistance();" 
 [04] 14031EBD0 "void MakeActiveView(float, float, float);" 
 [05] 14031EC04 "void SetFrustumHeight(float);" 
 [06] 14031EBF4 "void SetNearClipDistance(float);" 
 [07] 14031EC2C "float GetFrustumWidth();" 
 [08] 14031EC24 "float GetFarClipDistance();" 
 [09] 14031EC68 "void SetFarClipDistance(float);" 
 [10] 14031EBFC "void SetFrustumWidth(float);" 
m_virtualProperties:
 [00]
  14031EC34 "float FrustumHeight();" 
  14031EC34 "float FrustumHeight(EntityId);" 
 [01]
  14031EC1C "float NearClipDistance();" 
  14031EC1C "float NearClipDistance(EntityId);" 
 [02]
  14031EC2C "float FrustumWidth();" 
  14031EC2C "float FrustumWidth(EntityId);" 
 [03]
  14031EBC0 "float FieldOfView();" 
  14031EBC0 "float FieldOfView(EntityId);" 
 [04]
  14031EC24 "float FarClipDistance();" 
  14031EC24 "float FarClipDistance(EntityId);" 
 
[141] "SpectatorCameraEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 143EA5C80 "BehaviorEBusHandler* SpectatorCameraEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SpectatorCameraEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 143EA8810 "const EntityId* SpectatorCameraEventBus::GetCurrentBusId();" 
 
[142] "SpectatorUIRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143EA8840 "const EntityId* SpectatorUIRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "bool IsInSpectatorMode();" 
 [01] 14031EC14 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetFocusedPlayerName();" 
 [02] 14031EBC0 "void RequestTeleport(float, float);" 
 
[143] "UiRadioButtonNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652CE0 "BehaviorEBusHandler* UiRadioButtonNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiRadioButtonNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680540 "const EntityId* UiRadioButtonNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[144] "CursorBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "Vector2 GetCursorPosition();" 
 [01] 14031EC1C "void SetCursorPosition(Vector2);" 
 
[145] "UIInputRequestsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC24 "void CreateInputFilter(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [01] 14031EBC0 "void SetActionMapEnabled(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, bool);" 
 [02] 14031EBC8 "bool IsInputFilterEnabled(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [03] 14031EC1C "bool IsActionMapEnabled(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [04] 14031EC34 "void EnableInputFilter(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, bool);" 
 [05] 14031EC2C "void AddActionToInputFilter(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 
[146] "LyShineScriptBindRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14050D238 "bool ReleasedCanvases();" 
 [01] 14050D274 "Vector2 GetViewportSize();" 
 [02] 1404C7AB4 "void HideAndLockPlayer(bool);" 
 [03] 14031EC68 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetLanguage();" 
 [04] 14031EBF4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> LocalizeText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EC34 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> LocalizeWithReplacementRange(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float, float);" 
 [06] 14031EBE0 "any GetCVar(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 14031EBD0 "void ExecuteCommand(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [08] 14031EBD8 "void SetCVar(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, any);" 
 [09] 14031EC5C "float GetDayPhaseProgress();" 
 [10] 14031EBC8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> LocalizeWithDataSheetData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [11] 14031EBC0 "EntityId ScriptLoadCanvas(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool, int, bool);" 
 [12] 1404C7AA8 "int GetGlobalSystemState();" 
 [13] 14031EC2C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> LocalizeTextWithReplacement(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [14] 1404C7A90 "bool IsDebugClient();" 
 [15] 14031EC0C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetServerName();" 
 [16] 14031EC04 "void CreateKeyBind(const char*, const char*);" 
 [17] 14031EC70 "bool IsEntityOnLocalPlayer(EntityId);" 
 [18] 1404C7A84 "bool IsEditor();" 
 [19] 14031EBFC "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetAttributeValueForKey(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [20] 1404C7A9C "bool IsMaintenanceBypass();" 
 [21] 14031EC54 "int GetDayPhase();" 
 [22] 14031EC24 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> LocalizeTextWithReplacements(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>, AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>);" 
 [23] 14031EBE8 "int GetGameTime();" 
 [24] 1404C7AC0 "void AddLevelToUnloadCanvases(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [25] 14031EC1C "bool IsFileExists(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[147] "JournalDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC2C "int GetPageCount(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&);" 
 [01] 14031EC1C "const AZStd::vector<JournalDataEntry, allocator>& GetChapterEntries();" 
 [02] 14031EBC0 "const AZStd::vector<JournalDataEntry, allocator>& GetJournalEntries();" 
 [03] 14031EC24 "const AZStd::vector<JournalDataEntry, allocator>& GetTopicEntries();" 
 
[148] "FactionControlLandClaimClientRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "unsigned char GetFactionControlOwner(const unsigned short&);" 
 [01] 14031EC1C "bool GetFactionControlIsActive(const unsigned short&);" 
 [02] 14031EBC0 "unsigned char GetFactionControlCaptureStatus(const unsigned short&);" 
 
[149] "PlayerTradeNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662B30 "BehaviorEBusHandler* PlayerTradeNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PlayerTradeNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665810 "const EntityId* PlayerTradeNotificationBus::GetCurrentBusId();" 
 
[150] "ItemGeneratorRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A30B0 "const EntityId* ItemGeneratorRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetOutputItemName();" 
 [01] 14031EC24 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetBuildableDisplayName();" 
 [02] 14031EC1C "int GetOutputQuantity();" 
 
[151] "ContractsNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144661C10 "BehaviorEBusHandler* ContractsNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ContractsNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void NOCALL_OnSearchContractsResultsReceived(const AZ::Uuid&, const SearchContractsResponse&);" 
 
[152] "AggregateContractCountRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665330 "const EntityId* AggregateContractCountRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "unsigned int GetAggregateContractCount(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&);" 
 
[153] "ProgressionNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0180 "BehaviorEBusHandler* ProgressionNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ProgressionNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A33E0 "const EntityId* ProgressionNotificationBus::GetCurrentBusId();" 
 
[154] "UiGuildFlagNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144663160 "BehaviorEBusHandler* UiGuildFlagNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiGuildFlagNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665A50 "const EntityId* UiGuildFlagNotificationBus::GetCurrentBusId();" 
 
[155] "TwitchSubArmyNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144662EA0 "BehaviorEBusHandler* TwitchSubArmyNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TwitchSubArmyNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void NOCALL_OnJoinableSubArmiesReceived(const AZStd::vector<SubArmyClientItem, allocator>&);" 
 [01] 14031EC1C "void NOCALL_OnStartSubArmyResultReceived(bool);" 
 [02] 14031EBC0 "void NOCALL_OnRequestJoinResultReceived(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [03] 14031EC24 "void NOCALL_OnJoinListReceived(const AZStd::vector<SubArmyJoiningPlayer, allocator>&);" 
 
[156] "UiMainMenuRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC04 "void ShowLoadingScreen();" 
 [01] 14031EBFC "void RenameCharacter(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC1C "void StartBenchmark();" 
 [03] 14031EC34 "void SetImageComponentByMarketingTileIndex(EntityId, int);" 
 [04] 14031EC24 "void StartIntro();" 
 [05] 14031EC2C "EntityId GetRenderGuildFlagEntity();" 
 [06] 14031EBC8 "void OpenMarketingTileUrlByIndex(int);" 
 [07] 14031EBC0 "void RequestCustomizableCharacterEntityId();" 
 
[157] "TwitchSubArmyRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC34 "void UpdateJoinEntry(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [01] 14031EC1C "void RequestStartSubArmy(int);" 
 [02] 14031EC24 "void EndSubArmy();" 
 [03] 14031EC14 "void RequestJoinableSubArmies();" 
 [04] 14031EBC0 "void RequestJoinSubArmy(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EC2C "void RequestJoinList();" 
 
[158] "WindVolumeRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87F40 "const EntityId* WindVolumeRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "const Vector3& GetVolumeSize();" 
 [01] 14031EBD8 "const Vector3& GetWindDirection();" 
 [02] 14031EBD0 "void SetWindDirection(const Vector3&);" 
 [03] 14031EC04 "float GetAirDensity();" 
 [04] 14031EC34 "void SetSpeed(float);" 
 [05] 14031EC2C "float GetFalloffInner();" 
 [06] 14031EBC0 "void SetEllipsoidal(bool);" 
 [07] 14031EC1C "bool GetEllipsoidal();" 
 [08] 14031EC24 "void SetFalloffInner(float);" 
 [09] 14031EBC8 "float GetSpeed();" 
 [10] 14031EBF4 "void SetAirResistance(float);" 
 [11] 14031EC68 "float GetAirResistance();" 
 [12] 14031EBE0 "void SetVolumeSize(const Vector3&);" 
 [13] 14031EBFC "void SetAirDensity(float);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[159] "UiStaminaRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665A80 "const EntityId* UiStaminaRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "const StaminaState& GetStaminaState();" 
 
[160] "TerritoryInterfaceComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446659C0 "const EntityId* TerritoryInterfaceComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "const PersistentTerritoryProgressionData& GetTerritoryProgressionData();" 
 
[161] "UiDropTargetNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652340 "BehaviorEBusHandler* UiDropTargetNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDropTargetNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BFCA0 "void UiDropTargetNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 14167FDC0 "const EntityId* UiDropTargetNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[162] "EmoteControllerComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B45C0 "const EntityId* EmoteControllerComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "bool IsEmoteCooldownComplete(Crc32);" 
 [01] 14031EC1C "bool IsEmoteEntitled(Crc32);" 
 [02] 14031EC24 "bool IsEmoteAllowedInCurrentGameMode(Crc32);" 
 
[163] "EmoteControllerComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1443B33B0 "BehaviorEBusHandler* EmoteControllerComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void EmoteControllerComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1443B4590 "const EntityId* EmoteControllerComponentNotificationBus::GetCurrentBusId();" 
 
[164] "ArenaRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665390 "const EntityId* ArenaRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBF4 "Crc32 GetDungeonGameModeId();" 
 [01] 14031EC68 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetArenaMonsterName();" 
 [02] 14031EBC8 "bool IsGroupInDungeon();" 
 [03] 14031EC24 "AZ::u64 GetArenaSecondsRemaining();" 
 [04] 14031EC1C "AZStd::vector<ItemDescriptor, allocator> GetArenaRequiredItems();" 
 [05] 14031EC34 "bool GetAllGroupMembersAlive();" 
 [06] 14031EBC0 "bool IsArenaActive();" 
 [07] 14031EC2C "bool GetAllGroupMembersInProximity();" 
 
[165] "WeaponAccuracyRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B47D0 "const EntityId* WeaponAccuracyRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "float GetEstimatedInaccuracy();" 
 
[166] "PlayerDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC2C "unsigned char GetItemRarityLevel(int);" 
 [01] 14031EC34 "const WarDeployableLimitData& GetWarDeployableLimitData(const Crc32&);" 
 [02] 14031EC1C "const GuildSiegeWindowRegionData& GetRegionData();" 
 [03] 14031EBC0 "const FactionInfluenceConfigData& GetFactionInfluenceConfigData();" 
 [04] 14031EC24 "const ValidGroupData& GetValidGroupData();" 
 
[167] "TagGlobalNotificationBus" 
BehaviorParameter: m_name: "Crc32", m_traits: 0
m_createHandler:
 141C3D100 "BehaviorEBusHandler* TagGlobalNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TagGlobalNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87E50 "const Crc32* TagGlobalNotificationBus::GetCurrentBusId();" 
 
[168] "ShowOnMapUIComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446658D0 "const EntityId* ShowOnMapUIComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void UpdateVisibility(bool);" 
 
[169] "UiGatherableComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665A20 "const EntityId* UiGatherableComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "unsigned int CurrentNumGatherers();" 
 [01] 14031EC04 "unsigned int RequiredNumGatherers();" 
 
[170] "SpellDataBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "SpellData* GetSpellData(const Crc32&);" 
 
[171] "CharacterAbilityRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B4530 "const EntityId* CharacterAbilityRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBE0 "float GetTotalCooldownTime(Crc32);" 
 [01] 1405F6C10 "void RequestChangeMappedAbility(int, int, Crc32);" 
 [02] 1405F6BF8 "bool SpendPointsOnAbility(Crc32, Crc32, int);" 
 [03] 1405F6BA4 "const AZStd::array<const AbilityData*, 6> GetActiveAbilityMoveDataByAbilityTableId(const Crc32&);" 
 [04] 1405F6B74 "const AZStd::array<const AbilityData*, 6> GetAvailableAbilitiesDataByItemSlot(const ItemContainerSlot&);" 
 [05] 1405F6BB0 "const AZStd::array<const AbilityData*, 6> GetAvailableAbilityDataByAbilityTableId(const Crc32&);" 
 [06] 1405F6C1C "Crc32 GetAbilityTableFromItemSlot(const ItemContainerSlot&);" 
 [07] 1415530F4 "void RequestMasteryTreeRespec(int, bool);" 
 [08] 14031EC34 "void NotifyActiveInputsChanged();" 
 [09] 1405F6BEC "AbilityData* GetAbilityData(Crc32, Crc32);" 
 [10] 1405F6B80 "const AZStd::array<const AbilityData*, 6> GetActiveAbilityDataByItemSlot(const ItemContainerSlot&);" 
 [11] 1405F6B8C "bool IsAbilityUnlocked(Crc32, Crc32);" 
 [12] 1405F6BBC "float GetEquippedAbilitySpellManaCost(Crc32);" 
 [13] 1405F6C34 "void ApplyAbilityChanges();" 
 [14] 1405F6C28 "int GetSelectedTableIndexFromTableName(Crc32);" 
 [15] 1405F6BC8 "int GetSpentPointsOnActiveAbility(Crc32);" 
 [16] 14031EBF4 "int GetNumFreeCooldownsRemaining(Crc32);" 
 [17] 1405F6C40 "int GetSpentPointsOnAbility(Crc32);" 
 
[172] "CharacterAbilityNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1443B30F0 "BehaviorEBusHandler* CharacterAbilityNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CharacterAbilityNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1443B4500 "const EntityId* CharacterAbilityNotificationBus::GetCurrentBusId();" 
 
[173] "WaterLevelNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0E90 "BehaviorEBusHandler* WaterLevelNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void WaterLevelNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3850 "const EntityId* WaterLevelNotificationBus::GetCurrentBusId();" 
 
[174] "ChatComponentBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "void WriteMessageToLocalChat(const BaseGameChatMessage&);" 
 [01] 14031EBFC "AZ::u64 GetChatItemSize();" 
 [02] 14031EC2C "void SendClearChatMute(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [03] 14031EC34 "bool IsPlayerMuted(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EC14 "void SendChatMessage(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::vector<ItemDescriptor, allocator>&);" 
 [05] 14031EC68 "const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait GetSocialMutes();" 
 [06] 14031EC24 "void SendSetChatMute(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 
[175] "DamageNumbersBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC24 "void DisplayLocalPlayerNumber(EntityId, int, int, Crc32);" 
 [01] 14031EBC8 "void OnAnimDone(EntityId);" 
 
[176] "UiCanvasProxyRefBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FBB0 "const EntityId* UiCanvasProxyRefBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetCanvasRefEntity(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[177] "AimIKComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C872E0 "const EntityId* AimIKComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "float GetAimIKBlend();" 
 [01] 14031EC04 "void SetAimIKPolarCoordinatesMaxRadiansPerSecond(const Vector2&);" 
 [02] 14031EC1C "void SetAimIKTarget(const Vector3&);" 
 [03] 14031EC2C "void SetAimIKFadeOutAngle(float);" 
 [04] 14031EC24 "void SetAimIKLayer(unsigned int);" 
 [05] 14031EBF4 "void SetAimIKFadeOutMinDistance(float);" 
 [06] 14031EBFC "void SetAimIKPolarCoordinatesSmoothTimeSeconds(float);" 
 [07] 14031EBC0 "void EnableAimIK(bool);" 
 [08] 14031EC34 "void SetAimIKFadeOutTime(float);" 
 [09] 14031EBC8 "void SetAimIKFadeInTime(float);" 
 [10] 14031EC68 "void SetAimIKPolarCoordinatesOffset(const Vector2&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[178] "UnifiedInteractOptionNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0D30 "BehaviorEBusHandler* UnifiedInteractOptionNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UnifiedInteractOptionNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A37C0 "const EntityId* UnifiedInteractOptionNotificationsBus::GetCurrentBusId();" 
 
[179] "WeaponRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3880 "const EntityId* WeaponRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void NotifyWeaponEffectScriptLoaded();" 
 [01] 14031EBC0 "bool IsSheathed();" 
 [02] 14031EC1C "bool IsForcedHidden();" 
 [03] 14031EC24 "EntityId GetOwnerEntityId();" 
 
[180] "ItemSkinningRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B46E0 "const EntityId* ItemSkinningRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void DisableItemSkin(Crc32);" 
 [01] 14031EC1C "Crc32 GetItemSkinItemId(Crc32);" 
 [02] 14031EBC0 "bool IsItemSkinEnabled(Crc32);" 
 [03] 14031EC24 "void EnableItemSkin(Crc32, Crc32);" 
 
[181] "SiegeWarfareDataComponentRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "void RequestExistingStateNotifications();" 
 [01] 14031EC2C "int GetNumActiveSiegeWeapons(bool);" 
 [02] 14031EC34 "int GetNumBuildablesBoundByTeamLimit(bool, const Crc32&);" 
 
[182] "EntitlementNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1443B3670 "BehaviorEBusHandler* EntitlementNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void EntitlementNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void NOCALL_OnProductsReady(const AZStd::vector<Product, allocator>&);" 
 [01] 14031EC24 "void NOCALL_OnEntitlementsChange();" 
 [02] 14031EBC0 "void NOCALL_OnCatalogReady(const AZStd::vector<CatalogOffer, allocator>&);" 
 
[183] "LandClaimNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 14499F940 "BehaviorEBusHandler* LandClaimNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LandClaimNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[184] "KeyInputNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143EA5B20 "BehaviorEBusHandler* KeyInputNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void KeyInputNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[185] "UiScrollBoxBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416805A0 "const EntityId* UiScrollBoxBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6AFC "void SetVerticalScrollBarEntity(EntityId);" 
 [01] 1405F6B08 "EntityId GetVerticalScrollBarEntity();" 
 [02] 14031EBE8 "bool GetIsScrollingConstrained();" 
 [03] 1404C7AB4 "void SetHorizontalScrollBarVisibility(int);" 
 [04] 14031EC0C "void SetIsHorizontalScrollingEnabled(bool);" 
 [05] 14031EBE0 "bool GetIsHorizontalScrollingEnabled();" 
 [06] 14050D22C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetScrollOffsetChangedActionName();" 
 [07] 14031EBD8 "bool HasVerticalContentToScroll();" 
 [08] 14050D274 "void SetIsScrollingConstrained(bool);" 
 [09] 14031EC70 "int GetSnapMode();" 
 [10] 1405F6AF0 "EntityId GetHorizontalScrollBarEntity();" 
 [11] 14031EC24 "float GetScrollOffsetY();" 
 [12] 14031EBFC "Vector2 GetNormalizedScrollValue();" 
 [13] 14031EC34 "void SetScrollOffsetX(float);" 
 [14] 14031EC48 "void SetScrollOffsetChangingActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [15] 14031EC68 "Vector2 GetScrollOffsetMin();" 
 [16] 1405F6AD8 "EntityId GetContentEntity();" 
 [17] 14031EC1C "float GetScrollOffsetX();" 
 [18] 1404C7AA8 "int GetHorizontalScrollBarVisibility();" 
 [19] 14031EBC0 "Vector2 GetScrollOffset();" 
 [20] 14050D238 "void SetVerticalScrollBarVisibility(int);" 
 [21] 14031EC5C "void SetIsVerticalScrollingEnabled(bool);" 
 [22] 14031EBF4 "Vector2 GetScrollOffsetMax();" 
 [23] 14031EC54 "bool GetIsVerticalScrollingEnabled();" 
 [24] 14031EC2C "void SetScrollOffset(Vector2);" 
 [25] 14031EBC8 "void SetScrollOffsetY(float);" 
 [26] 1405F6AE4 "void SetHorizontalScrollBarEntity(EntityId);" 
 [27] 1404C7A84 "void SetSnapMode(int);" 
 [28] 1405F6B14 "EntityId FindClosestContentChildElement();" 
 [29] 14031EBD0 "bool HasHorizontalContentToScroll();" 
 [30] 14050D25C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetScrollOffsetChangingActionName();" 
 [31] 1404C7A90 "Vector2 GetSnapGrid();" 
 [32] 1404C7A9C "void SetSnapGrid(Vector2);" 
 [33] 1404C7AC0 "int GetVerticalScrollBarVisibility();" 
 [34] 1405F6ACC "void SetScrollOffsetChangedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [35] 14031EC3C "void SetContentEntity(EntityId);" 
m_virtualProperties:
 [00]
  14031EC1C "float ScrollOffsetX();" 
  14031EC1C "float ScrollOffsetX(EntityId);" 
 [01]
  14031EBC0 "Vector2 ScrollOffset();" 
  14031EBC0 "Vector2 ScrollOffset(EntityId);" 
 [02]
  14031EC24 "float ScrollOffsetY();" 
  14031EC24 "float ScrollOffsetY(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[186] "FishingNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1443B3720 "BehaviorEBusHandler* FishingNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void FishingNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1443B4680 "const EntityId* FishingNotificationsBus::GetCurrentBusId();" 
 
[187] "UiInitializationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141652810 "BehaviorEBusHandler* UiInitializationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiInitializationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680120 "const EntityId* UiInitializationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[188] "UIArenaAndDungeonEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144662F50 "BehaviorEBusHandler* UIArenaAndDungeonEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UIArenaAndDungeonEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[189] "LocalPlayerUIRequestsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 144361B04 "void SetIsInCutscene(bool);" 
 [01] 1405F6C1C "void OutpostRushSummonBrute();" 
 [02] 1405F6C10 "void OutpostRushSummonWraith();" 
 [03] 1405F6BF8 "void SetInnHomePoint();" 
 [04] 1405F6B74 "bool SetStructureName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EC04 "int GetMaximumPerksByTierAndGearscore(unsigned int, unsigned int);" 
 [06] 14031EC68 "const PerkTierData& GetPerkTierData(unsigned int);" 
 [07] 14031EBD0 "const ItemRarityData& GetItemRarityData(int);" 
 [08] 14031EBC8 "int GetMinimumSalvageQuantity();" 
 [09] 14031EC34 "float GetMaximumSalvagePercent();" 
 [10] 14031EC2C "float GetMinimumSalvagePercent();" 
 [11] 14279127C "const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait GetEmoteSlashCommands();" 
 [12] 144361AE0 "bool StartEmoteBySlashCommand(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [13] 144361B10 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetDamageTypeKeys();" 
 [14] 1405F6BD4 "void PurchaseClaim();" 
 [15] 144361AF8 "void StopEmoteLocalPreview();" 
 [16] 1405F6BC8 "void TakeOverBuildable();" 
 [17] 1405F6C28 "void SendVirtualInput(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool, float);" 
 [18] 14031EC54 "unsigned int GetLevelRequiredForCampBlueprintId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [19] 14031EC0C "void RequestDemolishCamp();" 
 [20] 1415531F0 "void PaperdollDropItem(int, unsigned int);" 
 [21] 141553184 "void QuickSlotSetItem(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int, bool);" 
 [22] 141553190 "void QuickSlotClearItem(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [23] 1405F6BBC "void UpgradeStructure();" 
 [24] 1405F6BB0 "void OpenContracts();" 
 [25] 14031EBE0 "void RequestPlaceCamp();" 
 [26] 1405F6C70 "void InventoryDyeItem(int, const DyeData&, const AZStd::vector<int, allocator>&);" 
 [27] 14031EC48 "bool ShouldWarnAboutEncumbrance();" 
 [28] 1405F6C58 "AZStd::vector<int, allocator> GetEntitlementDyes();" 
 [29] 1405F6C40 "void RepairItem(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [30] 14155316C "bool MeetsWeaponRequirements(const ItemContainerSlot&);" 
 [31] 141553124 "AZStd::vector<int, allocator> InventoryGetRepairableItemSlotList();" 
 [32] 1405F6B14 "void SetIsInStore(bool);" 
 [33] 1404C7A84 "AZ::u64 GetPlayerCurrency();" 
 [34] 1405F6B08 "void SetIsLookingThroughLoadout(bool);" 
 [35] 1405F6AE4 "float GetFirstHouseDiscountModifier();" 
 [36] 14050D220 "void AddTerritoryClaimTime();" 
 [37] 1404C7A9C "void RequestCanSpectate();" 
 [38] 1405F6B44 "void CyclePermissions();" 
 [39] 14031EBFC "int GetMinimumPerksByTier(unsigned int);" 
 [40] 14050D250 "bool IsEncumbered();" 
 [41] 1405F6C7C "void SetEnableUIInteractions(bool, bool, bool);" 
 [42] 1415531A8 "bool QuickSlotIsInInventory(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [43] 144361AD4 "void StartEmoteById(Crc32);" 
 [44] 1404C7AA8 "void RequestSpectate();" 
 [45] 14031EBF4 "const ItemDescriptor& GetPerkIngredientDescriptor();" 
 [46] 141553118 "void SalvageItem(int, int, EntityId);" 
 [47] 141015BB0 "void TradeBatchAddItem(bool, int, int, const ItemContainerSlot&, int);" 
 [48] 14050D238 "void RequestExitSpectate();" 
 [49] 1415531D8 "void UnequipItem(int, int, int, EntityId);" 
 [50] 14031EC5C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetCampName();" 
 [51] 1405F6C88 "bool IsItemTransferEnabled();" 
 [52] 1415530F4 "void PaperdollRepairItem(int, bool);" 
 [53] 1405F6C04 "void OutpostRushSummonBear();" 
 [54] 1415530DC "void InventoryMoveStack(int, int, int);" 
 [55] 1404C7AB4 "void RequestCanSpectatePlayer(const SimplePlayerIdentification&);" 
 [56] 1404C7A90 "void RequestRespawn(bool, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [57] 1405F6C64 "void PaperdollDyeItems(const DyeData&, const DyeData&, const DyeData&, const DyeData&, const DyeData&, const DyeData&, const AZStd::vector<int, allocator>&);" 
 [58] 141015BA4 "void PerformContainerTradeEntity(const EntityId&, int, const EntityId&, int, unsigned int);" 
 [59] 14155319C "int QuickSlotGetItemLocation(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [60] 141553178 "void QuickSlotAddItem(int, bool);" 
 [61] 1415531CC "void EquipItem(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int, EntityId);" 
 [62] 1404C7AC0 "void RequestSpectatePlayer(const SimplePlayerIdentification&);" 
 [63] 14050D244 "int GetMaximumEncumbrance();" 
 [64] 141015BBC "void TradeBatchExecute(int, const EntityId&);" 
 [65] 141553160 "void DropAllByClass(AZ::u64, bool);" 
 [66] 1415530AC "bool IsFlyoutMenuEnabled();" 
 [67] 1415530B8 "bool AreNotificationsEnabled();" 
 [68] 141553148 "void TakeAllByClass(const EntityId&, AZ::u64);" 
 [69] 1405F6C4C "void StorageRepairItem(int, bool);" 
 [70] 141553100 "void InventoryUseItem(int);" 
 [71] 144361AB0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> PaperdollGetWeaponAutoEquipSlot();" 
 [72] 14031EBE8 "void ExecuteTradingPostTransaction(Crc32, unsigned int, bool, int);" 
 [73] 1415530C4 "void InventoryDropItem(int, unsigned int);" 
 [74] 14050D268 "int GetMaximumEquipLoad();" 
 [75] 14050D22C "float GetControllingCompanyTaxModifier();" 
 [76] 1405F6B68 "void SetSecurityLevel(unsigned int);" 
 [77] 1405F6ACC "float GetControllingCompanyHouseCostModifier();" 
 [78] 14031EC3C "int GetControllingFactionLuckModifier();" 
 [79] 1405F6AD8 "float GetControllingFactionGatherModifier();" 
 [80] 1405F6AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetStorageKeyForGlobalStorage();" 
 [81] 144361AC8 "void RefreshEquipLoad();" 
 [82] 1405F6BE0 "void UseArenaItem();" 
 [83] 1405F6B8C "void RepairBuildable();" 
 [84] 1405F6B80 "void PickupBuildable();" 
 [85] 1415531B4 "void QuickSlotUseSlot(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [86] 14075959C "void InteractPanelClosed();" 
 [87] 14155313C "void TakeAll(const EntityId&);" 
 [88] 1405F6BEC "void EnterDungeon(int);" 
 [89] 144361ABC "AZStd::vector<int, allocator> PaperdollGetRepairableItemSlotList();" 
 [90] 141553154 "void GiveAllByClass(const EntityId&, AZ::u64);" 
 [91] 144361AEC "void StartEmoteLocalPreviewByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [92] 1405F6B50 "void IncreaseSecurityLevel();" 
 [93] 1405F6B5C "void DecreaseSecurityLevel();" 
 [94] 14050D25C "bool IsImmobilizedByEncumbrance();" 
 [95] 1415531E4 "bool PaperdollSwapItems(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 
[190] "AiHealthDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "const float GetAverageHealth();" 
 
[191] "SpawnerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665900 "const EntityId* SpawnerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC54 "unsigned int GetSpawnerTag();" 
 [01] 14031EC70 "unsigned int GetNumActiveSpawns();" 
 [02] 14031EBE8 "EntityId GetSourceSpawnerEntityId();" 
 
[192] "LocalPlayerMarkerRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBF4 "bool IsReadyToDisplay();" 
 [01] 14031EBD0 "void UpdatePlayerNameToEntityIdCache(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, EntityId);" 
 [02] 14031EBC8 "void SetMarkerDisplayBuckets(const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait, const AZStd::vector<int, allocator>&, const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait, AZStd::vector<int, allocator>&);" 
 [03] 14031EBFC "void SetMarkerFadeDistance(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float);" 
 [04] 14031EC24 "void UpdateAimedTargets(float);" 
 [05] 14031EC2C "const MarkerParams& GetMarkerParams(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EC34 "void SetMarkerParams(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const MarkerParams&);" 
 [07] 14031EC68 "void ResetMarkerManager();" 
 [08] 14031EC04 "EntityId GetPlayerEntityIdByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[193] "MaterialOverrideBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A31A0 "const EntityId* MaterialOverrideBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "bool StartOverride(unsigned int);" 
 [01] 14031EC1C "bool StopOverride(unsigned int);" 
 
[194] "RandomTimedSpawnerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87AF0 "const EntityId* RandomTimedSpawnerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "void SetRandomDistribution(unsigned int);" 
 [01] 14031EBC0 "void Enable();" 
 [02] 14031EC2C "bool IsEnabled();" 
 [03] 14031EC04 "double GetSpawnDelayVariation();" 
 [04] 14031EC24 "void Toggle();" 
 [05] 14031EC68 "double GetSpawnDelay();" 
 [06] 14031EC1C "void Disable();" 
 [07] 14031EBC8 "unsigned int GetRandomDistribution();" 
 [08] 14031EBFC "void SetSpawnDelayVariation(double);" 
 [09] 14031EBF4 "void SetSpawnDelay(double);" 
m_virtualProperties:
 [00]
  14031EBC8 "unsigned int RandomDistribution();" 
  14031EBC8 "unsigned int RandomDistribution(EntityId);" 
 [01]
  14031EC04 "double SpawnDelayVariation();" 
  14031EC04 "double SpawnDelayVariation(EntityId);" 
 [02]
  14031EC68 "double SpawnDelay();" 
  14031EC68 "double SpawnDelay(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[195] "UiLoginScreenRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC24 "void GetRegionList();" 
 [01] 14031EC34 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetGatewayRegion(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC1C "void SetSelectedWorldId(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [03] 14031EC2C "void GetLoginInfoLists(bool);" 
 [04] 14031EBC0 "void SetVisibleCharacter(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [05] 14031EBC8 "AZStd::vector<PendingMergeEvent, allocator> GetPendingWorldMergeList();" 
 
[196] "CollapsableScrollListNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 143826710 "BehaviorEBusHandler* CollapsableScrollListNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CollapsableScrollListNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 143828AA0 "const EntityId* CollapsableScrollListNotificationBus::GetCurrentBusId();" 
 
[197] "GameEventRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC34 "unsigned char GetMaxDailyBonuses(Crc32);" 
 [01] 14031EC2C "unsigned char GetAvailableDailyBonuses(Crc32);" 
 [02] 14031EBC0 "const StaticGameEventData& GetGameSystemData(const Crc32&);" 
 [03] 14031EC68 "RewardModifiers GetFactionControlModifiers(unsigned char);" 
 [04] 14031EC1C "StaticGameEventData CreateCopyOfGameEventData(const StaticGameEventData&);" 
 [05] 14031EC24 "unsigned int GetSalvageCoinAmount(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float);" 
 
[198] "ItemListBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144215850 "BehaviorEBusHandler* ItemListBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ItemListBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AEF0 "const EntityId* ItemListBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "void ClearItem(int);" 
 [01] 14031EBC8 "void SetCapacity(int);" 
 [02] 14031EC2C "void SetItem(int, const ItemContainerSlot&);" 
 [03] 14031EBF4 "EntityId GetContainerEntityId();" 
 [04] 14031EC1C "void UnbindFromContainer();" 
 [05] 14031EBC0 "void BindToContainer(EntityId, int);" 
 
[199] "LookAtTargetComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665720 "const EntityId* LookAtTargetComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void ClearLookTarget();" 
 [01] 14031EBC0 "void SetLookTarget(EntityId);" 
 
[200] "ContainerScreenRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144216400 "BehaviorEBusHandler* ContainerScreenRequestBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ContainerScreenRequestBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[201] "ObjectivesComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A32F0 "const EntityId* ObjectivesComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1415530C4 "CategoricalProgressionSnapshot GetTopProgressionForObjective(Crc32);" 
 [01] 1415530AC "AZStd::vector<AZStd::pair<int, AZStd::vector<ObjectiveInstanceId, allocator>>, allocator> GetObjectivesOrdered(int);" 
 [02] 1405F6B20 "void SetObjectiveTracked(ObjectiveInstanceId, bool);" 
 [03] 1405F6B08 "void AbandonAllRecipes();" 
 [04] 1405F6B74 "int GetObjectiveSortingPos(ObjectiveInstanceId);" 
 [05] 1405F6AF0 "void RequestShareObjectiveWithGroup(ObjectiveInstanceId);" 
 [06] 1405F6C70 "const WallClockTimePoint& GetTaskStartTime(ObjectiveTaskInstanceId);" 
 [07] 1405F6AFC "void AbandonObjective(ObjectiveInstanceId);" 
 [08] 14031EC70 "unsigned int GetObjectivesCountForType(unsigned char);" 
 [09] 14050D274 "bool HasMissionObjective();" 
 [10] 1404C7A84 "unsigned int GetMaxObjectivesForType(unsigned char);" 
 [11] 1405F6B2C "bool IsObjectiveTracked(ObjectiveInstanceId);" 
 [12] 1404C7AC0 "Crc32 GetCurrentMissionId();" 
 [13] 14075959C "bool IsObjectiveNearby(ObjectiveInstanceId);" 
 [14] 14031EC0C "void ResetObjective(ObjectiveInstanceId);" 
 [15] 1405F6C4C "AZStd::vector<QuestOptionPositionData, allocator> GetAvailableQuestsByTerritoryId(unsigned short, bool);" 
 [16] 14031EC04 "bool HasMission(Crc32);" 
 [17] 1405F6B38 "const AZStd::vector<ObjectiveInstanceId, allocator>& GetObjectives();" 
 [18] 1405F6B50 "const AZStd::vector<ObjectiveInstanceId, allocator>& GetTrackedObjectives();" 
 [19] 14050D244 "ObjectiveInstanceId GetCurrentMissionObjectiveId();" 
 [20] 14050D250 "const AZStd::vector<ObjectiveInstanceId, allocator>& GetCurrentObjectiveIdsForType(unsigned char);" 
 [21] 14050D25C "void AbandonCurrentMission();" 
 [22] 14031EBE8 "void AddObjectiveFromRecipe(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int, const AZStd::vector<Crc32, allocator>&);" 
 [23] 1405F6B5C "const AZStd::vector<ObjectiveInstanceId, allocator>& GetNearbyObjectives();" 
 [24] 1405F6B68 "void ForceSortPinnedAndNearbyObjectives(bool, bool);" 
 [25] 14031EBD0 "bool HasObjectiveInstanceId(ObjectiveInstanceId);" 
 [26] 14031EBFC "bool HasObjective(Crc32);" 
 [27] 14031EBD8 "bool HasObjectiveWithCompletionAchievement(Crc32);" 
 [28] 1405F6C40 "void RequestPublishPoiLocations();" 
 [29] 1407595A8 "bool IsObjectiveReadyForCompletion(ObjectiveInstanceId);" 
 [30] 1405F6C58 "int GetNumObjectivesCannotFastTravel();" 
 [31] 1405F6C64 "int GetNumPvpMissions();" 
 [32] 1405F6ACC "bool HasPvpObjective();" 
 [33] 1404C7AA8 "bool HasRoomForObjective(Crc32);" 
 [34] 1404C7AB4 "bool HasRoomForObjectiveType(unsigned char);" 
 
[202] "PeriodicRewardsClientRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3350 "const EntityId* PeriodicRewardsClientRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "WallClockTimePoint GetExpirationTime(int);" 
 [01] 14031EC1C "void RequestClaimReward(ObjectiveInstanceId);" 
 
[203] "PaperdollEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144215BC0 "BehaviorEBusHandler* PaperdollEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PaperdollEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AFE0 "const EntityId* PaperdollEventBus::GetCurrentBusId();" 
 
[204] "SteamNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144662D40 "BehaviorEBusHandler* SteamNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SteamNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[205] "LocalPlayerEventsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1442159B0 "BehaviorEBusHandler* LocalPlayerEventsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LocalPlayerEventsBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[206] "HousingPlotRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B46B0 "const EntityId* HousingPlotRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "unsigned int GetTaxesCost();" 
 [01] 14031EC2C "const HouseTypeData& GetHouseTypeData();" 
 [02] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetPeacockingCharacterId();" 
 [03] 14031EC1C "unsigned int GetPlotCost();" 
 [04] 14031EBC8 "const AZStd::vector<TopHouseData, allocator>& GetTopHousesData();" 
 [05] 14031EBF4 "const AZStd::vector<TopHouseData, allocator> GetGroupHousesData();" 
 
[207] "ContainerEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1442156F0 "BehaviorEBusHandler* ContainerEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ContainerEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421ACB0 "const EntityId* ContainerEventBus::GetCurrentBusId();" 
 
[208] "FactionRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B4650 "const EntityId* FactionRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBE8 "void RequestTogglePvpFlag();" 
 [01] 14031EBE0 "void RequestSetFaction(unsigned char);" 
 [02] 1404C7A90 "unsigned int GetFactionChangeAzothCost();" 
 [03] 1404C7A84 "const WallClockTimePoint& GetCooldownEndTime();" 
 [04] 1404C7AC0 "unsigned char GetPvpFlag();" 
 [05] 14031EC04 "bool CanSetFaction();" 
 [06] 14031EBD8 "unsigned char CanSetFactionWithResults(unsigned char);" 
 [07] 14050D244 "const StaticFactionData& GetFactionData(unsigned char);" 
 [08] 14031EBC0 "unsigned char GetFaction();" 
 [09] 14031EC54 "bool CanSetPvpFlag();" 
 [10] 1404C7AA8 "bool IsPvpFlaggedOrPending();" 
 [11] 14031EC1C "bool IsValidFaction(unsigned char);" 
 [12] 14031EC68 "Crc32 GetFactionTokensProgressionIdFromType(unsigned char);" 
 [13] 14031EBD0 "bool CanChangeToFaction(unsigned char);" 
 [14] 14031EC70 "bool HasSanctuary();" 
 [15] 14050D238 "WallClockTimePoint GetPvpFlagPendingEndTime();" 
 [16] 14031EC34 "Crc32 GetFactionReputationProgressionIdFromType(unsigned char);" 
 
[209] "MapComponentEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 14499FAA0 "BehaviorEBusHandler* MapComponentEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void MapComponentEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[210] "UiQuickslotsNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "void OnQuickslotsUpdated();" 
 
[211] "LoreDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "const LoreData& GetLoreData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[212] "UiTextInputAutoCompleteBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 143863BB0 "BehaviorEBusHandler* UiTextInputAutoCompleteBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiTextInputAutoCompleteBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 143865990 "const EntityId* UiTextInputAutoCompleteBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetTextList(AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator>);" 
 
[213] "RoadRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87B80 "const EntityId* RoadRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void Rebuild();" 
 [01] 14031EC1C "void SetIgnoreTerrainHoles(bool);" 
 [02] 14031EC24 "bool GetIgnoreTerrainHoles();" 
m_virtualProperties:
 [00]
  14031EC24 "bool IgnoreTerrainHoles();" 
  14031EC24 "bool IgnoreTerrainHoles(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[214] "GlobalStorageRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446656F0 "const EntityId* GlobalStorageRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC48 "const int GetOverflowItemCount();" 
 [01] 14031EBC0 "unsigned int GetSellableItemQuantity(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, ItemDescriptor);" 
 [02] 14050D220 "int GetCurrentGlobalStorageAllowTransactionType();" 
 [03] 14031EC1C "bool CanAcceptItems(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EC2C "void RequestReplicateStorage(const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait);" 
 [05] 14031EC24 "const AZStd::vector<ItemContainerSlot, allocator>& GetStorageContents(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14050D22C "AZ::u64 GetRemoteWithdrawTaxFee(const AZStd::vector<ItemContainerSlot, allocator>&);" 
 [07] 14031EC34 "bool HasItemsAtLocation(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [08] 14031EBC8 "bool IsLootContainer(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[215] "GameEventUiNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144662190 "BehaviorEBusHandler* GameEventUiNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GameEventUiNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[216] "UiImageRepeaterBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143848670 "const EntityId* UiImageRepeaterBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "void SetSpritePathname(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBC0 "void SetImageWidth(float);" 
 [02] 14031EBFC "float GetPadding();" 
 [03] 14031EC24 "void SetPadding(float);" 
 [04] 14031EBF4 "float GetImageWidth();" 
 [05] 14031EBD0 "unsigned int GetNumRepeats();" 
 [06] 14031EC1C "void SetImageHeight(float);" 
 [07] 14031EC68 "float GetImageHeight();" 
 [08] 14031EBC8 "void SetNumRepeats(unsigned int);" 
 
[217] "CryCharacterPhysicsRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87640 "const EntityId* CryCharacterPhysicsRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void RequestVelocity(const Vector3&, int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[218] "ConversationEventsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1442164B0 "BehaviorEBusHandler* ConversationEventsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ConversationEventsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AD10 "const EntityId* ConversationEventsBus::GetCurrentBusId();" 
 
[219] "ProjectileNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144216A30 "BehaviorEBusHandler* ProjectileNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ProjectileNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B070 "const EntityId* ProjectileNotificationBus::GetCurrentBusId();" 
 
[220] "UiInitializationNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217690 "BehaviorEBusHandler* UiInitializationNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiInitializationNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B1F0 "const EntityId* UiInitializationNotificationsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void PostLoad();" 
 
[221] "ItemGeneratorEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F890 "BehaviorEBusHandler* ItemGeneratorEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ItemGeneratorEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3080 "const EntityId* ItemGeneratorEventBus::GetCurrentBusId();" 
 
[222] "CustomizableCharacterRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 142680F20 "const EntityId* CustomizableCharacterRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC48 "void StopPreview();" 
 [01] 14050D25C "void PreviewEquipmentPart(int, const Crc32&, const DyeData&);" 
 [02] 141553148 "bool IsTattooColorEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14155313C "bool IsTattooEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 141015BC8 "bool IsScarEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 141015BBC "bool IsFaceMarkEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 141015BB0 "bool IsEyeColorEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 141553130 "bool IsFacialHairEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [08] 141553124 "bool IsHairColorEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 141553118 "bool IsHairEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [10] 1405F6AE4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomHairstyle(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [11] 14050D220 "void ShowDefaultEquipment();" 
 [12] 1405F6ACC "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomGender();" 
 [13] 141553160 "void SetAlwaysUpdate(bool);" 
 [14] 1405F6C04 "AZStd::vector<const char*, allocator> GetBackstories();" 
 [15] 14155310C "bool IsRaceEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [16] 14031EC0C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTattooColor();" 
 [17] 1405F6AFC "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomHairColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [18] 141553100 "void SetTattooColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [19] 14050D22C "void ClearEquipment();" 
 [20] 14031EBD8 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetScar();" 
 [21] 1405F6C4C "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetTattooColors();" 
 [22] 1415530DC "void SetScar(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [23] 14031EC04 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetEyeColor();" 
 [24] 14031EC3C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomRace(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [25] 1405F6BE0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetSkintones();" 
 [26] 14031EBD0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetFaceMark();" 
 [27] 1415530F4 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetTattoos();" 
 [28] 1405F6B50 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetSkinToneImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [29] 1405F6BF8 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetFacialHairs();" 
 [30] 1405F6C7C "void SetHairstyle(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [31] 1415530AC "void SetHairColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [32] 1405F6AF0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomFacialHair(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [33] 1415530E8 "void SetTattoo(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [34] 14031EC24 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetRace();" 
 [35] 1405F6C58 "void SetGender(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [36] 1405F6C70 "void SetSkinTone(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [37] 14031EBC8 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetSkinTone();" 
 [38] 14031EBE0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTattoo();" 
 [39] 14031EC1C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetGender();" 
 [40] 1407595A8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomTattooColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [41] 14031EBFC "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetFacialHairColor();" 
 [42] 1405F6C64 "void SetRace(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [43] 1405F6B20 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomFaceMark(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [44] 14031EC68 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetHairColor();" 
 [45] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetFacialHair();" 
 [46] 1405F6C88 "void SetFacialHair(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [47] 1415530C4 "void SetEyeColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [48] 1405F6B8C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetEyeColorImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [49] 14031EBC0 "int GetGenderAsEnum();" 
 [50] 1405F6B2C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomScar(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [51] 1405F6C40 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetScars();" 
 [52] 1405F6AD8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomSkinTone(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [53] 1415530D0 "void SetFaceMark(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [54] 1405F6B98 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetFaceMarkImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [55] 14031EC2C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetHairstyle();" 
 [56] 1405F6BA4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetScarImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [57] 1405F6BEC "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetHairstyles();" 
 [58] 14050D250 "void StartPreview();" 
 [59] 1404C7A84 "void SetBackstory(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [60] 1415530B8 "void SetFacialHairColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [61] 1405F6B08 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomFacialHairColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [62] 141015BA4 "bool IsFacialHairColorEnabled(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [63] 1405F6B14 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomEyeColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [64] 14075959C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> RandomTattoo(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [65] 1405F6B38 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> DefaultSkinTone(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [66] 1405F6B44 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetRaceImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [67] 141553154 "void UpdateEquipmentSlot(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool, const DyeData&);" 
 [68] 1405F6B5C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetHairstyleImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [69] 1405F6B68 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetFacialHairImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [70] 1405F6C34 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetFaceMarks();" 
 [71] 1405F6B74 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetHairColorImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [72] 1405F6B80 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetFacialHairColorImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [73] 1405F6BB0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetTattooImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [74] 1405F6BBC "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetTattooColorImagePath(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [75] 1405F6BC8 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetRaces();" 
 [76] 1405F6C1C "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetFacialHairColors();" 
 [77] 1405F6BD4 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetRacesForGender(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [78] 1405F6C10 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetHairColors();" 
 [79] 14050D268 "bool IsCharacterInstanceValid();" 
 [80] 1405F6C28 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetEyeColors();" 
 
[223] "LensFlareComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3C810 "BehaviorEBusHandler* LensFlareComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LensFlareComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87820 "const EntityId* LensFlareComponentNotificationBus::GetCurrentBusId();" 
 
[224] "CharacterEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144216140 "BehaviorEBusHandler* CharacterEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CharacterEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AC50 "const EntityId* CharacterEventBus::GetCurrentBusId();" 
 
[225] "RoadsAndRiversGeometryRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87BB0 "const EntityId* RoadsAndRiversGeometryRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "bool ExistsAtPoint(float, float);" 
 [01] 14031EC24 "void SetGlobalWidth(float);" 
 [02] 14031EC68 "float GetSegmentLength();" 
 [03] 14031EBF4 "void SetSegmentLength(float);" 
 [04] 14031EC2C "float GetGlobalWidth();" 
 [05] 14031EC04 "Aabb GetAabb();" 
 [06] 14031EBC0 "void SetVariableWidth(unsigned int, float);" 
 [07] 14031EC1C "float GetVariableWidth(unsigned int);" 
 [08] 14031EC34 "void SetTileLength(float);" 
 [09] 14031EBC8 "float GetTileLength();" 
m_virtualProperties:
 [00]
  14031EC2C "float GlobalWidth();" 
  14031EC2C "float GlobalWidth(EntityId);" 
 [01]
  14031EC68 "float SegmentLength();" 
  14031EC68 "float SegmentLength(EntityId);" 
 [02]
  14031EBC8 "float TileLength();" 
  14031EBC8 "float TileLength(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[226] "MaterialOwnerNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3D520 "BehaviorEBusHandler* MaterialOwnerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void MaterialOwnerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87940 "const EntityId* MaterialOwnerNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[227] "UiNotificationsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 14499FB50 "BehaviorEBusHandler* UiNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EBC0 "bool RescindNotification(const AZ::Uuid&, bool, bool);" 
 [01] 14031EC14 "AZ::Uuid EnqueueNotification(Notification&);" 
 [02] 14031EC1C "int GetNumNotificationsByType(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&);" 
 
[228] "TurretEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217060 "BehaviorEBusHandler* TurretEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TurretEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B100 "const EntityId* TurretEventBus::GetCurrentBusId();" 
 
[229] "GameModeParticipantComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 142BEF080 "const EntityId* GameModeParticipantComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14050D268 "void LeaveQueueForAllGameModes();" 
 [01] 14031EC48 "void LeaveQueueForGameMode(Crc32);" 
 [02] 14031EC0C "int GetCurrentDungeonGameModeIndex();" 
 [03] 14031EC54 "const GameModeMutationContext& GetCurrentDungeonGameModeMutation();" 
 [04] 14031EBE8 "const GameModeStaticData& GetGameModeStaticData(Crc32);" 
 [05] 14031EC68 "EntityId GetGameModeEntityId(Crc32);" 
 [06] 14050D274 "const AZStd::vector<Crc32, allocator>& GetPossibleItemDropIds(Crc32);" 
 [07] 14031EC5C "Vector3 GetDungeonTeamTeleportData();" 
 [08] 14031EBC0 "bool IsFlagSet(int);" 
 [09] 1404C7AA8 "bool IsInQueueForGameMode(Crc32);" 
 [10] 14031EC24 "bool IsInGameMode(Crc32);" 
 [11] 14050D238 "TimePoint GetQueueJoinTimeForGameMode(Crc32);" 
 [12] 14050D250 "int GetGameModeQueueEligibility(Crc32, bool);" 
 [13] 14050D25C "bool JoinQueueForGameMode(Crc32, bool);" 
 [14] 14031EBE0 "Crc32 GetCurrentDungeonGameModeId();" 
 [15] 14031EC70 "const AZStd::vector<Crc32, allocator>& GetPossibleItemDropIdsForDifficulty(unsigned char);" 
 [16] 1404C7A84 "const Crc32 GetGameModeDifficultyCompletionEvent(unsigned char, unsigned char);" 
 [17] 1404C7AB4 "bool IsInQueueForAnyGameMode();" 
 [18] 14050D244 "WallClockTimePoint GetQueueEligibleTimeForGameMode(Crc32);" 
 
[230] "ProjectileSpawnerNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144216C40 "BehaviorEBusHandler* ProjectileSpawnerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ProjectileSpawnerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B0A0 "const EntityId* ProjectileSpawnerNotificationBus::GetCurrentBusId();" 
 
[231] "LocalPlayerComponentRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBD8 "WallClockTimePoint GetSyncedWallClockTime(const TimePoint&);" 
 [01] 14031EC24 "void TeleportPlayer(const Vector3&);" 
 [02] 14031EC34 "void RequestUnstuck();" 
 [03] 14031EC1C "void RequestSuicide(bool);" 
 [04] 14031EC04 "void RequestImmediateOverpopulationTeleport();" 
 [05] 14031EBC8 "void RequestAge();" 
 [06] 14031EBD0 "WallClockTimePoint GetCurrentSyncedWallClockTime();" 
 
[232] "NpcComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 142F3D8B0 "BehaviorEBusHandler* NpcComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void NpcComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 142F40F30 "const EntityId* NpcComponentNotificationsBus::GetCurrentBusId();" 
 
[233] "ContainerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421ACE0 "const EntityId* ContainerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6B14 "unsigned short GetTerritoryIdForGlobalStorage();" 
 [01] 1404C7A84 "AZStd::vector<ItemContainerSlot, allocator> GetFilteredContent(AZ::u64, bool, bool);" 
 [02] 14031EC70 "int GetIndexOfItemClassOfTier(AZ::u64, unsigned char);" 
 [03] 1405F6B20 "bool CheckItemClassCompatibility(AZ::u64);" 
 [04] 14031EBE8 "bool CanTransferItems();" 
 [05] 14050D250 "bool ContainsSalvageableItem();" 
 [06] 1404C7AA8 "float GetEncumbranceWarningPercent();" 
 [07] 1404C7A90 "int GetCurrentEncumbrance();" 
 [08] 1404C7AB4 "float GetFullWhenEncumberedModifier();" 
 [09] 1404C7A9C "int GetMaximumEncumbrance();" 
 [10] 14031EBFC "bool HasItem(const ItemDescriptor&, bool, unsigned int);" 
 [11] 14050D268 "const ItemContainerSlot& GetSlotRef(int);" 
 [12] 14031EBF4 "int GetNumSlots();" 
 [13] 14031EC2C "int GetMaxUniqueItemCount(const ItemDescriptor&, bool);" 
 [14] 14031EC68 "int GetNumEmptySlots();" 
 [15] 14050D25C "ItemContainerSlot GetSlot(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [16] 14031EC24 "unsigned int GetIngredientCount(const IngredientEntry&, bool, bool, bool);" 
 [17] 14050D238 "bool IsEncumbered();" 
 [18] 1405F6B2C "bool IsPlayerContainer();" 
 [19] 14050D244 "bool IsFullWhenEncumbered();" 
 [20] 14031EBC8 "int GetSlotIdByItemInstanceId(const AZ::Uuid&);" 
 [21] 14050D274 "AZStd::vector<int, allocator> FindGemsForItem(const ItemContainerSlot&);" 
 [22] 14031EBD8 "bool IsAtItemCapacity();" 
 [23] 14031EC54 "unsigned int GetSpaceToCraft(Crc32, int);" 
 [24] 14031EC1C "unsigned int GetItemCount(const ItemDescriptor&, bool, bool, bool);" 
 [25] 14031EC34 "int GetSlotIdByItemDescriptor(const ItemDescriptor&, bool);" 
 
[234] "ObjectiveRequestBus" 
BehaviorParameter: m_name: "ObjectiveInstanceId", m_traits: 0
m_getCurrentId:
 1449A3230 "const ObjectiveInstanceId* ObjectiveRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7AB4 "const Vector3 GetClosestPOIPosition();" 
 [01] 14031EBD8 "const EntityId GetOwningEntityId();" 
 [02] 14031EC5C "const ObjectiveCreationParams& GetCreationParams();" 
 [03] 14031EC24 "const char* GetJournalSlice();" 
 [04] 14031EC04 "bool CanBeAbandoned();" 
 [05] 1404C7AC0 "int GetDifficultyLevel();" 
 [06] 14031EC2C "const char* GetHUDSlice();" 
 [07] 14031EBC8 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetDescription();" 
 [08] 14031EC1C "const AZStd::vector<ObjectiveTaskInstanceId, allocator>& GetTasks();" 
 [09] 14031EBFC "unsigned char GetType();" 
 [10] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTitle();" 
 [11] 14031EBD0 "bool CanBeReset();" 
 [12] 14031EC0C "int GetRewardCount();" 
 [13] 14050D244 "bool IsDynamicPoiObjectiveActive();" 
 [14] 14031EC54 "const any& GetRewardData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [15] 14031EBE0 "const float GetProgress();" 
 [16] 14050D274 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetNpcDestinationGenericName();" 
 [17] 14050D238 "bool IsComplete();" 
 [18] 14031EBE8 "const ObjectiveData& GetObjectiveData();" 
 
[235] "UiDropdownNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416523F0 "BehaviorEBusHandler* UiDropdownNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDropdownNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FE20 "const EntityId* UiDropdownNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[236] "VoiceChatUiBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144217ED0 "BehaviorEBusHandler* VoiceChatUiBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void VoiceChatUiBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1440AA6A0 "void VoiceChatUiBus::QueueFunction({void(void* void* )}*, void*, void*);" 
 
[237] "UiCanvasAssetRefNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416518F0 "BehaviorEBusHandler* UiCanvasAssetRefNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCanvasAssetRefNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FA90 "const EntityId* UiCanvasAssetRefNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[238] "GameRequestsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1405F6BD4 "bool IsInDungeonGameMode();" 
 [01] 1405F6B38 "void RequestLogin(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [02] 1405F6C40 "AZStd::vector<SteamPresenseFriendInfo, allocator> GetSteamPresenceFriendsWorldInfo();" 
 [03] 14031EC04 "void RequestDisconnect(int);" 
 [04] 1405F6AE4 "bool IsAuthorized();" 
 [05] 14031EC54 "bool IsFastLoadEnabled();" 
 [06] 14031EBD8 "bool IsFirstRun();" 
 [07] 14031EC2C "bool RequestDebugPlayerName(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&);" 
 [08] 14031EBE8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetChangelist();" 
 [09] 1405F6BBC "bool IsInGridLayer();" 
 [10] 14031EC5C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetVersion();" 
 [11] 1405F6AFC "int GetConnectionStatus();" 
 [12] 14031EBE0 "void ClearFirstRun();" 
 [13] 1405F6B8C "void RebindAction(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [14] 1405F6B80 "void SaveRebindData();" 
 [15] 1405F6B98 "void ResetActionMaps();" 
 [16] 14031EBD0 "void ProceedToNewWorld(bool);" 
 [17] 1405F6BA4 "void ResetActionMapAction(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [18] 14050D220 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetRegionId();" 
 [19] 14050D268 "void OpenSteamStoreOverlay(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [20] 14031EC0C "bool IsDevWorld();" 
 [21] 1405F6BB0 "bool IsInMainMenu();" 
 
[239] "InputChannelNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 140624C60 "BehaviorEBusHandler* InputChannelNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void InputChannelNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578130A8
 
[240] "TutorialComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0700 "BehaviorEBusHandler* TutorialComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TutorialComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3590 "const EntityId* TutorialComponentNotificationsBus::GetCurrentBusId();" 
 
[241] "SkillExperienceDataBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "int GetRequiredExpForLevel(int);" 
 
[242] "TriggerAreaEntityNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3D1B0 "BehaviorEBusHandler* TriggerAreaEntityNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TriggerAreaEntityNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87EB0 "const EntityId* TriggerAreaEntityNotificationBus::GetCurrentBusId();" 
 
[243] "CrySystemEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1443B31A0 "BehaviorEBusHandler* CrySystemEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CrySystemEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[244] "AudioRtpcComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87430 "const EntityId* AudioRtpcComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void SetRtpcValue(const char*, float);" 
 [01] 14031EBC0 "void SetValue(float);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[245] "ProgressionPointsNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662BE0 "BehaviorEBusHandler* ProgressionPointsNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ProgressionPointsNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1446658A0 "const EntityId* ProgressionPointsNotificationBus::GetCurrentBusId();" 
 
[246] "UiGuildRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B190 "const EntityId* UiGuildRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14421CE10 "UiGuild GetGuildUiData();" 
 
[247] "VoiceChatControlBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14050D238 "const char* GetStatus();" 
 [01] 14031EC70 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetCurrentInputDeviceId();" 
 [02] 14031EC04 "bool IsVoiceChatServiceActivated();" 
 [03] 14031EBE8 "int GetCurrentMicVolume();" 
 [04] 14031EC54 "bool Are3dChannelsEnabled();" 
 [05] 14031EBF4 "void SetCurrentInputDeviceId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EBC8 "void SetMasterAudioInputDeviceSensitivity(int);" 
 [07] 14031EC24 "void SetLocalMicOn(bool);" 
 [08] 14050D244 "int GetStatusCode();" 
 [09] 14031EC2C "void SetMasterAudioOutputDeviceVolume(int);" 
 [10] 14031EBD8 "bool IsIn3dChannel();" 
 [11] 14031EC14 "void SetVoiceMode(int);" 
 [12] 14031EC68 "void SetCurrentOutputDeviceId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [13] 14031EC1C "void SetVoiceInputMode(int);" 
 [14] 14031EC34 "void SetMasterAudioInputDeviceVolume(int);" 
 [15] 14031EBD0 "bool IsIn2dChannel();" 
 [16] 14031EBE0 "int GetCurrentMode();" 
 [17] 14031EC5C "int GetCurrentSpeakerVolume();" 
 [18] 14031EC0C "int GetCurrentInputMode();" 
 [19] 14050D274 "int GetCurrentMicSensitivity();" 
 [20] 1404C7A90 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetCurrentOutputDeviceId();" 
 
[248] "MarkerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B4740 "const EntityId* MarkerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6B14 "float GetDistanceSqFromLocalPlayer();" 
 [01] 14031EC68 "SimplePlayerIdentification GetPlayerId();" 
 [02] 14050D274 "bool GetIsGuildMate();" 
 [03] 14031EBE8 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetGuildName();" 
 [04] 1405F6B08 "float GetDistanceFromScreenCenterSq();" 
 [05] 1404C7AB4 "int GetViewerCount();" 
 [06] 14031EBD0 "int GetPlayerLevel();" 
 [07] 1407595A8 "void TryInitialize();" 
 [08] 14031EBD8 "unsigned char GetPlayerFaction();" 
 [09] 14031EBE0 "GuildIconData GetCrestData();" 
 [10] 14031EC0C "bool GetIsStreaming();" 
 [11] 14031EC5C "bool GetIsFriend();" 
 [12] 14031EBF4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetType();" 
 [13] 14031EC54 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTwitchChannel();" 
 [14] 14050D244 "bool GetIsGroupMate();" 
 [15] 1404C7A9C "GuildId GetGuildId();" 
 [16] 1404C7AA8 "EntityId GetPlayerEntityId();" 
 [17] 1405F6B2C "bool GetStealthedVisibility();" 
 
[249] "UiOwnershipNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217A00 "BehaviorEBusHandler* UiOwnershipNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiOwnershipNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B2E0 "const EntityId* UiOwnershipNotificationsBus::GetCurrentBusId();" 
 
[250] "ImpactNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143B01BF0 "BehaviorEBusHandler* ImpactNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ImpactNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF757C778E8
 
[251] "MarkerNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144215B10 "BehaviorEBusHandler* MarkerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void MarkerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AF50 "const EntityId* MarkerNotificationBus::GetCurrentBusId();" 
 
[252] "GroupInfoRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421AE30 "const EntityId* GroupInfoRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "const RaidId& GetRaidId();" 
 [01] 14031EBC0 "const GroupId& GetGroupId();" 
 
[253] "PaperdollRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1431A81F0 "const EntityId* PaperdollRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14050D220 "bool SlotBlockedByCooldown(int);" 
 [01] 1405F6B14 "void PreviewEquipmentPart(int, const DyeData&);" 
 [02] 1405F6B08 "void StartPreviewFromInventory(int, int);" 
 [03] 1404C7AB4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetSlotIdByItemDescriptor(const ItemDescriptor&, bool);" 
 [04] 1405F6AFC "void StartPreview(int);" 
 [05] 14031EC0C "bool IsHideWhenSheathedDisabled(int);" 
 [06] 14031EC70 "int GetEquipLoadRatio(unsigned char);" 
 [07] 14050D22C "bool IsUsingShortSleeveChest();" 
 [08] 14031EBF4 "int GetAmmoCount(int);" 
 [09] 14031EC2C "const ItemContainerSlot* GetSlot(int);" 
 [10] 14050D25C "int GetLevelRequirementForSlot(int);" 
 [11] 1405F6B5C "float GetElementalDefenseRating();" 
 [12] 14031EC68 "int GetMaxAmmo(int);" 
 [13] 14031EBD8 "bool IsSheathed(int);" 
 [14] 14031EBFC "int GetActiveSlot(int);" 
 [15] 1405F6B44 "void RemovePrimaryWeapon();" 
 [16] 14031EC04 "int GetSlotIdByItemInstanceId(const AZ::Uuid&);" 
 [17] 1405F6ACC "bool RequiresShortSleeveChest(Crc32);" 
 [18] 1405F6AF0 "unsigned int GetPowerLevel();" 
 [19] 14050D250 "bool HasLevelRequirementForSlot(int);" 
 [20] 1405F6B50 "float GetPhysicalDefenseRating();" 
 [21] 1405F6B20 "void StopPreview(int, bool);" 
 
[254] "UiInteractorComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1442178A0 "BehaviorEBusHandler* UiInteractorComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiInteractorComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B220 "const EntityId* UiInteractorComponentNotificationsBus::GetCurrentBusId();" 
 
[255] "UiInteractorComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B250 "const EntityId* UiInteractorComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "bool IsInCommittedInteraction(unsigned char);" 
 [01] 14031EC24 "EntityId GetInteractable();" 
 [02] 14031EBFC "void DetermineInteraction(const EntityId&);" 
 [03] 14031EC1C "void RequestCancelCommittedInteraction();" 
 [04] 14031EC2C "void StopPositionUpdates(EntityId);" 
 [05] 14031EC68 "void RemoveInteraction();" 
 
[256] "ContractsRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1404C7AB4 "float GetTerritoryStandingDiscountPct(unsigned short);" 
 [01] 1404C7AA8 "AZStd::vector<AZStd::pair<int, int>, allocator> GetMaxGearScoreForRarityFilterForPlayer();" 
 [02] 1404C7A9C "AZ::u64 CalculateContractCompletionFee(AZ::u64, int, unsigned short);" 
 [03] 14031EC70 "float GetBuyContractTransactionTax(unsigned short, bool);" 
 [04] 14031EC34 "unsigned int GetCurrentSearchPage();" 
 [05] 14031EC68 "AZ::Uuid AcceptContract(const AZ::Uuid&);" 
 [06] 14031EBC0 "AZ::Uuid StartNonPaginatedSearchRequest(const SearchContractsRequestPayload&);" 
 [07] 14031EC14 "AZ::Uuid CreateContract(const ContractCreationParams&);" 
 [08] 14031EBF4 "int CanCreateContract(const ContractCreationParams&);" 
 [09] 1404C7A90 "AZ::u64 CalculateContractPostingFee(const Duration&, AZ::u64, unsigned int, int);" 
 [10] 14031EBC8 "unsigned int GetNumTotalSearchPages();" 
 [11] 14031EC54 "unsigned int GetCurrentLookupByParticipantPage();" 
 [12] 14050D238 "AZ::u64 GetUnmodifiedContractPostingFee(const Duration&, AZ::u64, unsigned int, int);" 
 [13] 14031EC1C "AZ::Uuid StartPaginatedSearchRequest(const SearchContractsRequestPayload&);" 
 [14] 14031EC24 "AZ::Uuid NextSearchPageRequest(const AZ::Uuid&);" 
 [15] 14031EBFC "AZ::Uuid CompleteContract(const AZ::Uuid&, const ContractCompletionParams&);" 
 [16] 14031EC2C "AZ::Uuid PrevSearchPageRequest(const AZ::Uuid&);" 
 [17] 1404C7A84 "int CalculateMaxContractPostingQuantity(const Duration&, AZ::u64, int, AZ::u64);" 
 [18] 14031EC04 "AZ::Uuid LookupContracts(const AZStd::vector<AZ::Uuid, allocator>&);" 
 [19] 14031EBE0 "AZ::Uuid NextLookupByParticipantPageRequest(const AZ::Uuid&);" 
 [20] 14031EBE8 "float GetBaseTradingTax();" 
 [21] 14031EBD0 "AZ::Uuid LookupContractsByParticipant(const AZ::Uuid&, int, int, int, int);" 
 [22] 14050D274 "float GetSellContractTransactionTax(unsigned short, bool);" 
 [23] 14031EBD8 "AZ::Uuid LookupContractsForLocalPlayer(int, int, int);" 
 [24] 14031EC0C "AZ::Uuid PrevLookupByParticipantPageRequest(const AZ::Uuid&);" 
 [25] 1404C7AC0 "float GetCompanyDiscountPct(unsigned short);" 
 [26] 14031EC5C "unsigned int GetNumTotalLookupByParticipantPages();" 
 
[257] "UiInteractableBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680180 "const EntityId* UiInteractableBus::GetCurrentBusId();" 
m_events:
 [00] 14050D250 "bool ShouldStayActiveAfterRelease();" 
 [01] 14031EC1C "void SetHoverEnterEventHandlingScale(Vector2);" 
 [02] 14031EC34 "Vector2 GetHoverExitEventHandlingScale();" 
 [03] 1404C7AC0 "void SetIsHandlingEvents(bool);" 
 [04] 14050D25C "void SetStayActiveAfterRelease(bool);" 
 [05] 1404C7AB4 "bool IsHandlingEvents();" 
 [06] 14050D244 "void SetIsAutoActivationEnabled(bool);" 
 [07] 14050D238 "bool GetIsAutoActivationEnabled();" 
 [08] 14031EC24 "Vector2 GetHoverEnterEventHandlingScale();" 
 [09] 14031EC2C "void SetHoverExitEventHandlingScale(Vector2);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[258] "UiRadioButtonGroupBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416804B0 "const EntityId* UiRadioButtonGroupBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "void AddRadioButton(EntityId);" 
 [01] 14031EBFC "void SetChangedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EBC0 "EntityId GetState();" 
 [03] 14031EBC8 "void RemoveRadioButton(EntityId);" 
 [04] 14031EC68 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetChangedActionName();" 
 [05] 14031EC1C "void SetState(EntityId, bool);" 
 [06] 14031EC24 "bool GetAllowUncheck();" 
 [07] 14031EC2C "void SetAllowUncheck(bool);" 
 [08] 14031EBF4 "bool ContainsRadioButton(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[259] "SimpleAnimationComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3CC30 "BehaviorEBusHandler* SimpleAnimationComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SimpleAnimationComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87C40 "const EntityId* SimpleAnimationComponentNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[260] "IntroControllerComponentRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBD8 "void SetCanSkipCutscene(bool);" 
 [01] 14031EC04 "void SetCurrentArchetypeIndex(int);" 
 [02] 14031EBD0 "void RequestPlayFaceCreationAnim();" 
 [03] 14031EC24 "void OnCharacterCreated();" 
 [04] 14031EC14 "void StartCutscene();" 
 [05] 14031EBC8 "void MoveCamera(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool, float);" 
 [06] 14031EC1C "void OnMenuBack();" 
 [07] 14031EC2C "void OnContinueToFTUE();" 
 [08] 14031EC34 "void OnExit();" 
 [09] 14031EBC0 "void OnMenuNext();" 
 [10] 14031EC68 "bool GetIsCameraMoving();" 
 [11] 14031EBFC "int GetCurrentArchetypeIndex();" 
 
[261] "WeaponEffectEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217F80 "BehaviorEBusHandler* WeaponEffectEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void WeaponEffectEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B4C0 "const EntityId* WeaponEffectEventBus::GetCurrentBusId();" 
 
[262] "UnifiedInteractOptionsComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B3D0 "const EntityId* UnifiedInteractOptionsComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void RemoveAllInteractOptions();" 
 [01] 14031EBC0 "void PopulateInteractOptions(const LocalPlayerComponentData&, const AZStd::vector<UnifiedInteractOption, allocator>&);" 
 
[263] "SimpleStateComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87CD0 "const EntityId* SimpleStateComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC68 "const char* GetCurrentState();" 
 [01] 14031EC1C "void SetStateByIndex(unsigned int);" 
 [02] 14031EBC8 "void SetToLastState();" 
 [03] 14031EBF4 "unsigned int GetNumStates();" 
 [04] 14031EBC0 "void SetState(const char*);" 
 [05] 14031EC24 "void SetToNextState();" 
 [06] 14031EC2C "void SetToPreviousState();" 
 [07] 14031EC34 "void SetToFirstState();" 
 
[264] "ObjectivesDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC2C "const StaticMissionData& GetMissionData(const Crc32&);" 
 [01] 14031EBE0 "int GetObjectiveDifficultyLevel(const Crc32&);" 
 [02] 14031EC1C "const ObjectiveData& GetObjectiveData(const Crc32&);" 
 [03] 14031EC24 "const ObjectiveData& GetMissionObjectiveData(const Crc32&);" 
 [04] 14031EC04 "const ObjectiveRewardData& GetObjectiveRewards(const Crc32&);" 
 [05] 14031EC34 "const TaskData& GetTaskDataByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[265] "UiVitalsNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144215FE0 "BehaviorEBusHandler* UiVitalsNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiVitalsNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B340 "const EntityId* UiVitalsNotificationsBus::GetCurrentBusId();" 
 
[266] "AbilityCooldownNotificationsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 14499F1B0 "BehaviorEBusHandler* AbilityCooldownNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void AbilityCooldownNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void OnAbilityTriggered(Crc32, float, bool);" 
 [01] 14031EC1C "void OnUpdatedInput(Crc32, Crc32);" 
 
[267] "AffixDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "const AffixData& GetAffixData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC24 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAffixCategory(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC1C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAffixDisplayName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[268] "UiDropdownOptionNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416524A0 "BehaviorEBusHandler* UiDropdownOptionNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDropdownOptionNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FE80 "const EntityId* UiDropdownOptionNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[269] "CustomizableCharacterNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144216560 "BehaviorEBusHandler* CustomizableCharacterNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CustomizableCharacterNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AD70 "const EntityId* CustomizableCharacterNotificationsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void OnSkinnedMeshCreated(const EntityId&);" 
 
[270] "UiCharacterServiceNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144217530 "BehaviorEBusHandler* UiCharacterServiceNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCharacterServiceNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC1C "void DeactivateCharacterResult(bool, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [01] 14031EBC0 "void CreateCharacterResult(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, WallClockTimePoint);" 
 [02] 14031EC24 "void ValidateNameResult(int, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 
[271] "EmoteDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "const AZStd::vector<const StaticEmoteData*, allocator>& GetEmoteList();" 
 [01] 14031EBC0 "const StaticEmoteData& GetEmoteDataById(Crc32);" 
 
[272] "ItemSkinDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "const AZStd::vector<Crc32, allocator>& GetItemSkinEntries(Crc32);" 
 [01] 14031EC24 "bool GetItemSkinDataFromId(Crc32, ItemSkinData&);" 
 [02] 14031EC1C "bool GetItemSkinDataFromKey(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, ItemSkinData&);" 
 
[273] "UiCheckboxBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FC40 "const EntityId* UiCheckboxBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetChangedActionName();" 
 [01] 14031EBD8 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTurnOffActionName();" 
 [02] 14031EC54 "void SetChangedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EBF4 "EntityId GetCheckedEntity();" 
 [04] 14031EBC8 "void SetCheckedEntity(EntityId);" 
 [05] 14031EC24 "bool ToggleState();" 
 [06] 14031EBFC "EntityId GetUncheckedEntity();" 
 [07] 14031EBC0 "bool GetState();" 
 [08] 14031EBD0 "void SetTurnOnActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EC1C "void SetState(bool);" 
 [10] 14031EC04 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetTurnOnActionName();" 
 [11] 14031EBE0 "void SetTurnOffActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [12] 14031EC68 "void SetUncheckedEntity(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[274] "SocialDataNotificationsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144216F00 "BehaviorEBusHandler* SocialDataNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SocialDataNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void NOCALL_OnPlayerDataReceived(const AZ::Uuid&, const AZStd::vector<PlayerDataView, allocator>&);" 
 
[275] "WarboardDataServiceBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B490 "const EntityId* WarboardDataServiceBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "WarboardStatClientData& GetWarboardStats();" 
 
[276] "JavCameraControllerRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1404C7A84 "unsigned int GetCameraStateId();" 
 [01] 1404C7A90 "const Vector3& GetAudioListenerOffset();" 
 [02] 14031EC5C "float GetAngleFromCamera(const Vector3&);" 
 [03] 14031EBD8 "float GetCameraPitch();" 
 [04] 14031EC70 "const char* GetCameraStateName();" 
 [05] 14031EC34 "void MakeActiveViewPointCamera(int, float, float, float);" 
 [06] 14031EBD0 "const Vector3& GetCameraLookDirection();" 
 [07] 14031EC2C "void MakeActiveView(float, float, float);" 
 [08] 14031EBC0 "void SetCameraEnableMouseInput(bool);" 
 [09] 14031EBC8 "void SetCameraLookAt(const Vector3&, bool);" 
 [10] 14031EC1C "void OverrideCameraState(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float);" 
 [11] 14031EC04 "const Vector3& GetCameraPosition();" 
 [12] 1404C7A9C "float GetCameraFov();" 
 [13] 14031EC24 "void RestoreCameraState(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float);" 
 [14] 14031EBF4 "void ClearCameraLookAt();" 
 
[277] "UiCharacterServiceRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "void CreateCharacter(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, EntityId);" 
 [01] 14031EC24 "void ValidateName(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [02] 14031EC2C "void SubmitCrestData(GuildIconData);" 
 [03] 14031EC1C "void DeactivateCharacter(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [04] 14031EC34 "int PreValidateNameCheck(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[278] "UiCanvasInputNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651B00 "BehaviorEBusHandler* UiCanvasInputNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCanvasInputNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14167FAC0 "const EntityId* UiCanvasInputNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[279] "MetaAchievementNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1443B37D0 "BehaviorEBusHandler* MetaAchievementNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void MetaAchievementNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1443B4770 "const EntityId* MetaAchievementNotificationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void OnRecieveMetaAchievementsSummaryInformation(const AZStd::vector<Crc32, allocator>&, const AZStd::vector<AZStd::pair<Crc32, unsigned int>, allocator, const AZStd::vector<Crc32, allocator>&);" 
 
[280] "UiCharacterNameValidationStatusBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217320 "BehaviorEBusHandler* UiCharacterNameValidationStatusBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCharacterNameValidationStatusBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B160 "const EntityId* UiCharacterNameValidationStatusBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetStatus(int);" 
 
[281] "JavSocialComponentBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1404C7AB4 "const WarDetails& GetUpcomingInvasionDetails(unsigned short);" 
 [01] 1404C7AA8 "bool IsInWarLockoutPeriod(unsigned short);" 
 [02] 1405F6B68 "unsigned char GetPronounTypeFromPronounTitleId(Crc32);" 
 [03] 1405F6B44 "const SimpleTreeCategoryData& GetTitleCategoryData(const Crc32&);" 
 [04] 1405F6B38 "const AZStd::vector<Crc32, allocator>& GetAllTitleCategoryIds();" 
 [05] 1407595A8 "void RequestSetTitlePronounType(unsigned char);" 
 [06] 14050D25C "const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait GetFriendInvites();" 
 [07] 14050D268 "const AZ::Uuid& RequestSearchPlayers_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 [08] 14031EC0C "AsyncSocialWrapper<Javelin::FactionType > GetRemotePlayerFaction_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 1405F6ACC "void RequestSetSocialBlock(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [10] 14050D238 "void SetChattingState(int);" 
 [11] 14031EC04 "AsyncSocialWrapper<GuildId > GetRemotePlayerGuildId_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [12] 1405F6AFC "Crc32 GetActiveTitleId();" 
 [13] 14031EBC0 "bool IsCachedPlayerActive(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [14] 14031EBFC "AsyncSocialWrapper<SimplePlayerIdentification > GetPlayerIdentificationByName_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [15] 14031EBE8 "void RequestFriendStatusChange(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [16] 14031EBD8 "AsyncSocialWrapper<unsigned int > GetRemotePlayerLevelData_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [17] 14050D250 "const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait GetFriends();" 
 [18] 14050D22C "bool IsPlayerBlocked(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [19] 14031EC14 "bool IsPlayerCached(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [20] 14031EBF4 "const SimplePlayerIdentification* GetCachedPlayerIdentification(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [21] 14031EC68 "AsyncSocialWrapper<SimplePlayerIdentification > GetPlayerIdentification_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [22] 14050D244 "const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait GetSocialBlocks();" 
 [23] 14031EC54 "bool IsFriend(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [24] 14031EC5C "bool IsPendingFriendRequest(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [25] 14031EBE0 "AsyncSocialWrapper<bool > GetRemotePlayerOnlineStatus_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [26] 14031EC3C "void RequestClearSocialBlock(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [27] 1405F6B5C "Crc32 GetNeutralTitleId(Crc32);" 
 [28] 14031EBD0 "AsyncSocialWrapper<PlayerIconData > GetRemotePlayerIconData_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [29] 14031EC48 "const AZ::Uuid& RequestGetPlayers_ServerCall(const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait);" 
 [30] 14050D220 "const AZ::Uuid& RequestLandClaimScoreDataForGuild_ServerCall(const GuildId&);" 
 [31] 1405F6AD8 "void RequestClearAllSocialBlocks();" 
 [32] 1405F6B20 "void RequestAvailableTitles();" 
 [33] 1405F6AE4 "void ReportPlayer(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [34] 14075959C "unsigned char GetTitlePronounType();" 
 [35] 1405F6AF0 "void RequestSetTitle(Crc32);" 
 [36] 1405F6B08 "const TitleData& GetTitleData(const Crc32&);" 
 [37] 1405F6B14 "const AZStd::vector<Crc32, allocator>& GetAllTitlesIds();" 
 [38] 1405F6B2C "const AZStd::vector<Crc32, allocator>& RequestNewTitles(bool);" 
 
[282] "UiCanvasRefBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FBE0 "const EntityId* UiCanvasRefBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "EntityId GetCanvas();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[283] "CooldownTimersComponentBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B4560 "const EntityId* CooldownTimersComponentBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "bool IsAbilityOnCooldown(Crc32);" 
 [01] 14031EC34 "void RequestUiUpdate();" 
 [02] 14031EC1C "bool AnyCooldownTimer();" 
 [03] 14031EBFC "float GetConsumableCooldown(Crc32);" 
 [04] 14031EBC8 "float GetAbilityCooldownTime(Crc32, const ItemContainerSlot&);" 
 [05] 14031EC04 "Crc32 GetConsumableCooldownItemId(Crc32);" 
 [06] 14031EC68 "bool IsConsumableOnCooldown(Crc32);" 
 
[284] "UiWorldListBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217CC0 "BehaviorEBusHandler* UiWorldListBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiWorldListBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B3A0 "const EntityId* UiWorldListBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetWorldCount(int);" 
 
[285] "UiImageSequenceBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416800C0 "const EntityId* UiImageSequenceBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "int GetImageType();" 
 [01] 14031EC2C "void SetImageType(int);" 
 [02] 14031EBC0 "Color GetColor();" 
 [03] 14031EC1C "void SetColor(const Color&);" 
 
[286] "UiScrollableNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651210 "BehaviorEBusHandler* UiScrollableNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiScrollableNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680600 "const EntityId* UiScrollableNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[287] "PlayerHousingClientNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662870 "BehaviorEBusHandler* PlayerHousingClientNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PlayerHousingClientNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1446657B0 "const EntityId* PlayerHousingClientNotificationBus::GetCurrentBusId();" 
 
[288] "ConsoleRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "void ExecuteConsoleCommand(const char*);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF75783EAE8
 
[289] "LyShineDataLayerNotificationsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1438B3720 "BehaviorEBusHandler* LyShineDataLayerNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LyShineDataLayerNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[290] "AudioUtilsEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1439D9C60 "BehaviorEBusHandler* AudioUtilsEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void AudioUtilsEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1439DB2B0 "const EntityId* AudioUtilsEventBus::GetCurrentBusId();" 
 
[291] "CapturePointNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144216090 "BehaviorEBusHandler* CapturePointNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CapturePointNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AC20 "const EntityId* CapturePointNotificationBus::GetCurrentBusId();" 
 
[292] "UiHealthComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1442175E0 "BehaviorEBusHandler* UiHealthComponentRequestsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiHealthComponentRequestsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B1C0 "const EntityId* UiHealthComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void UnbindHealth();" 
 [01] 14031EBC0 "void BindHealth(const UiVitalsStatBind&);" 
 
[293] "UiDynamicScrollBoxBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FF40 "const EntityId* UiDynamicScrollBoxBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "EntityId GetSectionHeaderEntityId(int);" 
 [01] 14031EC34 "void RemoveElementsFromSection(int, int);" 
 [02] 1404C7A9C "void SetAutoCalculateVariableElementSize(bool);" 
 [03] 14031EBC8 "void RemoveElementAtIndexFromSection(int, int);" 
 [04] 1405F6AE4 "float GetVariableSizeElementOffset(int);" 
 [05] 1404C7A84 "void SetElementsVaryInSize(bool);" 
 [06] 14050D22C "bool GetAutoCalculateVariableHeaderSize();" 
 [07] 14050D274 "void SetPrototypeElement(EntityId);" 
 [08] 1404C7AA8 "float GetEstimatedVariableElementSize();" 
 [09] 14031EBD0 "int GetElementIndexOfChild(EntityId);" 
 [10] 1404C7AC0 "bool GetSectionsEnabled();" 
 [11] 14031EC70 "bool GetElementsVaryInSize();" 
 [12] 14050D25C "bool GetHeadersSticky();" 
 [13] 14031EC0C "EntityId GetChildAtSectionAndElementIndex(int, int);" 
 [14] 14031EC04 "void ScrollToEnd();" 
 [15] 14050D244 "EntityId GetPrototypeHeader();" 
 [16] 14031EC24 "void RemoveElementsFromFront(int);" 
 [17] 1405F6AD8 "void SetEstimatedVariableHeaderSize(float);" 
 [18] 14031EC1C "void AddElementsToEnd(int, bool);" 
 [19] 14031EBC0 "void RefreshContent();" 
 [20] 1404C7A90 "bool GetAutoCalculateVariableElementSize();" 
 [21] 14050D220 "void SetHeadersVaryInSize(bool);" 
 [22] 14031EC5C "void SetAutoRefreshOnPostActivate(bool);" 
 [23] 14031EBD8 "int GetSectionIndexOfChild(EntityId);" 
 [24] 14031EBE0 "EntityId GetChildAtElementIndex(int);" 
 [25] 14050D250 "void SetPrototypeHeader(EntityId);" 
 [26] 14031EC68 "EntityId GetEntityIdAtElementIndexInSection(int, int);" 
 [27] 14031EC54 "bool GetAutoRefreshOnPostActivate();" 
 [28] 14050D268 "bool GetHeadersVaryInSize();" 
 [29] 14031EBE8 "EntityId GetPrototypeElement();" 
 [30] 1404C7AB4 "void SetEstimatedVariableElementSize(float);" 
 [31] 14050D238 "void SetSectionsEnabled(bool);" 
 [32] 14031EC48 "void SetHeadersSticky(bool);" 
 [33] 1405F6ACC "void SetAutoCalculateVariableHeaderSize(bool);" 
 [34] 14031EC3C "float GetEstimatedVariableHeaderSize();" 
 [35] 1405F6AF0 "EntityId GetChildElementAtLocationIndex(int);" 
 [36] 1405F6AFC "int GetLocationIndexOfChild(EntityId);" 
 [37] 14031EBF4 "bool IsElementIndexInSectionVisible(int, int);" 
 [38] 14031EC2C "void InsertElementsIntoSection(int, int, int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[294] "RagdollPhysicsRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87AC0 "const EntityId* RagdollPhysicsRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void EnterRagdoll();" 
 [01] 14031EC1C "void ExitRagdoll();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[295] "TagComponentRequests" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87E20 "const EntityId* TagComponentRequests::GetCurrentBusId();" 
m_events:
 [00] 1449A4ED0 "bool HasTag(unsigned int);" 
 
[296] "AmbientAudioManagerBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A2E70 "const EntityId* AmbientAudioManagerBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void SetCurveSpreadRatio(float);" 
 [01] 14031EBF4 "void GetAmbientWeightForType(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, AZStd::array<float, 4>&);" 
 [02] 14031EBFC "void UpdateRtpcNameForType(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EC04 "void SetRangeInfoForType(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float, float);" 
 [04] 14031EC24 "void RemoveAmbientData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EC68 "void UpdateTriggerNameForType(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [06] 14031EC1C "void AddAmbientData(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::array<AZStd::basic_string<char, AZStd::char_traits);" 
 
[297] "UILoadingNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3700 "const EntityId* UILoadingNotificationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void OnUILoadingComplete();" 
 
[298] "LyShineScriptBindNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144215A60 "BehaviorEBusHandler* LyShineScriptBindNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LyShineScriptBindNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[299] "EntityBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1403C2CC0 "BehaviorEBusHandler* EntityBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void EntityBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1403F26F0 "const EntityId* EntityBus::GetCurrentBusId();" 
 
[300] "LyShineDataLayerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1404C7A90 "Crc32 CallThree(Crc32, const any&, const any&, const any&);" 
 [01] 1404C7A84 "Crc32 CallTwo(Crc32, const any&, const any&);" 
 [02] 14050D274 "Crc32 Call(Crc32);" 
 [03] 14031EC1C "void RegisterObserver(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int, bool, bool);" 
 [04] 14031EC68 "void Delete(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EC34 "const any& GetDataFromNode(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EC70 "Crc32 CallOne(Crc32, const any&);" 
 [07] 14031EBC8 "void SetData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const any&);" 
 [08] 14031EC2C "Crc32 GetData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EC24 "void UnregisterObserver(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [10] 14031EBF4 "void Notify(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [11] 14031EBFC "void Reset();" 
 [12] 14031EBD8 "void ClearDataTree(Crc32);" 
 
[301] "UiDropdownBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FDF0 "const EntityId* UiDropdownBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7AB4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetOptionSelectedActionName();" 
 [01] 1404C7AA8 "void SetCollapsedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 1404C7A9C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetCollapsedActionName();" 
 [03] 1404C7A84 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetExpandedActionName();" 
 [04] 14050D274 "void Collapse();" 
 [05] 1404C7AC0 "void SetOptionSelectedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EBD0 "EntityId GetExpandedParentId();" 
 [07] 1404C7A90 "void SetExpandedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [08] 14031EC68 "void SetWaitTime(float);" 
 [09] 14031EC70 "void CollapseAnimationFinish();" 
 [10] 14031EBF4 "float GetWaitTime();" 
 [11] 14031EC1C "void SetValue(EntityId);" 
 [12] 14031EC24 "EntityId GetContent();" 
 [13] 14031EC04 "void SetCollapseOnOutsideClick(bool);" 
 [14] 14031EBE0 "EntityId GetTextElement();" 
 [15] 14031EBC8 "void SetExpandOnHover(bool);" 
 [16] 14031EBFC "bool GetCollapseOnOutsideClick();" 
 [17] 14031EBC0 "EntityId GetValue();" 
 [18] 14031EC0C "void SetTextElement(EntityId);" 
 [19] 14031EC34 "bool GetExpandOnHover();" 
 [20] 14031EC2C "void SetContent(EntityId);" 
 [21] 14031EBD8 "void SetExpandedParentId(EntityId);" 
 [22] 14031EC54 "EntityId GetIconElement();" 
 [23] 14031EC5C "void SetIconElement(EntityId);" 
 [24] 14031EBE8 "void Expand();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[302] "TimelineControllerComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A34D0 "const EntityId* TimelineControllerComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void TriggerTimelineEventForCrc(Crc32);" 
 [01] 14031EC1C "void TriggerTimelineOverrideForCrc(Crc32, Crc32, Crc32);" 
 [02] 14031EC24 "void UnTriggerTimelineOverrideForCrc(Crc32, Crc32);" 
 
[303] "ClientCurrencyRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421AC80 "const EntityId* ClientCurrencyRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "bool RequestTransferFundsToPlayer(AZ::u64, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[304] "DataLayerNodeBus" 
BehaviorParameter: m_name: "Crc32", m_traits: 0
m_getCurrentId:
 1438B3FD0 "const Crc32* DataLayerNodeBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetFullPath();" 
 [01] 14031EC1C "unsigned int SetData(const any&);" 
 [02] 14031EBC0 "const any& GetData();" 
 [03] 14031EC24 "Crc32 GetChild(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EC2C "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetChildren();" 
 
[305] "ObjectiveProviderRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421AF80 "const EntityId* ObjectiveProviderRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "bool IsCommunityGoalBoard();" 
 [01] 14031EC24 "bool AreTownBoardProjectsDisabled();" 
 
[306] "PingNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1446625B0 "BehaviorEBusHandler* PingNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PingNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void OnPingShown(const Vector3&, unsigned char, unsigned char, bool, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBC0 "void OnPingCancelled(unsigned char);" 
 
[307] "UiSpawnerNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651370 "BehaviorEBusHandler* UiSpawnerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiSpawnerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680720 "const EntityId* UiSpawnerNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[308] "VitalsComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3820 "const EntityId* VitalsComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7A84 "unsigned char GetRemainingDeathDoorCount();" 
 [01] 1404C7AA8 "bool IsDead();" 
 [02] 1405F6B5C "float GetVitalsArmorModifierValueById(Crc32);" 
 [03] 1404C7AC0 "const float GetDeathsDoorCooldown();" 
 [04] 14031EC34 "const float GetHealthMax();" 
 [05] 1405F6BC8 "float GetWeaknessFromDamageType(Crc32);" 
 [06] 1404C7AB4 "bool IsDeathsDoor();" 
 [07] 14031EC2C "const float GetCurrentHealth();" 
 [08] 14031EBE8 "const bool IsInfiniteDeathsDoor();" 
 [09] 1405F6B20 "float GetRemainingDeathsDoorTime();" 
 [10] 1405F6BD4 "float GetAbsorptionFromDamageType(Crc32);" 
 [11] 14050D238 "bool IsIncapacitated();" 
 
[309] "UiVitalsRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B370 "const EntityId* UiVitalsRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "UiVitalsStat GetHealthUiVitalsStatScript();" 
 [01] 14031EBC8 "void OnRequestReviveAccepted();" 
 [02] 14031EBF4 "void OnRequestReviveDeclined();" 
 
[310] "EncounterRewardsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B4620 "const EntityId* EncounterRewardsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "Crc32 GetEncounterRewards();" 
 
[311] "BuildableGridManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143A00EB0 "BehaviorEBusHandler* BuildableGridManagerBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void BuildableGridManagerBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[312] "ConfigProviderEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBE0 "void RegisterString(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC04 "void RegisterFloat(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float);" 
 [02] 1405F6B20 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetString(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14075959C "AZ::u64 GetUInt64(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 1405F6B5C "bool GetBool(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 1405F6B44 "float GetFloat(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 1405F6B08 "void UnRegister(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 14031EBD8 "void RegisterBool(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [08] 1407595A8 "int GetInt(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EC68 "void RegisterInt(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [10] 14031EC5C "void RegisterCStr(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const char*);" 
 
[313] "WarRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B460 "const EntityId* WarRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC5C "Duration GetConquestWindowDuration();" 
 [01] 14031EC54 "bool CanSetConquestWindow();" 
 [02] 14031EC68 "AZ::u64 GetWarDeclarationCost_PRIVATE(const GuildId&, unsigned short, unsigned char);" 
 [03] 14031EBC0 "void RequestDeclareWar(const GuildId&, AZ::u64, float, unsigned short, unsigned char, bool);" 
 [04] 14031EBFC "Duration GetWarPhaseDuration(int);" 
 [05] 14031EBF4 "WallClockTimePoint GetWarEndTime(const AZ::Uuid&);" 
 [06] 14031EC04 "bool DoesWarRequireTerritory();" 
 [07] 14031EC0C "bool DoesGuildHaveInfluenceToDeclareWar(unsigned short);" 
 [08] 14031EBC8 "bool CanModifyWar(const AZ::Uuid&);" 
 [09] 14031EBD0 "bool DoesGuildHaveTerritories(const GuildId&);" 
 [10] 14031EBD8 "int CanDeclareWar(const GuildId&, unsigned short, unsigned char);" 
 [11] 14031EBE0 "bool DoesWarConflictWithInvasion(const GuildId&, unsigned short);" 
 
[314] "AudioUtilsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC0C "void LoadFileAsync(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const EntityId&);" 
 [01] 14031EBFC "void ExecuteAudioTriggerAtPosition(const char*, const Vector3&);" 
 [02] 14031EBC0 "bool ExecuteGlobalAudioTrigger(const char*, bool, const EntityId&);" 
 [03] 14031EC1C "void SetGlobalAudioRtpc(const char*, float);" 
 [04] 14031EBD8 "void UnloadSoundBank(const char*);" 
 [05] 14031EC14 "void StopAllSound();" 
 [06] 14031EC24 "void SetGlobalAudioSwitchState(const char*, const char*);" 
 [07] 14031EBE0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> LoadFile(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [08] 14031EC04 "void ExecuteAudioTriggerAtPositionWithOptions(const char*, const Vector3&, const AudioTriggerOptions&);" 
 [09] 14031EBD0 "void LoadSoundBank(const char*);" 
 
[315] "UiDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC14 "bool ShouldClosePromptOnInteraction(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[316] "BeamAttackComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446653F0 "const EntityId* BeamAttackComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "Vector3 GetBeamSourcePos(const Crc32&);" 
 [01] 14031EC34 "Vector3 GetBeamHitPos(const Crc32&);" 
 
[317] "SocialBlockEventsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144216E50 "BehaviorEBusHandler* SocialBlockEventsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SocialBlockEventsBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[318] "ConfigSystemEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144216350 "BehaviorEBusHandler* ConfigSystemEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ConfigSystemEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1440AA490 "void ConfigSystemEventBus::QueueFunction({void(void* void* )}*, void*, void*);" 
 
[319] "LoreReaderNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F9F0 "BehaviorEBusHandler* LoreReaderNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LoreReaderNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3140 "const EntityId* LoreReaderNotificationsBus::GetCurrentBusId();" 
 
[320] "TimelineComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1436CF570 "const EntityId* TimelineComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void StartTimeline(Crc32, bool);" 
 [01] 14031EC24 "bool IsTimelinePaused(Crc32);" 
 [02] 14031EC1C "void SetTimelinePaused(Crc32, bool);" 
 [03] 14031EC34 "float GetTimelinePlayHeadTime(Crc32);" 
 [04] 14031EC2C "void SetTimelinePlayHeadTime(Crc32, float);" 
 
[321] "UiCACImageBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217110 "BehaviorEBusHandler* UiCACImageBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCACImageBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B130 "const EntityId* UiCACImageBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void SetCACImage(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 
[322] "MannequinRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87910 "const EntityId* MannequinRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7AC0 "void SetRequestAnimWeight(unsigned int, float);" 
 [01] 1404C7AA8 "void SetRequestSpeedBias(unsigned int, float);" 
 [02] 14031EC04 "void SetGroupTag(const char*, const char*);" 
 [03] 1404C7A84 "void StopRequest(unsigned int);" 
 [04] 14031EC68 "void ClearTag(const char*);" 
 [05] 1404C7A90 "int GetRequestStatus(unsigned int);" 
 [06] 1404C7AB4 "float GetRequestSpeedBias(unsigned int);" 
 [07] 14031EC0C "void SetScopeContext(const char*, const EntityId&, const char*);" 
 [08] 14031EBC0 "unsigned int QueueFragment(int, const char*, const char*, bool);" 
 [09] 14031EC2C "void PauseAll();" 
 [10] 1404C7A9C "void ForceFinishRequest(unsigned int);" 
 [11] 14031EC34 "void ResumeAll(int);" 
 [12] 14031EBC8 "void SetTag(const char*);" 
 [13] 14031EC5C "void ClearScopeContext(const char*);" 
 [14] 14050D238 "float GetRequestAnimWeight(unsigned int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[323] "ItemContainerBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1442157A0 "BehaviorEBusHandler* ItemContainerBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ItemContainerBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AEC0 "const EntityId* ItemContainerBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBE0 "AZ::Uuid GetItemInstanceId();" 
 [01] 14031EBD8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetSlotName();" 
 [02] 14031EC04 "void SetShouldCompare(bool);" 
 [03] 14031EC2C "void ClearItem();" 
 [04] 14031EC0C "bool IsEquippable();" 
 [05] 14031EC68 "void SetQuantity(int);" 
 [06] 14031EC24 "void SetItemByName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [07] 14031EC34 "void HideItem();" 
 [08] 14031EC1C "void SetItemByDescriptor(ItemDescriptor);" 
 [09] 14031EBF4 "void SetPrice(int);" 
 [10] 14031EBD0 "void SetSlotName(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [11] 14031EBC0 "void SetItem(const ItemContainerSlot&);" 
 [12] 14031EBC8 "void ShowItem();" 
 [13] 14031EBFC "void SetRequiredQuantity(int);" 
 
[324] "TradingPostRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3560 "const EntityId* TradingPostRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "unsigned int GetTotalBuyContracts();" 
 [01] 14031EBC0 "unsigned char GetItemCountThreshold(bool, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC24 "unsigned int GetTotalSellContracts();" 
 
[325] "UiCanvasSizeNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 141651E70 "BehaviorEBusHandler* UiCanvasSizeNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCanvasSizeNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[326] "UiContextMenuBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144215F30 "BehaviorEBusHandler* UiContextMenuBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiContextMenuBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EBC0 "void AddAction(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, bool);" 
 [01] 14031EC24 "void SetOpenLocation(Vector2);" 
 [02] 14031EC2C "void SetEnabled(bool);" 
 [03] 14031EC1C "void SetContextEntityId(EntityId);" 
 [04] 14031EC34 "bool IsContextMenuActive();" 
 
[327] "UiItemDurabilityBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217950 "BehaviorEBusHandler* UiItemDurabilityBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiItemDurabilityBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B280 "const EntityId* UiItemDurabilityBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void SetIsDamaged(bool);" 
 [01] 14031EBC0 "void SetProgressPercent(float);" 
 
[328] "CharacterAnimationRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87580 "const EntityId* CharacterAnimationRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void SetAnimationDrivenMotion(bool);" 
 [01] 14031EBC0 "void SetBlendParameter(unsigned int, float);" 
 [02] 14031EC1C "float GetBlendParameter(unsigned int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[329] "UiDebugCommandBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143EA5DE0 "BehaviorEBusHandler* UiDebugCommandBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiDebugCommandBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[330] "UiPopupBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144215C70 "BehaviorEBusHandler* UiPopupBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiPopupBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC24 "void ShowQuitGamePopup(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBF4 "void UpdatePopupMessage(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC68 "void HidePopup(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EC1C "void ShowError(int, const WallClockTimePoint&, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EBC0 "void ShowPopup(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[331] "TutorialUIRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A36D0 "const EntityId* TutorialUIRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBF4 "void CraftButtonPressed();" 
 [01] 14031EC24 "void OnTransitionOutCompleted();" 
 [02] 14031EC2C "void FocusUIElement(const Vector2&, float, float, int);" 
 [03] 14031EBC0 "void AdvanceStep();" 
 [04] 14031EC34 "void CraftingGroupSelected(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EC1C "void OnTransitionInCompleted();" 
 [06] 14031EBC8 "void CraftingItemSelected();" 
 
[332] "WarDataClientRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B400 "const EntityId* WarDataClientRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "bool IsAtWarWithGuild(const GuildId&);" 
 [01] 14031EBF4 "bool IsGuildMemberAValidWarTarget(const GuildId&);" 
 [02] 14031EC1C "const AZStd::vector<GuildId, allocator>& GetWarGuildIds();" 
 [03] 14031EBC0 "int GetNumWars();" 
 [04] 14031EBFC "bool IsAtWar();" 
 [05] 14031EC2C "AZ::Uuid GetWarId(const GuildId&);" 
 [06] 14031EC24 "const AZStd::vector<AZ::Uuid, allocator>& GetWarIds();" 
 [07] 14031EC68 "bool IsInConquestWarWithGuild(const GuildId&);" 
 [08] 14031EBD0 "bool IsInSiegeWarfare();" 
 [09] 14031EC04 "const WarDetails& GetWarDetails(const AZ::Uuid&);" 
 
[333] "UiScrollBarBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680570 "const EntityId* UiScrollBarBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void SetHandleEntity(EntityId);" 
 [01] 14031EC1C "void SetHandleSize(float);" 
 [02] 14031EC24 "float GetMinHandlePixelSize();" 
 [03] 14031EBC0 "float GetHandleSize();" 
 [04] 14031EC2C "void SetMinHandlePixelSize(float);" 
 [05] 14031EC34 "EntityId GetHandleEntity();" 
m_virtualProperties:
 [00]
  14031EBC0 "float HandleSize();" 
  14031EBC0 "float HandleSize(EntityId);" 
 [01]
  14031EC24 "float MinHandlePixelSize();" 
  14031EC24 "float MinHandlePixelSize(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[334] "UiPopupNotificationsBus" 
BehaviorParameter: m_name: "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>", m_traits: 10
m_createHandler:
 144215D20 "BehaviorEBusHandler* UiPopupNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiPopupNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B040 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc UiPopupNotificationsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void OnPopupResult(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[335] "GroupDataRequestBus" 
BehaviorParameter: m_name: "GroupId", m_traits: 0
m_getCurrentId:
 14421AE00 "const GroupId* GroupDataRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC68 "AZ::u64 GetDungeonRemainingEnterTime();" 
 [01] 14031EC24 "int GetMemberRaidPermissions(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EBC0 "void NotifyConnected();" 
 [03] 14031EBF4 "Crc32 GetDungeonGameModeId();" 
 [04] 14031EC1C "void NotifyConnectedForDungeonState();" 
 [05] 14031EC2C "bool GetMemberIsKickImmune(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EC34 "Vector3 GetGroupLeaderPosition();" 
 [07] 14031EBC8 "int GetGroupDungeonInstanceState();" 
 
[336] "BinkEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 141352CC0 "BehaviorEBusHandler* BinkEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void BinkEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[337] "LoadScreenBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B4710 "const EntityId* LoadScreenBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC5C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetCurrentLevelName();" 
 [01] 14031EC54 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetLoadingScreenStopLevelName();" 
 [02] 14031EBD8 "void UnregisterLoadingScreen();" 
 [03] 14031EBE0 "void ShowLoadingScreen(int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, float, bool, bool);" 
 [04] 14031EC0C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetLoadingScreenStartLevelName();" 
 [05] 14031EBD0 "void RegisterLoadingScreen(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EC04 "bool IsLoadingScreenShown();" 
 
[338] "ItemRepairNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144215900 "BehaviorEBusHandler* ItemRepairNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ItemRepairNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EBC0 "void OnStationTypesChanged();" 
 [01] 14031EC1C "void OnItemRepaired();" 
 
[339] "LocalGroupRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421AF20 "const EntityId* LocalGroupRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "int GetGroupDisplayIndex(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC1C "bool IsGroupMate(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC24 "bool IsGroupFull();" 
 
[340] "ItemRepairRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A30E0 "const EntityId* ItemRepairRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC34 "AZStd::vector<ItemDescriptor, allocator> GetRepairKitsForSlot(const ItemContainerSlot&);" 
 [01] 14031EBC8 "bool IsRepairRecipeKnown(const ItemContainerSlot&);" 
 [02] 14031EC54 "TotalRepairCost GetCostForRepairAllEquipment();" 
 [03] 14031EC5C "void RepairAllEquipment();" 
 [04] 14031EC2C "bool CanRepairItem(const ItemContainerSlot&, bool);" 
 [05] 14031EC24 "bool RepairItem(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [06] 14031EC1C "AZStd::vector<ItemDescriptor, allocator> GetRepairRecipeScript(const ItemContainerSlot&);" 
 [07] 14031EBFC "Crc32 GetRepairResourceItemId();" 
 [08] 14031EBD0 "bool IsValidGemForItem(const ItemLocation&, const ItemLocation&);" 
 [09] 14031EC04 "void RequestSlotItemWithGem(const ItemLocation&, const ItemLocation&);" 
 [10] 14031EBE0 "TotalRepairCost GetCostForRepairAllItemClass(AZ::u64);" 
 [11] 14031EC0C "void RepairAllItemClass(AZ::u64);" 
 [12] 14031EBD8 "void RequestSetLockState(const ItemLocation&, bool);" 
 
[341] "WaypointsRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "void RequestSetWaypoint(const Vector3&);" 
 
[342] "DefensiveStructureRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446654B0 "const EntityId* DefensiveStructureRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void BuildStructure(int);" 
 
[343] "TradingPostEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0650 "BehaviorEBusHandler* TradingPostEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TradingPostEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3530 "const EntityId* TradingPostEventBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void OnTradingPostCountsUpdate();" 
 [01] 14031EBC0 "void OnTradingPostPriceUpdate();" 
 
[344] "UiPlayerHomeComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144217C10 "BehaviorEBusHandler* UiPlayerHomeComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiPlayerHomeComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B310 "const EntityId* UiPlayerHomeComponentNotificationsBus::GetCurrentBusId();" 
 
[345] "EncounterRewardsNotficationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1443B3460 "BehaviorEBusHandler* EncounterRewardsNotficationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void EncounterRewardsNotficationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1443B45F0 "const EntityId* EncounterRewardsNotficationBus::GetCurrentBusId();" 
 
[346] "IntroControllerComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F7E0 "BehaviorEBusHandler* IntroControllerComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void IntroControllerComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3050 "const EntityId* IntroControllerComponentNotificationsBus::GetCurrentBusId();" 
 
[347] "MannequinNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C878E0 "const EntityId* MannequinNotificationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void OnActionStart(unsigned int);" 
 [01] 14031EC24 "void OnActionExit(unsigned int);" 
 [02] 14031EC1C "void OnActionComplete(unsigned int);" 
 [03] 14031EC2C "void OnActionDelete(unsigned int);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[348] "LootDropRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B2B0 "const EntityId* LootDropRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "float GetDistanceSqToLocalPlayer();" 
 [01] 14031EBC0 "void OpenLootDrop();" 
 
[349] "GlobalMapDataManagerNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1446623A0 "BehaviorEBusHandler* GlobalMapDataManagerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GlobalMapDataManagerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[350] "AttributeRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A2F60 "const EntityId* AttributeRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7A84 "const AZStd::vector<AZStd::pair<int, AZStd::vector<Crc32, alloc GetAttributeThresholds(int);" 
 [01] 14050D274 "bool CanRespec();" 
 [02] 14031EBE8 "AZ::u64 GetAttributeRespecCost();" 
 [03] 14031EC04 "int GetEquipmentAttributeBonusLevel(int);" 
 [04] 14031EBC8 "void ResetAllAttributePoints();" 
 [05] 14031EBFC "int GetAttributeBonusLevel(int);" 
 [06] 14031EBC0 "void AddAttributePointsToPool(int);" 
 [07] 14031EC2C "void AddPendingPointsToAttribute(int, int);" 
 [08] 14031EBD0 "int GetAttributeLevel(int);" 
 [09] 14031EC24 "void RemovePendingPointsFromAttribute(int, int);" 
 [10] 14031EC34 "void CancelPendingAttributePoints();" 
 [11] 14031EBF4 "void ApplyAttributeChanges();" 
 [12] 14031EC68 "int GetAttributeBaseLevel(int);" 
 
[351] "BinkRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1404C7AC0 "unsigned int GetCurrentFrame();" 
 [01] 1404C7AA8 "void SetUseRenderTarget(bool);" 
 [02] 1404C7A90 "void SetAlphaSettings(float, int);" 
 [03] 14031EBD0 "void EnableLooping(bool);" 
 [04] 14031EBF4 "void PlayFromSource(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [05] 14031EBE8 "bool GotoTime(float);" 
 [06] 14031EBE0 "void DisableDirectPlayMode();" 
 [07] 14031EC70 "bool GotoFrame(int);" 
 [08] 14031EC0C "bool DirectPlayMoveToTime(float);" 
 [09] 14031EBC8 "void Play();" 
 [10] 14050D274 "int GetFrameCount();" 
 [11] 14031EC68 "void Pause();" 
 [12] 14031EBFC "void Stop();" 
 [13] 14031EC04 "bool IsPlaying();" 
 [14] 14031EC1C "bool OpenVideoFile(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [15] 14031EC2C "void CloseVideoFile();" 
 [16] 14031EBC0 "bool IsVideoFileOpen();" 
 [17] 14031EC34 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetVideoPathname();" 
 [18] 14031EBD8 "void EnableDirectPlayMode();" 
 [19] 1404C7A84 "void SetDrawPosition(float, float, float, float);" 
 
[352] "PlayerInputFiltersRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B010 "const EntityId* PlayerInputFiltersRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void DisableFilter(const char*);" 
 [01] 14031EBC0 "void EnableFilter(const char*);" 
 
[353] "GameModeComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662240 "BehaviorEBusHandler* GameModeComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GameModeComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1446655D0 "const EntityId* GameModeComponentNotificationBus::GetCurrentBusId();" 
 
[354] "TerritoryDefinitionsDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "const TerritoryDefinition& GetTerritoryDefinition(unsigned short);" 
 [01] 14031EBF4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetPoiTagsStrings(const AZStd::vector<Crc32, allocator>&);" 
 [02] 14031EC1C "const TerritoryDefinition& GetTerritoryDefinitionByPoiTag(Crc32);" 
 [03] 14031EC2C "unsigned short GetTerritoryIdByPoiTag(const Crc32&);" 
 
[355] "SplineComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3CFA0 "BehaviorEBusHandler* SplineComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SplineComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87D90 "const EntityId* SplineComponentNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[356] "GuildsComponentBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14050D238 "int GetMaintenanceWindowEndHour(unsigned int);" 
 [01] 141553100 "bool IsGuildInActiveWarLottery();" 
 [02] 1405F6C04 "GuildTreasuryData GetGuildTreasuryData();" 
 [03] 1405F6BEC "void RequestWithdrawGuildTreasuryFunds(AZ::u64);" 
 [04] 1415530B8 "AZ::Uuid RequestListGuildsByMembers_ServerCall(int, unsigned short, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 1415530AC "AZ::Uuid RequestListGuildsByName_ServerCall(int, unsigned short, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 1405F6BE0 "void RequestDepositGuildTreasuryFunds(AZ::u64);" 
 [07] 1405F6C64 "AZ::u64 GetGuildSwitchingCooldownSeconds();" 
 [08] 1405F6C40 "int GetNumOnlineGuildMembers();" 
 [09] 1405F6B80 "Duration GetGuildSiegeWindowCooldownDuration();" 
 [10] 1415530D0 "AZ::Uuid RequestGetGuilds_ServerCall(const AZStd::vector<GuildId, allocator>&);" 
 [11] 1405F6B68 "void RequestRemoveGuildMember(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [12] 1405F6B20 "void RequestRejectGuildInvite(const GuildId&);" 
 [13] 1405F6B8C "Duration GetGuildSetSiegeDisabledDuration();" 
 [14] 1405F6B14 "void RequestAcceptGuildInvite(const GuildId&);" 
 [15] 1405F6B74 "void RequestSetGuildSiegeWindow(float);" 
 [16] 1404C7AC0 "int GetMaintenanceWindowStartHour(unsigned int);" 
 [17] 1405F6B2C "void RequestLeaveGuild();" 
 [18] 14031EBE8 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetListOfRanksForDropdown(bool);" 
 [19] 14050D244 "unsigned int OverlapsWithMaintenanceWindows(int);" 
 [20] 14031EC54 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetRankNameForSecurityLevel(int);" 
 [21] 14075959C "void RequestDeleteAllGuildInvites();" 
 [22] 1405F6C34 "int GetNumGuildMembers();" 
 [23] 14031EC0C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetPlayerRankName();" 
 [24] 1404C7A90 "bool CanSetMemberRank(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [25] 14031EBD8 "int GetRankSecurityLevel(int);" 
 [26] 14031EBFC "int GetMaxGuildRankNameLength();" 
 [27] 14031EC2C "const GuildId& GetGuildId();" 
 [28] 14031EC24 "bool IsGuildRank(int);" 
 [29] 14031EBD0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetRankName(int);" 
 [30] 14031EC1C "bool IsGuildMaster();" 
 [31] 14031EC14 "AsyncSocialWrapper<OtherGuildData > GetOtherGuildData_ServerCall(const GuildId&);" 
 [32] 1404C7AA8 "unsigned int GetValidSiegeWindowStartHour();" 
 [33] 14050D274 "unsigned char IsGuildMasterActive();" 
 [34] 14031EBC0 "bool IsGuildMate(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [35] 14031EC04 "const GuildRankDisplayInfo GetRankDisplayInfo(int);" 
 [36] 1405F6B50 "void RequestSetGuildMemberRank(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [37] 1405F6B5C "void RequestSetGuildMasterRank();" 
 [38] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetGuildName();" 
 [39] 1405F6B44 "bool RequestEditGuildMOTD(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [40] 1405F6C70 "AZ::u64 GetGuildRejoiningCooldownSeconds();" 
 [41] 14031EC5C "bool MeetsSecurityLevel(int);" 
 [42] 1404C7AB4 "unsigned int GetValidSiegeWindowEndHour();" 
 [43] 1405F6C88 "AZ::Uuid RequestGuildNameAvailability_ServerCall(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [44] 1405F6B38 "void RequestEditGuildIcon(const GuildIconData&);" 
 [45] 14031EC68 "int GetNumRanks();" 
 [46] 14031EBE0 "bool RankHasPrivilege(int, unsigned int);" 
 [47] 1405F6C4C "GuildMemberData GetGuildMemberData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [48] 14031EC70 "const AZStd::vector<GuildPrivilegeData, allocator>& GetPrivileges();" 
 [49] 1404C7A84 "bool HasPrivilege(unsigned int);" 
 [50] 14050D25C "bool CanSetSiegeWindow(float);" 
 [51] 1405F6BF8 "void RequestSetGuildTreasuryWithdrawalLimit(AZ::u64);" 
 [52] 1404C7A9C "bool CanRemoveMember(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [53] 1405F6BC8 "bool IsValidGuildName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [54] 1415530F4 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetGuildMemberCharacterIds();" 
 [55] 1405F6AE4 "void RequestCreateGuild(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const GuildIconData&);" 
 [56] 1405F6BD4 "bool HasSufficientGuildTreasuryFunds(AZ::u64);" 
 [57] 1405F6AF0 "void RequestGuildInvite(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [58] 1415530C4 "AZ::Uuid RequestListGuildsByClaims_ServerCall(int, unsigned short, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [59] 1405F6AFC "void RequestBatchGuildInvites(const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait);" 
 [60] 1407595A8 "void RequestEditGuildName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[357] "GuildNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144216980 "BehaviorEBusHandler* GuildNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GuildNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421AE90 "const EntityId* GuildNotificationsBus::GetCurrentBusId();" 
 
[358] "WarDataServiceBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421B430 "const EntityId* WarDataServiceBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "int GetNumWarsForGuild(const GuildId&);" 
 [01] 14031EBC0 "const AZStd::vector<WarDetails, allocator> GetWars();" 
 [02] 14031EC34 "const WarDetails& GetWarForTerritory(unsigned short);" 
 [03] 14031EC1C "int GetNumWars();" 
 [04] 14031EC24 "const AZStd::vector<WarDetails, allocator>& GetWarsForGuild(const GuildId&);" 
 [05] 14031EBF4 "const WarDetails& GetWarForRaid(const RaidId&);" 
 
[359] "StatusEffectsRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665930 "const EntityId* StatusEffectsRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14050D268 "const StaticStatusEffectData* GetStatusEffectDataByCrc(const Crc32&);" 
 [01] 14031EBC0 "bool HasStatusEffect(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[360] "GlobalStorageNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662450 "BehaviorEBusHandler* GlobalStorageNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GlobalStorageNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1446656C0 "const EntityId* GlobalStorageNotificationBus::GetCurrentBusId();" 
 
[361] "BenchmarkControllerComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421ABF0 "const EntityId* BenchmarkControllerComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void OnRetry();" 
 [01] 14031EBC0 "void OnContinue();" 
 
[362] "TransformNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 140624BB0 "BehaviorEBusHandler* TransformNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TransformNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1403F2750 "const EntityId* TransformNotificationBus::GetCurrentBusId();" 
 
[363] "EventNotificationRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421ADA0 "const EntityId* EventNotificationRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void ClientRequestSendNotification(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[364] "OwnershipRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421AFB0 "const EntityId* OwnershipRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "bool IsGuildOwned();" 
 [01] 14031EC24 "const GuildIconData& GetGuildCrestData();" 
 [02] 14031EC34 "const SimplePlayerIdentification& GetOwnerPlayerIdentification();" 
 [03] 14031EC1C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetGuildOwner();" 
 [04] 14031EBC0 "const GuildId& GetGuildId();" 
 [05] 14031EBE0 "bool IsOwnedByLocalPlayer();" 
 [06] 14031EC2C "unsigned int GetGuildSecurityLevel();" 
 [07] 14031EBF4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetGuildStructureName();" 
 [08] 14031EC54 "bool PlayerHasPermissions(const EntityId&, const GuildId&);" 
 
[365] "PlayerTradeRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665840 "const EntityId* PlayerTradeRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "void RequestConfirmRemoteGlobalStorageWithdrawAllItems(const EntityId&);" 
 [01] 14031EBC0 "void RequestConfirmRemoteGlobalStorageWithdrawItem(const EntityId&, AZ::Uuid, unsigned int);" 
 [02] 14031EC24 "void RequestConfirmRemoteGlobalStorageWithdrawItemsByClass(const EntityId&, AZ::u64);" 
 [03] 14031EC1C "void RequestConfirmRemoteGlobalStorageWithdrawAndEquipItem(const EntityId&, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, AZ::Uuid, unsigned int);" 
 
[366] "CryActionNotificationsBus" 
BehaviorParameter: m_name: "AZStd::basic_string<char, AZStd::char_traits<char>, allocator>", m_traits: 10
m_createHandler:
 143EA5FF0 "BehaviorEBusHandler* CryActionNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CryActionNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 143EA87B0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc CryActionNotificationsBus::GetCurrentBusId();" 
 
[367] "RaidDataNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144216CF0 "BehaviorEBusHandler* RaidDataNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void RaidDataNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void NOCALL_OnRaidJoined(const RaidId&, const AZStd::vector<GroupId, allocator>&);" 
 
[368] "PhysicsComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3D8A0 "BehaviorEBusHandler* PhysicsComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PhysicsComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87A30 "const EntityId* PhysicsComponentNotificationBus::GetCurrentBusId();" 
 
[369] "GroupsRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421AE60 "const EntityId* GroupsRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC3C "unsigned int GetMaxNumGroupsPerRaid();" 
 [01] 1405F6AE4 "const GroupId GetRemotePlayerGroupId(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14050D22C "unsigned int GetMaxGroupMembers();" 
 [03] 14050D268 "const GroupId& GetGroupId();" 
 [04] 14031EBC8 "bool HasPendingNewGroupInvite();" 
 [05] 1405F6ACC "const RaidId& GetRaidId();" 
 [06] 14050D250 "void RequestSetGroupColor(const GroupId&, unsigned char);" 
 [07] 14031EC48 "void RequestSetGroupObjective(const GroupId&, unsigned char);" 
 [08] 14050D244 "void RequestSetCurrentGroupColor(unsigned char);" 
 [09] 14050D25C "void RequestSetCurrentGroupObjective(unsigned char);" 
 [10] 14031EC5C "void RequestInitiateKickVotePlayer(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [11] 14031EBE8 "void RequestKickVotePlayer(bool);" 
 [12] 14031EC1C "void RequestDurableGroupInvite(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [13] 14031EBFC "void RequestLeaveGroup();" 
 [14] 14050D238 "void RequestSetGroupIcon(const GroupId&, unsigned char);" 
 [15] 14031EBC0 "void RequestGroupInvite(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [16] 14031EC68 "void RequestConvertToRaid();" 
 [17] 14031EC24 "void RequestBatchDurableGroupInvites(const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait);" 
 [18] 14031EC0C "void SetPingMute(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, bool);" 
 [19] 14031EBF4 "void RequestWithdrawInvites();" 
 [20] 14031EC54 "bool GetIsPingMuted(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [21] 1404C7AB4 "void RequestSetGroupName(const GroupId&, unsigned char);" 
 [22] 14031EC2C "void RequestReplyToGroupInvite(const AZ::Uuid&, bool);" 
 [23] 14050D274 "void RequestRemoveRaidMember(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [24] 1404C7A84 "void RequestSwapRaidMembers(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [25] 14031EC70 "void RequestMoveRaidMember(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, AZ::s8);" 
 [26] 1404C7A90 "void RequestSetRaidMemberPermission(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned char);" 
 [27] 1404C7AA8 "void RequestSetCurrentGroupName(unsigned char);" 
 [28] 14050D220 "bool IsInGroup();" 
 [29] 1404C7AC0 "void RequestSetCurrentGroupIcon(unsigned char);" 
 
[370] "SiegeWarfareDataComponentNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144662C90 "BehaviorEBusHandler* SiegeWarfareDataComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SiegeWarfareDataComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[371] "GroupsUINotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144216820 "BehaviorEBusHandler* GroupsUINotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GroupsUINotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[372] "GroupDataNotificationBus" 
BehaviorParameter: m_name: "GroupId", m_traits: 0
m_createHandler:
 144216770 "BehaviorEBusHandler* GroupDataNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GroupDataNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421ADD0 "const GroupId* GroupDataNotificationBus::GetCurrentBusId();" 
 
[373] "JavMetaAchievementRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "void RequestSummaryPageInfo();" 
 [01] 14031EC14 "void RequestAllProgressForCategory(Crc32);" 
 [02] 14031EC24 "const MetaAchievementData& GetMetaAchievementData(const Crc32&);" 
 [03] 14031EC1C "const AZStd::vector<Crc32, allocator>& GetAllMetaAchievementIds();" 
 [04] 14031EC2C "const AZStd::vector<Crc32, allocator>& GetAllCategoryIds();" 
 [05] 14031EBF4 "void ClearPendingMetaAchievements();" 
 [06] 14031EBFC "bool IsDisplayOneIndexed(const Crc32&);" 
 [07] 14031EC04 "bool IsDisplayBinary(const Crc32&);" 
 [08] 14031EC34 "const SimpleTreeCategoryData& GetCategoryData(const Crc32&);" 
 [09] 14031EBC8 "void RequestRewardPendingAchievementIds();" 
 [10] 14031EC68 "const AZStd::vector<Crc32, allocator>& GetTitlesIdsForMetaAchievement(const Crc32&);" 
 
[374] "ConversationRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14421AD40 "const EntityId* ConversationRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void RequestConversationOption(unsigned char, Crc32);" 
 
[375] "UiTransform2dBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680840 "const EntityId* UiTransform2dBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void SetAnchorsScript(Anchors);" 
 [01] 14031EC2C "Offsets GetOffsets();" 
 [02] 14031EC04 "float GetLocalHeight();" 
 [03] 14031EBFC "void SetLocalHeight(float);" 
 [04] 14031EC34 "void SetOffsets(Offsets);" 
 [05] 14031EBC0 "Anchors GetAnchors();" 
 [06] 14031EBC8 "void SetPivotAndAdjustOffsets(Vector2);" 
 [07] 14031EC1C "void SetAnchors(Anchors, bool, bool);" 
 [08] 14031EC68 "float GetLocalWidth();" 
 [09] 14031EBF4 "void SetLocalWidth(float);" 
m_virtualProperties:
 [00]
  14031EC68 "float LocalWidth();" 
  14031EC68 "float LocalWidth(EntityId);" 
 [01]
  14031EBC0 "Anchors Anchors();" 
  14031EBC0 "Anchors Anchors(EntityId);" 
 [02]
  14031EC04 "float LocalHeight();" 
  14031EC04 "float LocalHeight(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[376] "UiMarkupButtonBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680360 "const EntityId* UiMarkupButtonBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void SetLinkColor(const Color&);" 
 [01] 14031EC2C "void SetLinkHoverColor(const Color&);" 
 [02] 14031EC34 "void SetOverrideLinkColor(const Color&, int);" 
 [03] 14031EBC0 "Color GetLinkColor();" 
 [04] 14031EC24 "Color GetLinkHoverColor();" 
 [05] 14031EBC8 "void ClearOverrideLinkColors();" 
 
[377] "RaidSetupRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1404C7A90 "bool HasManagePermission(unsigned short);" 
 [01] 1404C7A84 "TimePoint GetKickRaidMemberCooldown();" 
 [02] 14031EBE8 "const PlayerWarSignupData* GetSignupStatus(unsigned short);" 
 [03] 14031EBC8 "void RequestFillRoster();" 
 [04] 1404C7A9C "int CanSignUpForRaid(int);" 
 [05] 14031EBC0 "void RequestSignup(int);" 
 [06] 14031EC68 "void RequestAddPlayerToRoster(const SimplePlayerIdentification&, int);" 
 [07] 14031EC14 "void RequestRemoteInteract(unsigned short);" 
 [08] 14031EBD0 "void RequestMovePlayer(const SimplePlayerIdentification&, int, int, int);" 
 [09] 14031EC1C "void RequestSignupList(int);" 
 [10] 14031EC70 "bool GetIsBackfillEnabled();" 
 [11] 14031EC34 "void RequestSetRoster(const RaidRoster&);" 
 [12] 14031EC2C "void RequestRoster();" 
 [13] 14031EBF4 "void RequestSetBackfillEnabled(bool);" 
 [14] 14031EBE0 "void RequestSetPlayerPermissions(const SimplePlayerIdentification&, int, int, unsigned char);" 
 [15] 14031EC24 "void RequestSignupCount(int);" 
 [16] 14031EC04 "void RequestKickPlayer(const SimplePlayerIdentification&);" 
 [17] 14031EBFC "void RequestRemovePlayerFromRoster(const SimplePlayerIdentification&, int, int);" 
 [18] 14031EBD8 "void RequestSwapPlayers(const SimplePlayerIdentification&, int, int, const SimplePlayerIdentification&, int, int, °%YR÷, );" 
 [19] 14031EC54 "void RequestLeave(unsigned short);" 
 [20] 14031EC0C "void RequestSetGroupData(int, unsigned char, unsigned char, unsigned char, unsigned char);" 
 [21] 14031EC5C "AZStd::vector<unsigned short, allocator> GetSignedUpTerritories();" 
 [22] 14050D274 "const RaidRoster& GetRoster();" 
 
[378] "CategoricalProgressionRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665450 "const EntityId* CategoricalProgressionRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14050D244 "const StaticTradeskillRankData& GetStaticTradeskillRankData(Crc32, unsigned short);" 
 [01] 14031EC04 "bool HasEnoughPoints(const Crc32&, AZ::u64);" 
 [02] 1404C7AC0 "const StaticCategoricalProgressionData& GetCategoricalProgressionData(const Crc32&);" 
 [03] 14031EBF4 "AZ::u64 GetRequiredCoinForRank(const Crc32&, unsigned short);" 
 [04] 14031EC1C "unsigned short GetRank(const Crc32&);" 
 [05] 1404C7A9C "const StaticCategoricalProgressionRankData& GetRankData(const Crc32&, unsigned short);" 
 [06] 1404C7AA8 "unsigned short PreviewRank(const Crc32&, AZ::u64);" 
 [07] 14050D238 "const StaticPostSkillCapProgressionData& GetPostSkillCapProgressionData(const Crc32&);" 
 [08] 14050D250 "AZStd::vector<const GatherableData*, allocator> GetTradeskillLockedGatherableData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [09] 14031EBC0 "unsigned short GetMaxRank(const Crc32&);" 
 [10] 14031EBFC "unsigned char GetRequiredLevelForRank(const Crc32&, unsigned short);" 
 [11] 14031EC24 "AZ::u64 GetProgression(const Crc32&);" 
 [12] 14031EBC8 "AZ::u64 GetRequiredPointsForRank(const Crc32&, unsigned short);" 
 [13] 14031EC34 "AZ::u64 GetMaxPointsForRank(const Crc32&, unsigned short);" 
 [14] 14031EC68 "AZ::u64 GetMaxPointsForCurrentRank(const Crc32&);" 
 
[379] "UiInteractRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1443B47A0 "const EntityId* UiInteractRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD8 "const AZStd::vector<UnifiedInteractOption, allocator>& GetInteractOptions();" 
 [01] 14031EBE0 "const EntityId GetTerritoryEntityId();" 
 
[380] "RaidSetupNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144216DA0 "BehaviorEBusHandler* RaidSetupNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void RaidSetupNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC1C "void NOCALL_OnSignupListReceived(int, int, const AZStd::vector<SimplePlayerIdentification, allocator>&);" 
 
[381] "CategoricalProgressionNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144661B60 "BehaviorEBusHandler* CategoricalProgressionNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CategoricalProgressionNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665420 "const EntityId* CategoricalProgressionNotificationBus::GetCurrentBusId();" 
 
[382] "EntitlementRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1404C7A84 "const AZStd::vector<Crc32, allocator>& GetEntitlementsForEntryIdOfRewardType(unsigned char, Crc32);" 
 [01] 14031EC24 "bool AreThereNewEntitlements();" 
 [02] 14031EC1C "bool IsEntryIdOfRewardTypeEntitled(unsigned char, Crc32);" 
 [03] 14031EBE8 "const StoreProductData& GetStoreProductData(Crc32);" 
 [04] 14031EC2C "unsigned int GetEntitlementBalance(Crc32);" 
 [05] 14031EBF4 "void FetchTransactions();" 
 [06] 14050D274 "Crc32 GetEntitlementForConsumable(unsigned char, Crc32);" 
 [07] 14031EBFC "void SyncEntitlements();" 
 [08] 14031EC34 "bool IsEntryIdOfRewardTypeNew(unsigned char, Crc32);" 
 [09] 14031EC68 "void FetchCatalog();" 
 [10] 14031EC5C "const EntitlementData& GetEntitlementData(Crc32);" 
 [11] 1404C7A9C "void RequestTransaction(InitializeTransactionRequest&, bool);" 
 [12] 14031EBD8 "void MarkEntryIdOfRewardTypeSeen(unsigned char, Crc32);" 
 [13] 14031EC04 "void MarkAllEntitlementsSeen();" 
 [14] 14031EBE0 "void GetAllEntitlementIds(AZStd::vector<Crc32, allocator>&);" 
 [15] 14031EC0C "void GetAllRewardsOfType(unsigned char, AZStd::vector<Crc32, allocator>&);" 
 [16] 1404C7AA8 "void RequestTransferCharacter(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[383] "LandClaimRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC0C "const unsigned short GetTerritoryIdForWorldPos(const Vector3&);" 
 [01] 14031EBE0 "bool GetTerritoryRequiresGuildContribution(const unsigned short&, unsigned char);" 
 [02] 1404C7AB4 "unsigned char GetFactionControlOwner(const unsigned short&);" 
 [03] 14050D274 "const unsigned char GetCurrentLeaderboardPeriod();" 
 [04] 1404C7A9C "const WallClockTimePoint& GetTerritoryConflictStartTime(const unsigned short&);" 
 [05] 14031EC04 "const TerritoryProgressionSummaryData& GetTerritoryProgressionData(const unsigned short&);" 
 [06] 14031EC68 "GovernanceTaxData GetTerritoryGovernanceDataNormalized(const unsigned short&);" 
 [07] 14031EBE8 "AZStd::vector<LandClaimScoreData, allocator> GetCurrentPeriodLeaderboard();" 
 [08] 14031EC2C "const LandClaimOwnerData& GetClaimOwnerData(const unsigned short&);" 
 [09] 14031EBFC "const AZStd::vector<unsigned char, allocator> GetTerritoryFactionInfluencePercentages(const unsigned short&);" 
 [10] 14031EC24 "const LandClaimPosData& GetClaimPosData(const unsigned short&);" 
 [11] 14031EC1C "const AZStd::vector<unsigned short, allocator>& GetClaimKeys();" 
 [12] 14031EC5C "const AZStd::vector<LandClaimScoreData, allocator>& GetClaimsLeaderboard();" 
 [13] 1404C7A84 "WallClockTimePoint GetLeaderboardPeriodEndTime();" 
 [14] 14031EC54 "const LandClaimStreakData& GetClaimStreakData(const unsigned short&);" 
 [15] 14031EBF4 "const GovernanceTaxData& GetTerritoryGovernanceData(const unsigned short&);" 
 [16] 14031EC70 "const unsigned char GetNumLeaderboardPeriodsInSeason();" 
 [17] 14031EBD0 "int GetTerritoryDarknessThreshold(const unsigned short&);" 
 [18] 1404C7A90 "unsigned char GetTerritoryConflictFaction(const unsigned short&);" 
 [19] 1404C7AA8 "const WallClockTimePoint GetTerritoryConflictLotteryEndTime(const unsigned short&);" 
 [20] 1404C7AC0 "unsigned char GetFactionControlCaptureStatus(const unsigned short&);" 
 
[384] "FullScreenFaderEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144661F80 "BehaviorEBusHandler* FullScreenFaderEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void FullScreenFaderEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[385] "GuildDataNotificationsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1442168D0 "BehaviorEBusHandler* GuildDataNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GuildDataNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EC14 "void NOCALL_OnOtherGuildDataReceived(const AZ::Uuid&, const AZStd::vector<OtherGuildData, allocator>&);" 
 
[386] "JavelinCameraRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBD0 "float GetCurrentDepthOfFieldBlur();" 
 [01] 14031EBD8 "float GetCurrentDepthOfFieldNearDistance();" 
 [02] 14031EBFC "float GetDefaultDepthOfFieldNearBlurScale();" 
 [03] 14031EC04 "float GetCurrentDepthOfFieldDistance();" 
 [04] 14031EC2C "void RestoreDepthOfField();" 
 [05] 14031EC14 "void ShakeCamera(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EBC0 "void EnableDepthOfField(bool);" 
 [07] 14031EC1C "void SetDepthOfField(float, float, float, float, float);" 
 [08] 14031EBC8 "float GetDefaultDepthOfFieldDistance();" 
 [09] 14031EBE0 "float GetCurrentDepthOfFieldNearBlurScale();" 
 [10] 14031EC24 "void StoreCurrentDepthOfField();" 
 [11] 14031EC34 "void ResetDepthOfField();" 
 [12] 14031EBF4 "float GetDefaultDepthOfFieldBlur();" 
 [13] 14031EC68 "float GetDefaultDepthOfFieldNearDistance();" 
 
[387] "SocialNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144216FB0 "BehaviorEBusHandler* SocialNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SocialNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 14421B0D0 "const EntityId* SocialNotificationsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "void OnShowSetConquestNotification(const AZ::Uuid&);" 
 
[388] "RiverRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87B50 "const EntityId* RiverRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC3C "void Rebuild();" 
 [01] 1405F6ACC "float GetWaterStreamSpeed();" 
 [02] 14031EC0C "float GetLengthStartFadeDist();" 
 [03] 14050D238 "float GetWaterCausticIntensity();" 
 [04] 14050D274 "float GetWidthFadeDist();" 
 [05] 14031EBE0 "void SetLengthStartFadeDist(float);" 
 [06] 1404C7AC0 "void SetWaterCausticIntensity(float);" 
 [07] 14031EBE8 "void SetWidthFadeDist(float);" 
 [08] 14031EBD8 "Color GetFogColor();" 
 [09] 14031EBD0 "void SetFogColor(Color);" 
 [10] 14031EC68 "float GetFogColorScale();" 
 [11] 14031EBFC "void SetWaterFogDensity(float);" 
 [12] 14031EC34 "void SetWaterCapFogAtVolumeDepth(bool);" 
 [13] 14031EBC0 "void SetWaterVolumeDepth(float);" 
 [14] 14031EC24 "void SetTileWidth(float);" 
 [15] 14031EC2C "float GetTileWidth();" 
 [16] 14031EC70 "void SetFogColorAffectedBySun(bool);" 
 [17] 14031EC48 "float GetWaterCausticTiling();" 
 [18] 14031EC1C "float GetWaterVolumeDepth();" 
 [19] 14031EC04 "float GetWaterFogDensity();" 
 [20] 14031EBF4 "void SetFogColorScale(float);" 
 [21] 14031EC54 "void SetLengthEndFadeDist(float);" 
 [22] 14031EBC8 "bool GetWaterCapFogAtVolumeDepth();" 
 [23] 1404C7A9C "float GetWaterFogShadowing();" 
 [24] 14031EC5C "float GetLengthEndFadeDist();" 
 [25] 1404C7A84 "bool GetFogColorAffectedBySun();" 
 [26] 1404C7A90 "void SetWaterFogShadowing(float);" 
 [27] 1404C7AA8 "void SetWaterCaustics(bool);" 
 [28] 1404C7AB4 "bool GetWaterCaustics();" 
 [29] 14050D244 "void SetWaterCausticHeight(float);" 
 [30] 14050D25C "void SetWaterCausticTiling(float);" 
 [31] 14050D250 "float GetWaterCausticHeight();" 
 [32] 14050D268 "void SetPhysicalize(bool);" 
 [33] 14050D220 "bool GetPhysicalize();" 
 [34] 14050D22C "void SetWaterStreamSpeed(float);" 
m_virtualProperties:
 [00]
  14031EC5C "float LengthEndFadeDist();" 
  14031EC5C "float LengthEndFadeDist(EntityId);" 
 [01]
  14031EC0C "float LengthStartFadeDist();" 
  14031EC0C "float LengthStartFadeDist(EntityId);" 
 [02]
  14050D274 "float WidthFadeDist();" 
  14050D274 "float WidthFadeDist(EntityId);" 
 [03]
  14031EBC8 "bool WaterCapFogAtVolumeDepth();" 
  14031EBC8 "bool WaterCapFogAtVolumeDepth(EntityId);" 
 [04]
  14031EC04 "float WaterFogDensity();" 
  14031EC04 "float WaterFogDensity(EntityId);" 
 [05]
  14050D250 "float WaterCausticHeight();" 
  14050D250 "float WaterCausticHeight(EntityId);" 
 [06]
  14031EC1C "float WaterVolumeDepth();" 
  14031EC1C "float WaterVolumeDepth(EntityId);" 
 [07]
  1405F6ACC "float WaterStreamSpeed();" 
  1405F6ACC "float WaterStreamSpeed(EntityId);" 
 [08]
  14031EC2C "float TileWidth();" 
  14031EC2C "float TileWidth(EntityId);" 
 [09]
  14031EC68 "float FogScaleColor();" 
  14031EC68 "float FogScaleColor(EntityId);" 
 [10]
  14031EBD8 "Color FogColor();" 
  14031EBD8 "Color FogColor(EntityId);" 
 [11]
  1404C7A84 "bool FogColorAffectedBySun();" 
  1404C7A84 "bool FogColorAffectedBySun(EntityId);" 
 [12]
  14031EC48 "float WaterCausticTiling();" 
  14031EC48 "float WaterCausticTiling(EntityId);" 
 [13]
  1404C7A9C "float WaterFogShadowing();" 
  1404C7A9C "float WaterFogShadowing(EntityId);" 
 [14]
  1404C7AB4 "bool WaterCaustics();" 
  1404C7AB4 "bool WaterCaustics(EntityId);" 
 [15]
  14050D238 "float WaterCausticIntensity();" 
  14050D238 "float WaterCausticIntensity(EntityId);" 
 [16]
  14050D220 "bool Physicalize();" 
  14050D220 "bool Physicalize(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[389] "AudioPreloadComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C873D0 "const EntityId* AudioPreloadComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void UnloadWaitForTriggerFinished(const unsigned int&);" 
 [01] 14031EC1C "void Unload();" 
 [02] 14031EC24 "void LoadPreload(const char*);" 
 [03] 14031EBC0 "void Load();" 
 [04] 14031EC2C "void UnloadPreload(const char*);" 
 [05] 14031EC34 "bool IsLoaded(const char*);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[390] "VitalsComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0DE0 "BehaviorEBusHandler* VitalsComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void VitalsComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A37F0 "const EntityId* VitalsComponentNotificationBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "void NOCALL_OnDamage(const EntityId&, float, const Vector3&, float, bool, const AZStd::vector<DamageByTypeData, allocator>&, bool, bool);" 
 
[391] "CrySystemNotificationsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143EA6200 "BehaviorEBusHandler* CrySystemNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CrySystemNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[392] "UiClickableTextBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FCA0 "const EntityId* UiClickableTextBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "void SetClickableTextColor(int, const Color&);" 
 
[393] "UiScrollerNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1416512C0 "BehaviorEBusHandler* UiScrollerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiScrollerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141680660 "const EntityId* UiScrollerNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[394] "WaterVolumeComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14183C5E0 "const EntityId* WaterVolumeComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6B80 "float GetWaveSimulationAreaGrowth();" 
 [01] 1405F6B5C "void SetWaveForce(float);" 
 [02] 1405F6B50 "float GetWaveHeightLimit();" 
 [03] 1405F6B44 "void SetWaveHeightLimit(float);" 
 [04] 14075959C "float GetWaveSleepThreshold();" 
 [05] 1405F6B20 "float GetWaveTimestep();" 
 [06] 1405F6B68 "float GetWaveForce();" 
 [07] 1405F6B14 "void SetWaveTimestep(float);" 
 [08] 1405F6AF0 "float GetWaveSpeed();" 
 [09] 1405F6AFC "void SetWaveDampening(float);" 
 [10] 1405F6AE4 "void SetWaveSpeed(float);" 
 [11] 1405F6B08 "float GetWaveDampening();" 
 [12] 1405F6AD8 "float GetWaveSurfaceCellSize();" 
 [13] 14031EC3C "void SetWaveSurfaceCellSize(float);" 
 [14] 1405F6ACC "float GetObjectSizeLimit();" 
 [15] 14031EBD8 "bool GetFogColorAffectedBySun();" 
 [16] 14031EBD0 "void SetFogColorAffectedBySun(bool);" 
 [17] 14050D238 "float GetSpillableVolume();" 
 [18] 14031EC54 "void SetCapFogAtVolumeDepth(bool);" 
 [19] 14031EC0C "float GetFogShadowing();" 
 [20] 14031EC04 "float GetFogColorMultiplier();" 
 [21] 1405F6B74 "void SetWaveSimulationAreaGrowth(float);" 
 [22] 14031EC34 "void SetFogDensity(float);" 
 [23] 14031EBC0 "void SetSurfaceUScale(float);" 
 [24] 14031EC1C "float GetSurfaceUScale();" 
 [25] 14031EC5C "bool GetCapFogAtVolumeDepth();" 
 [26] 1404C7AC0 "void SetSpillableVolume(float);" 
 [27] 14031EC24 "void SetSurfaceVScale(float);" 
 [28] 14031EC70 "void SetCausticIntensity(float);" 
 [29] 14031EC48 "float GetExtrudeBorder();" 
 [30] 1405F6B38 "float GetWaveDepthCellSize();" 
 [31] 1404C7A9C "float GetCausticTiling();" 
 [32] 14031EC2C "float GetSurfaceVScale();" 
 [33] 1404C7AB4 "float GetCausticHeight();" 
 [34] 14031EBE0 "void SetFogShadowing(float);" 
 [35] 14031EBE8 "void SetCausticsEnabled(bool);" 
 [36] 14031EBFC "void SetFogColorMultiplier(float);" 
 [37] 14031EBC8 "float GetFogDensity();" 
 [38] 14031EBF4 "void SetFogColor(Vector3);" 
 [39] 14050D250 "float GetVolumeAccuracy();" 
 [40] 1405F6B2C "void SetWaveSleepThreshold(float);" 
 [41] 14031EC68 "Vector3 GetFogColor();" 
 [42] 14050D274 "bool GetCausticsEnabled();" 
 [43] 1404C7A84 "float GetCausticIntensity();" 
 [44] 1404C7A90 "void SetCausticTiling(float);" 
 [45] 14050D220 "bool GetConvexBorder();" 
 [46] 1404C7AA8 "void SetCausticHeight(float);" 
 [47] 14050D244 "void SetVolumeAccuracy(float);" 
 [48] 14050D268 "void SetConvexBorder(bool);" 
 [49] 14050D25C "void SetExtrudeBorder(float);" 
 [50] 1407595A8 "void SetWaveDepthCellSize(float);" 
 [51] 14050D22C "void SetObjectSizeLimit(float);" 
m_virtualProperties:
 [00]
  1405F6B80 "float WaveSimulationAreaGrowth();" 
  1405F6B80 "float WaveSimulationAreaGrowth(EntityId);" 
 [01]
  1405F6B38 "float WaveDepthCellSize();" 
  1405F6B38 "float WaveDepthCellSize(EntityId);" 
 [02]
  14075959C "float WaveSleepThreshold();" 
  14075959C "float WaveSleepThreshold(EntityId);" 
 [03]
  1405F6B50 "float WaveHeightLimit();" 
  1405F6B50 "float WaveHeightLimit(EntityId);" 
 [04]
  1405F6B08 "float WaveDampening();" 
  1405F6B08 "float WaveDampening(EntityId);" 
 [05]
  1405F6AF0 "float WaveSpeed();" 
  1405F6AF0 "float WaveSpeed(EntityId);" 
 [06]
  1405F6B20 "float WaveTimestep();" 
  1405F6B20 "float WaveTimestep(EntityId);" 
 [07]
  1405F6AD8 "float WaveSurfaceCellSize();" 
  1405F6AD8 "float WaveSurfaceCellSize(EntityId);" 
 [08]
  14050D274 "bool CausticsEnabled();" 
  14050D274 "bool CausticsEnabled(EntityId);" 
 [09]
  14050D238 "float SpillableVolume();" 
  14050D238 "float SpillableVolume(EntityId);" 
 [10]
  1405F6B68 "float WaveForce();" 
  1405F6B68 "float WaveForce(EntityId);" 
 [11]
  14031EBD8 "bool FogColorAffectedBySun();" 
  14031EBD8 "bool FogColorAffectedBySun(EntityId);" 
 [12]
  14031EC2C "float SurfaceVScale();" 
  14031EC2C "float SurfaceVScale(EntityId);" 
 [13]
  14031EC1C "float SurfaceUScale();" 
  14031EC1C "float SurfaceUScale(EntityId);" 
 [14]
  14031EC5C "bool CapFogAtVolumeDepth();" 
  14031EC5C "bool CapFogAtVolumeDepth(EntityId);" 
 [15]
  14031EBC8 "float FogDensity();" 
  14031EBC8 "float FogDensity(EntityId);" 
 [16]
  14031EC04 "float FogColorMultiplier();" 
  14031EC04 "float FogColorMultiplier(EntityId);" 
 [17]
  14031EC0C "float FogShadowing();" 
  14031EC0C "float FogShadowing(EntityId);" 
 [18]
  1405F6ACC "float ObjectSizeLimit();" 
  1405F6ACC "float ObjectSizeLimit(EntityId);" 
 [19]
  14031EC68 "Vector3 FogColor();" 
  14031EC68 "Vector3 FogColor(EntityId);" 
 [20]
  1404C7A9C "float CausticTiling();" 
  1404C7A9C "float CausticTiling(EntityId);" 
 [21]
  1404C7A84 "float CausticIntensity();" 
  1404C7A84 "float CausticIntensity(EntityId);" 
 [22]
  1404C7AB4 "float CausticHeight();" 
  1404C7AB4 "float CausticHeight(EntityId);" 
 [23]
  14031EC48 "float ExtrudeBorder();" 
  14031EC48 "float ExtrudeBorder(EntityId);" 
 [24]
  14050D250 "float VolumeAccuracy();" 
  14050D250 "float VolumeAccuracy(EntityId);" 
 [25]
  14050D220 "bool ConvexBorder();" 
  14050D220 "bool ConvexBorder(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[395] "PhysicsComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87A60 "const EntityId* PhysicsComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBF4 "void AddAngularImpulseAtPoint(const Vector3&, const Vector3&);" 
 [01] 14031EBC8 "void AddAngularImpulse(const Vector3&);" 
 [02] 14031EC34 "void AddImpulseAtPoint(const Vector3&, const Vector3&);" 
 [03] 14031EC04 "Vector3 GetAngularVelocity();" 
 [04] 14031EC0C "float GetLinearDamping();" 
 [05] 14031EBFC "void SetVelocity(const Vector3&);" 
 [06] 14031EC54 "void SetLinearDamping(float);" 
 [07] 14031EC1C "void DisablePhysics();" 
 [08] 14031EBD0 "void SetAngularVelocity(const Vector3&);" 
 [09] 14031EC68 "Vector3 GetVelocity();" 
 [10] 14031EBC0 "void EnablePhysics();" 
 [11] 14031EBE0 "void SetMass(float);" 
 [12] 14031EC24 "bool IsPhysicsEnabled();" 
 [13] 14031EC2C "void AddImpulse(const Vector3&);" 
 [14] 14031EBD8 "float GetMass();" 
 [15] 14050D274 "float GetSleepThreshold();" 
 [16] 14031EC70 "void SetSleepThreshold(float);" 
 
[396] "SkillDataBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC24 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetSkillDataDisplayCategory(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBC0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetSkillKeys();" 
 [02] 14031EBC0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetSkillKeysByCategory();" 
 [03] 14031EC2C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetSkillDataDisplayName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[397] "ParticleManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC54 "void SpawnDecal(const Vector3&, const Vector3&, float, float, float, const char*);" 
 [01] 14031EBD8 "void StopParticleAtAttachment(EntityId, const char*, const char*, bool);" 
 [02] 14031EC2C "unsigned int SpawnParticleAtJointCrcOffset(EntityId, unsigned int, const char*, const Transform&, bool, int, nvertVal);" 
 [03] 14031EC14 "unsigned int SpawnParticle(const char*, const Vector3&, const Vector3&, bool);" 
 [04] 14031EBC8 "unsigned int SpawnParticleAtAttachment(EntityId, const char*, const char*, const Vector3&, bool, int);" 
 [05] 14031EC24 "unsigned int SpawnParticleAtJointOffset(EntityId, const char*, const char*, const Vector3&, const Vector3&, float, bool, int, m_loudnessLevel);" 
 [06] 14031EBD0 "void StopParticleAtJoint(EntityId, const char*, const char*, bool);" 
 [07] 14031EBC0 "unsigned int SpawnParticleAtJoint(EntityId, const char*, const char*, const Vector3&, bool, int, );" 
 [08] 14031EC1C "unsigned int SpawnParticleAtJointCrc(EntityId, unsigned int, const char*, const Vector3&, bool, int);" 
 [09] 14031EBF4 "unsigned int SpawnParticleAtAttachmentOffset(EntityId, const char*, const char*, const Vector3&, const Vector3&, float, bool, int);" 
 [10] 14031EBE0 "void StopParticleAttachedToEntity(EntityId, const char*, bool);" 
 [11] 14031EC5C "void SetTargetEntity(unsigned int, EntityId, const Vector3&);" 
 [12] 14031EC68 "unsigned int SpawnParticleAttachedToEntity(EntityId, const char*, Vector3, bool, int);" 
 [13] 14031EC04 "void StopParticle(unsigned int, bool);" 
 
[398] "VoiceChatClientBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_queueFunction:
 1440AA5A0 "void VoiceChatClientBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_events:
 [00] 1404C7A90 "void RequestToggleGroupChannelPresence(bool);" 
 
[399] "UiCanvasNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141651BB0 "BehaviorEBusHandler* UiCanvasNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiCanvasNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 1414BF9D0 "void UiCanvasNotificationBus::QueueFunction({void(void* void* )}*, void*, void*);" 
m_getCurrentId:
 14167FA30 "const EntityId* UiCanvasNotificationBus::GetCurrentBusId();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[400] "DamageDataBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC04 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAfflictedTooltipText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBD0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetDamageTypeRowKey(int);" 
 [02] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAfflictionIcon(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EC2C "Color GetAfflictionFillingColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14031EBC0 "const AZStd::vector<AZ::s8, allocator>& GetAfflictionRowKeys();" 
 [05] 14031EBC8 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAfflictionBGImage(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EC1C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAfflictionRowKey(int);" 
 [07] 14031EC68 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAfflictionTextAfflicted(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [08] 14031EBF4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAfflictionText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EC24 "Color GetAfflictionColor(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [10] 14031EBFC "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAfflictionTooltipText(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[401] "AchievementRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665300 "const EntityId* AchievementRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "bool IsAchievementUnlocked(const unsigned int&);" 
 [01] 14031EBF4 "AZStd::vector<Crc32, allocator> RequestUnlockedAchievements(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[402] "FtueSystemRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "void SetIsFtue(bool);" 
 [01] 14031EC14 "bool IsFtue();" 
 [02] 14031EC2C "bool IsInCutscene();" 
 
[403] "UiLayoutCellBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680240 "const EntityId* UiLayoutCellBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD8 "void SetExtraHeightRatio(float);" 
 [01] 14031EC04 "void SetExtraWidthRatio(float);" 
 [02] 14031EBC0 "float GetMinWidth();" 
 [03] 14031EC1C "void SetMinWidth(float);" 
 [04] 14031EBD0 "float GetExtraHeightRatio();" 
 [05] 14031EC24 "float GetMinHeight();" 
 [06] 14031EC34 "float GetTargetWidth();" 
 [07] 14031EC2C "void SetMinHeight(float);" 
 [08] 14031EBC8 "void SetTargetWidth(float);" 
 [09] 14031EBF4 "float GetTargetHeight();" 
 [10] 14031EC68 "void SetTargetHeight(float);" 
 [11] 14031EBFC "float GetExtraWidthRatio();" 
m_virtualProperties:
 [00]
  14031EBD0 "float ExtraHeightRatio();" 
  14031EBD0 "float ExtraHeightRatio(EntityId);" 
 [01]
  14031EC34 "float TargetWidth();" 
  14031EC34 "float TargetWidth(EntityId);" 
 [02]
  14031EC24 "float MinHeight();" 
  14031EC24 "float MinHeight(EntityId);" 
 [03]
  14031EBC0 "float MinWidth();" 
  14031EBC0 "float MinWidth(EntityId);" 
 [04]
  14031EBF4 "float TargetHeight();" 
  14031EBF4 "float TargetHeight(EntityId);" 
 [05]
  14031EBFC "float ExtraWidthRatio();" 
  14031EBFC "float ExtraWidthRatio(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[404] "CollectiblesRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665480 "const EntityId* CollectiblesRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "unsigned short GetMaxCollectibleCount(Crc32);" 
 [01] 14031EC2C "unsigned short GetCollectibleCount(Crc32);" 
 [02] 14031EBC0 "const CollectibleStaticData& GetCollectibleStaticData(Crc32);" 
 [03] 14031EC1C "unsigned short GetCollectibleTerritory(Crc32);" 
 [04] 14031EC34 "const AZStd::vector<Crc32, allocator>& GetAllCollectibleKeys();" 
 
[405] "PingRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "void ModifyLastPingRequest(unsigned char);" 
 [01] 14031EBC0 "void RequestPing(unsigned char, bool, float, const Vector3&);" 
 [02] 14031EC2C "void OnPingedWaypoint();" 
 [03] 14031EC24 "void CancelPing();" 
 
[406] "LightNotification" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3C8C0 "BehaviorEBusHandler* LightNotification::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LightNotification::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87880 "const EntityId* LightNotification::GetCurrentBusId();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[407] "TerritoryGovernanceRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC70 "bool HasCurrentTerritoryGuildPrivilege(unsigned int);" 
 [01] 14050D274 "const TerritoryProgressionData& GetTerritoryProgressionData(const Crc32&);" 
 [02] 14031EBE0 "const WallClockTimePoint& GetTaxOrFeeCanChange(unsigned short, unsigned char);" 
 [03] 14031EC54 "bool RequestStartProject(const Crc32&, bool);" 
 [04] 14031EC68 "const AZStd::vector<TerritoryStatusEffect, allocator>& GetActiveTerritoryStatusEffects();" 
 [05] 14031EC04 "float GetMinTaxOrFeeRate(unsigned char);" 
 [06] 14031EBE8 "const AZStd::vector<Crc32, allocator>& GetTerritoryProgressionProjectIds();" 
 [07] 14031EBC8 "const GovernanceEarningsData& GetTerritoryGovernanceEarningsData();" 
 [08] 14031EC34 "const WallClockTimePoint& GetUpkeepPenaltyTime(unsigned short);" 
 [09] 14031EBD0 "float GetMaxTaxOrFeeRate(unsigned char);" 
 [10] 14031EBC0 "void PayUpkeepCost(unsigned short, bool);" 
 [11] 14031EC24 "const WallClockTimePoint& GetUpkeepDueTime(unsigned short);" 
 [12] 14031EC2C "const WallClockTimePoint& GetUpkeepCanPayTime(unsigned short);" 
 [13] 14031EC1C "AZ::u64 GetUpkeepCost(unsigned short);" 
 [14] 14031EBF4 "const GovernanceEarningsPeriodData& GetTerritoryGovernanceCurrentEarningsData();" 
 [15] 14031EC0C "void SetTaxOrFee(unsigned short, unsigned char, float);" 
 [16] 14031EBFC "int GetCompletedTerritoryUpgrades();" 
 [17] 14031EC14 "unsigned char GetTerritoryLevel(unsigned short);" 
 [18] 14031EBD8 "bool CanModifyTaxRates(unsigned short);" 
 [19] 14031EC5C "void RequestCancelProject(const Crc32&);" 
 
[408] "TerritoryInterfaceComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662DF0 "BehaviorEBusHandler* TerritoryInterfaceComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TerritoryInterfaceComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665990 "const EntityId* TerritoryInterfaceComponentNotificationsBus::GetCurrentBusId();" 
 
[409] "FactionControlDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "const StaticFactionControlData& GetFactionControlDataDefinition(unsigned char);" 
 
[410] "FactionControlClientBroadcastNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144661CC0 "BehaviorEBusHandler* FactionControlClientBroadcastNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void FactionControlClientBroadcastNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[411] "PlayerHousingClientRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1405F6BB0 "unsigned int GetTimeBeforeTaxesCanBePaidSeconds();" 
 [01] 1405F6B98 "bool CanPayTaxes();" 
 [02] 1405F6B80 "void ClientRequestPlotAdditionalInfo();" 
 [03] 1405F6B74 "bool PayTaxesForEnteredPlot();" 
 [04] 1405F6B38 "const AZ::s64 GetRemainingFastTravelCooldownTimeInSeconds(unsigned int);" 
 [05] 1405F6B50 "unsigned char CanPurchasePlot();" 
 [06] 1405F6C28 "unsigned int GetFastTravelToTerritoryLandmarkCost(unsigned short, unsigned char);" 
 [07] 14075959C "const bool GetHouseHasUnpaidTaxes();" 
 [08] 1404C7A90 "float GetHouseDecorationScore();" 
 [09] 1405F6B68 "const unsigned int GetAdjustedTaxAmountForEnteredPlotOptionalCompanyDiscount(bool);" 
 [10] 141553100 "FastTravelCosts GetFastTravelCosts(unsigned short);" 
 [11] 14031EC54 "const EntityId GetInteractionHousingPlotEntityId();" 
 [12] 1404C7A9C "unsigned short GetPlacedHousingItemCount();" 
 [13] 1415530E8 "void RequestResidentData();" 
 [14] 14031EBE8 "bool HasEnteredOwnHouse();" 
 [15] 14031EBF4 "void RequestFastTravelToTerritoryLandmarkPosition(unsigned short, unsigned char, Vector3);" 
 [16] 14031EC2C "void RequestFastTravelToHome(unsigned int);" 
 [17] 1405F6BA4 "bool IsTimeToPayTaxes();" 
 [18] 1405F6BE0 "unsigned short GetFastTravelCooldownResetCost(unsigned int);" 
 [19] 14031EC1C "void RequestPurchaseHome();" 
 [20] 1415530C4 "int GetFastTravelToTerritoryEncumbranceCost();" 
 [21] 14031EBD0 "bool HasOwnedHouseOnInteractingPlot();" 
 [22] 1405F6B2C "float GetHouseNumberCostMultiplier(const EntityId&);" 
 [23] 141553124 "bool GetHasPurchasedHouse();" 
 [24] 14031EC14 "void RequestEnterPlot(int, bool, bool);" 
 [25] 14031EBC0 "void RequestExitPlot();" 
 [26] 14031EC04 "const AZStd::vector<ReplicatedOwnedHouseData, allocator>& GetOwnedHouseData();" 
 [27] 1405F6C34 "unsigned int GetFastTravelToTerritoryLandmarkPositionCost(unsigned short, unsigned char, Vector3);" 
 [28] 1404C7AB4 "unsigned short GetTotalHousingItemLimit();" 
 [29] 14031EC24 "void RequestAbandonHome();" 
 [30] 1405F6AFC "float GetPropertyTaxModifierTerritory(const EntityId&, const unsigned short&);" 
 [31] 1405F6AF0 "AZStd::vector<HousingItemClientData, allocator> GetCurrentTrophyHousingItems();" 
 [32] 14050D22C "bool IsAtMaxHomesOwned();" 
 [33] 1405F6ACC "unsigned int GetPlayerHousingLevelReq();" 
 [34] 1405F6B5C "const unsigned int GetAdjustedTaxAmountForEnteredPlot();" 
 [35] 14050D220 "bool IsInteractingPlotFull();" 
 [36] 1405F6B8C "const ReplicatedOwnedHouseData* GetMyPhasedHousingPlotData();" 
 [37] 14155310C "FastTravelCosts GetFastTravelToTerritoryLandmarkCosts(unsigned short, unsigned char);" 
 [38] 14031EC5C "const EntityId& GetPhasedHousingPlotEntityId();" 
 [39] 14031EC3C "const unsigned int GetFastTravelCost();" 
 [40] 1405F6AD8 "const HousingItemClientData GetHousingItemData(unsigned short);" 
 [41] 14031EBFC "bool IsPlayerInRespawnTerritory(unsigned short);" 
 [42] 1405F6B44 "const ReplicatedOwnedHouseData* GetOwnedHouseDataOnPlotByEntityId(EntityId);" 
 [43] 14031EC34 "void RequestFastTravelToTerritory(unsigned short, bool, bool);" 
 [44] 14031EBC8 "void RequestFastTravelToTerritoryLandmark(unsigned short, unsigned char);" 
 [45] 1405F6B08 "float GetPropertyTaxModifierFactionControl(const EntityId&, const unsigned short&);" 
 [46] 1405F6B14 "float GetHousingCostMultiplier(const EntityId&, bool);" 
 [47] 1415530B8 "int GetFastTravelToTerritoryLandmarkDistanceCost(unsigned short, unsigned char);" 
 [48] 14050D244 "unsigned char GetRemainingEntitlementHousingItems(const Crc32&);" 
 [49] 14031EC68 "unsigned short GetFastTravelToTerritoryIdByPosition(const Vector3&, bool);" 
 [50] 1405F6BD4 "void RequestResetCooldown(unsigned int);" 
 [51] 1405F6C10 "bool HasFastTravelPointInTerritory(unsigned short, bool);" 
 [52] 1405F6BEC "unsigned char CanFastTravelToTerritory(unsigned short, bool, bool);" 
 [53] 1405F6BF8 "unsigned char CanFastTravelToTerritoryLandmark(unsigned short, unsigned char);" 
 [54] 1405F6C04 "unsigned char CanFastTravelToTerritoryLandmarkPosition(unsigned short, unsigned char, Vector3);" 
 [55] 1405F6C1C "unsigned int GetFastTravelToTerritoryCost(unsigned short);" 
 [56] 1415530DC "EntityId GetPlotEntityIdFromOwnedHouseData(ReplicatedOwnedHouseData&);" 
 [57] 1405F6C40 "bool RequestPayTaxes(unsigned int);" 
 [58] 141553118 "FastTravelCosts GetFastTravelToTerritoryLandmarkPositionCosts(unsigned short, unsigned char, Vector3);" 
 [59] 1415530F4 "void RequestTaxesDue(unsigned int);" 
 [60] 1405F6C70 "unsigned int GetFastTravelToTerritoryFactionDiscountPct();" 
 [61] 1405F6C7C "unsigned int GetFastTravelToTerritoryCompanyDiscountPct();" 
 [62] 1405F6C88 "unsigned int GetFastTravelToTerritoryAttributeDiscountPct();" 
 [63] 1415530AC "int GetFastTravelToTerritoryDistanceCost(unsigned short);" 
 [64] 1415530D0 "int GetFastTravelToTerritoryBaseCost();" 
 
[412] "EncounterPlayerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665510 "const EntityId* EncounterPlayerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "int GetEncounterStatus();" 
 
[413] "TwitchSystemNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1434D0470 "BehaviorEBusHandler* TwitchSystemNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TwitchSystemNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[414] "GameEntityContextRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC70 "bool DestroySliceByEntity(const EntityId&);" 
 [01] 14031EBFC "bool DestroyDynamicSliceByEntity(const EntityId&);" 
 [02] 14031EC68 "void DeactivateGameEntity(const EntityId&);" 
 [03] 14050D274 "bool DestroySliceByEntityId(const EntityId&);" 
 [04] 14031EBF4 "void ActivateGameEntity(const EntityId&);" 
 [05] 14031EC34 "void DestroyGameEntity(const EntityId&);" 
 [06] 14031EC24 "BehaviorEntity CreateGameEntity(const char*);" 
 [07] 14031EBC8 "void DestroyGameEntityAndDescendants(const EntityId&);" 
 [08] 14031EC54 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetEntityName(const EntityId&);" 
 [09] 14031EC5C "void ActivateGameEntityById(const EntityId&);" 
 [10] 14031EBE8 "void DeactivateGameEntityById(const EntityId&);" 
 
[415] "FactionControlClientDataNotificationBus" 
BehaviorParameter: m_name: "int", m_traits: 0
m_createHandler:
 144661D70 "BehaviorEBusHandler* FactionControlClientDataNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void FactionControlClientDataNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665540 "const int* FactionControlClientDataNotificationBus::GetCurrentBusId();" 
 
[416] "FactionControlClientDataRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665570 "const EntityId* FactionControlClientDataRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "float GetFactionControlCapturePercentage();" 
 [01] 14031EC34 "Vector3 GetFactionControlCapturePointWorldPos();" 
 [02] 14031EC1C "unsigned char GetFactionControlCaptureStatus();" 
 [03] 14031EC2C "unsigned char GetFactionControlContestingFaction();" 
 [04] 14031EBC0 "unsigned char GetFactionControlOwner();" 
 
[417] "DungeonEntranceRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446654E0 "const EntityId* DungeonEntranceRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "const unsigned char GetDungeonMutationDifficultyForGroup(const GroupId&);" 
 
[418] "SplineComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87DC0 "const EntityId* SplineComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBFC "void ClearVertices();" 
 [01] 14031EC24 "void SetClosed(bool);" 
 [02] 14031EBC8 "bool RemoveVertex(AZ::u64);" 
 [03] 14031EC2C "void AddVertex(const Vector3&);" 
 [04] 14031EC1C "bool UpdateVertex(AZ::u64, const Vector3&);" 
 [05] 14031EBC0 "AZStd::shared_ptr<Spline> GetSpline();" 
 [06] 14031EC34 "bool InsertVertex(AZ::u64, const Vector3&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF757898C28
 
[419] "TickBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1403C2E60 "BehaviorEBusHandler* TickBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void TickBus::DestroyHandler(BehaviorEBusHandler*);" 
m_queueFunction:
 14028BDD0 "void TickBus::QueueFunction({void(void* void* )}*, void*, void*);" 
 
[420] "TurretComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446659F0 "const EntityId* TurretComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "int GetCurAmmo();" 
 [01] 14031EC24 "float GetHeatPercentage();" 
 [02] 14031EC1C "bool IsUsingHeatSystem();" 
 
[421] "InputRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC2C "void PushContext(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC34 "void PopContext();" 
 [02] 14031EBC8 "void PopAllContexts();" 
 [03] 14031EBF4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetCurrentContext();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[422] "TerritoryDataProviderRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665960 "const EntityId* TerritoryDataProviderRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "unsigned short GetTerritoryId();" 
 
[423] "ProgressionPointRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665870 "const EntityId* ProgressionPointRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBF4 "const StaticProgressionPoolData& GetProgressionPoolData(Crc32);" 
 [01] 14031EC24 "unsigned int GetNumAllocatedPoolPoints(Crc32);" 
 [02] 14050D25C "unsigned short GetTerritoryStandingRank(Crc32, Crc32);" 
 [03] 14031EC34 "unsigned short GetLevel(Crc32);" 
 [04] 1404C7AA8 "bool CanSpendTerritoryStandingPoint(Crc32, Crc32);" 
 [05] 14050D250 "unsigned short GetUnspentTokens(Crc32);" 
 [06] 14050D238 "AZStd::vector<UiProgressionPointData, allocator> GetAvailableProgressionPointsData(Crc32, bool);" 
 [07] 14031EC5C "AZStd::vector<StaticProgressionPointData, allocator> GetAllProgressionPointDataFromPoolId(Crc32);" 
 [08] 14031EC68 "const StaticProgressionPointData& GetStaticProgressionPointData(Crc32);" 
 [09] 1404C7AC0 "UiProgressionPointData GetUiProgressionPointData(Crc32, Crc32, bool);" 
 [10] 1404C7AB4 "void RequestSpendTerritoryStandingPoint(Crc32, Crc32);" 
 [11] 14050D244 "AZStd::vector<UiProgressionPointData, allocator> GetCurrentProgressionPointsData(Crc32);" 
 [12] 14031EC1C "unsigned short GetUnallocatedPoolPoints(Crc32);" 
 
[424] "UiLoginScreenNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 14499F260 "BehaviorEBusHandler* UiLoginScreenNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiLoginScreenNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_events:
 [00] 14031EBC0 "void OnRegionListResult(AZStd::vector<ClusterDisplayMetadata, allocator>);" 
 [01] 14031EC24 "void OnQueuePopupVisibilityChanged(bool);" 
 [02] 14031EC1C "void OnLoginInfoListResult(AZStd::vector<WorldMetadata, allocator>, AZStd::vector<ScriptCharacterMetadata, allocator>, AZStd::vector<ScriptCharacterNameData, allocator>, unsigned int);" 
 
[425] "HousingDecorationRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC68 "void StartMovingHousingItem();" 
 [01] 14031EBC8 "unsigned char ConfirmPlacement();" 
 [02] 14031EBD8 "void EnableGridSnapping();" 
 [03] 14031EC1C "void DisableDecorationMode();" 
 [04] 14031EC34 "unsigned char SpawnNewHousingItem(const Crc32&);" 
 [05] 14031EC0C "void EnableSurfaceLock(bool);" 
 [06] 14031EBF4 "void CancelPlacement();" 
 [07] 14031EBD0 "void RotateItemCounterClockwise(float);" 
 [08] 14031EC14 "bool CanOpenDecorationScreen();" 
 [09] 14031EBFC "unsigned char PickUpHousingItem();" 
 [10] 14031EBE0 "void DisableGridSnapping();" 
 [11] 14031EBC0 "void EnableDecorationMode();" 
 [12] 14031EC24 "bool IsInSelectMode();" 
 [13] 14031EC2C "bool IsInMoveMode();" 
 [14] 14031EC04 "void RotateItemClockwise(float);" 
 [15] 14031EC54 "void OnOpenContextMenu();" 
 [16] 14031EC5C "void OnCloseContextMenu();" 
 
[426] "GameModeParticipantComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1446622F0 "BehaviorEBusHandler* GameModeParticipantComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GameModeParticipantComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665660 "const EntityId* GameModeParticipantComponentNotificationBus::GetCurrentBusId();" 
 
[427] "BeamAttackComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144661950 "BehaviorEBusHandler* BeamAttackComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void BeamAttackComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1446653C0 "const EntityId* BeamAttackComponentNotificationBus::GetCurrentBusId();" 
 
[428] "HousingDecorationEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 144662500 "BehaviorEBusHandler* HousingDecorationEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void HousingDecorationEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[429] "UiCanvasAssetRefBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14167FA60 "const EntityId* UiCanvasAssetRefBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC68 "void UnloadCanvas();" 
 [01] 14031EBF4 "EntityId LoadCanvas();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[430] "UIArenaAndDungeonRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "int GetDungeonCooldownTime();" 
 [01] 14031EC14 "void TeleportIntoDungeon();" 
 
[431] "ScriptedEntityTweenerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBE0 "void Reset();" 
 [01] 14031EC68 "void Resume(int, const EntityId&, int);" 
 [02] 14031EC1C "void SetOptionalParams(float, float, int, int, float, int, bool, bool, const AZ::Uuid&, int, int, int, int);" 
 [03] 14031EBF4 "void Pause(int, const EntityId&, int);" 
 [04] 14031EC2C "unsigned int CacheAnimation(int, const any&, bool);" 
 [05] 14031EC34 "void StartCachedAnimation(const EntityId&, unsigned short, float, float, int, int, int);" 
 [06] 14031EC0C "int CacheVirtualProperty(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [07] 14031EBC8 "void Stop(int, const EntityId&);" 
 [08] 14031EC24 "void AnimateEntity(const EntityId&, int, const any&);" 
 [09] 14031EBFC "void SetPlayDirectionReversed(int, const EntityId&, int, bool);" 
 [10] 14031EBD8 "any GetVirtualPropertyValue(const EntityId&, int);" 
 [11] 14031EC04 "void SetSpeed(int, const EntityId&, int, float);" 
 [12] 14031EBD0 "void SetInitialValue(const AZ::Uuid&, const EntityId&, int, const any&);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[432] "ScreenFaderRequestBus" 
BehaviorParameter: m_name: "int", m_traits: 0
m_getCurrentId:
 14135BF70 "const int* ScreenFaderRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void FadeIn(const Color&, float, bool, bool);" 
 [01] 14031EC24 "void SetScreenCoordinates(const Vector4&);" 
 [02] 14031EC1C "void SetTexture(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 14031EC14 "void FadeOut(const Color&, float, bool, bool);" 
 [04] 14031EC2C "Color GetCurrentColor();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[433] "DoorEventsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F5D0 "BehaviorEBusHandler* DoorEventsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void DoorEventsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A2FF0 "const EntityId* DoorEventsBus::GetCurrentBusId();" 
 
[434] "UiInteractableActionsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680150 "const EntityId* UiInteractableActionsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void SetPressedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC2C "void SetHoverEndActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EBF4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetReleasedActionName();" 
 [03] 14031EC24 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetHoverEndActionName();" 
 [04] 14031EC68 "void SetReleasedActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EC1C "void SetHoverStartActionName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EBC0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetHoverStartActionName();" 
 [07] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetPressedActionName();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[435] "ArenaEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1446618A0 "BehaviorEBusHandler* ArenaEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ArenaEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665360 "const EntityId* ArenaEventBus::GetCurrentBusId();" 
 
[436] "CursorNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 143EA5A70 "BehaviorEBusHandler* CursorNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CursorNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[437] "TriggerAreaRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87F10 "const EntityId* TriggerAreaRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void RemoveProximityTrigger();" 
 [01] 14031EC1C "void RemoveRequiredTag(const Crc32&);" 
 [02] 14031EC24 "void AddExcludedTag(const Crc32&);" 
 [03] 14031EBC0 "void AddRequiredTag(const Crc32&);" 
 [04] 14031EC34 "void AddProximityTrigger();" 
 [05] 14031EC2C "void RemoveExcludedTag(const Crc32&);" 
 
[438] "PlayerArenaRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665780 "const EntityId* PlayerArenaRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "void ForfeitArena(bool);" 
 [01] 14031EBC0 "bool IsInArena();" 
 [02] 14031EC1C "bool IsArenaTeleportPending();" 
 
[439] "ObjectivesComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499FF70 "BehaviorEBusHandler* ObjectivesComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ObjectivesComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A32C0 "const EntityId* ObjectivesComponentNotificationsBus::GetCurrentBusId();" 
 
[440] "CryPhysicsComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87670 "const EntityId* CryPhysicsComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "float GetWaterDamping();" 
 [01] 14031EBD8 "float GetDensity();" 
 [02] 14031EBE0 "void SetDensity(float);" 
 [03] 14050D274 "Vector3 GetAcceleration();" 
 [04] 14031EBD0 "void SetWaterResistance(float);" 
 [05] 14031EC0C "Vector3 GetAngularAcceleration();" 
 [06] 14031EC04 "float GetWaterResistance();" 
 [07] 14031EBF4 "void SetWaterDamping(float);" 
 [08] 14031EC68 "float GetWaterDensity();" 
 [09] 14031EBFC "void SetWaterDensity(float);" 
 
[441] "CraftingEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F520 "BehaviorEBusHandler* CraftingEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void CraftingEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A2F90 "const EntityId* CraftingEventBus::GetCurrentBusId();" 
 
[442] "PlayerArenaEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662660 "BehaviorEBusHandler* PlayerArenaEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PlayerArenaEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 144665750 "const EntityId* PlayerArenaEventBus::GetCurrentBusId();" 
 
[443] "TerritoryComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3470 "const EntityId* TerritoryComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC24 "bool IsOnWarGrid(const Vector3&);" 
 [01] 14031EC1C "unsigned short GetTerritoryId();" 
 
[444] "GameModeComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665600 "const EntityId* GameModeComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBF4 "AZ::s64 GetGameModeRejoinPenaltyTimeSec();" 
 [01] 14031EC24 "int GetParticipantTeamIdx(const EntityId&);" 
 [02] 14031EC2C "int GetNumParticipantsByTeam(int);" 
 [03] 14031EBC0 "Crc32 GetGameModeId();" 
 [04] 14031EC1C "bool ContainsParticipant(const EntityId&);" 
 [05] 14031EC04 "EntityId GetReplicatedValueAsEntityId(unsigned int);" 
 [06] 14031EBC8 "int GetGameModeTimerRemainingSec(Crc32);" 
 
[445] "GlobalMapDataManagerRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665690 "const EntityId* GlobalMapDataManagerRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "const GlobalMapData& GetGlobalMapDataForEntity(const EntityId&);" 
 [01] 14031EBC0 "void RequestGlobalMapData();" 
 
[446] "GameModeMutationSchedulerRequests" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 144665630 "const EntityId* GameModeMutationSchedulerRequests::GetCurrentBusId();" 
m_events:
 [00] 14031EC5C "const MutationDifficultyStaticData& GetMutationDifficultyStaticData(unsigned char);" 
 [01] 14031EC54 "const CurseMutationStaticData& GetCurseMutationStaticData(Crc32);" 
 [02] 14031EBD8 "const ElementalMutationStaticData& GetElementalMutationDataForTier(Crc32, unsigned char);" 
 [03] 14031EC34 "const AZStd::vector<Crc32, allocator>& GetPossibleElementalStatusEffects(Crc32);" 
 [04] 14031EC04 "const AZStd::unordered_set<Crc32, AZStd::hash<Crc32>, AZStd::eq GetUniqueElementalMutationTypes();" 
 [05] 14031EBC0 "const GameModeMutationSet& GetMutationSet(Crc32);" 
 [06] 14031EC1C "const AZStd::unordered_map<Crc32, GameModeMutationSet, AZStd::h GetAllMutationSets();" 
 [07] 14031EC2C "const AZ::s64 GetTimeRemainingOnMutation(Crc32);" 
 [08] 14031EBF4 "const AZStd::vector<Crc32, allocator>& GetPossiblePromotionalStatusEffects(Crc32);" 
 [09] 14031EC24 "const WallClockTimePoint& GetMutationCadenceTimeStamp(Crc32);" 
 [10] 14031EBC8 "const AZStd::vector<Crc32, allocator>& GetPossibleElementalStatusEffectsForDiff(Crc32, unsigned char);" 
 [11] 14031EBD0 "const ElementalMutationStaticData& GetElementalMutationStaticData(Crc32);" 
 [12] 14031EC0C "const PromotionMutationStaticData& GetPromotionMutationStaticData(Crc32);" 
 [13] 14031EC68 "const AZStd::vector<Crc32, allocator>& GetPossiblePromotionalStatusEffectsForDiff(Crc32, unsigned char);" 
 [14] 14031EBFC "const AZStd::vector<Crc32, allocator>& GetPossibleCurseStatusEffects(Crc32);" 
 [15] 14031EBE0 "const ElementalMutationPerksStaticData& GetElementalMutationPerksStaticData(Crc32);" 
 
[447] "PlayerHousingComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 144662920 "BehaviorEBusHandler* PlayerHousingComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PlayerHousingComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1446657E0 "const EntityId* PlayerHousingComponentNotificationBus::GetCurrentBusId();" 
 
[448] "FishingRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1446655A0 "const EntityId* FishingRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBF4 "void RequestApplyBait(Crc32);" 
 [01] 1404C7A84 "const AZStd::vector<HotspotUnlocksPerLevel, allocator>& GetNumHotspotUnlocksPerLevel();" 
 [02] 14031EBC8 "void RequestCloseBaitBox();" 
 [03] 14031EBD0 "EntityId GetFishEntityId();" 
 [04] 14050D274 "const StaticFishingBaitData& GetBaitData(Crc32);" 
 [05] 14031EC1C "float GetHookDuration();" 
 [06] 14031EC68 "Crc32 GetCurrentBait();" 
 [07] 14031EC2C "float GetMaxDistance();" 
 [08] 14031EC04 "Vector3 GetBobberPosition();" 
 [09] 14031EBD8 "float GetFishWeight();" 
 [10] 14031EBC0 "float GetMaxBarSize();" 
 [11] 14031EC0C "bool IsBobberInHotspot();" 
 [12] 14031EC24 "float GetMaxTension();" 
 [13] 14031EC34 "void RequestOpenBaitBox();" 
 [14] 14031EC54 "int GetBobberWaterType();" 
 [15] 14031EBE8 "int GetRequiredLevelByHotspotId(Crc32);" 
 [16] 14031EBE0 "float GetFishLength();" 
 [17] 14031EBFC "Vector3 GetJointPositionWithOffset(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&, float);" 
 [18] 14031EC70 "bool GetZoomCameraOnSuccess();" 
 
[449] "UiTerritoryNotificationsBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 1449A0B20 "BehaviorEBusHandler* UiTerritoryNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiTerritoryNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[450] "BenchmarkControllerComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F310 "BehaviorEBusHandler* BenchmarkControllerComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void BenchmarkControllerComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A2EA0 "const EntityId* BenchmarkControllerComponentNotificationsBus::GetCurrentBusId();" 
 
[451] "TradeskillRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3500 "const EntityId* TradeskillRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBF4 "void ApplyTradeskillChanges();" 
 [01] 14031EC24 "void RemovePendingPointsFromTradeskill(int, int);" 
 [02] 14031EC34 "void CancelPendingTradeskillPoints();" 
 [03] 14031EC68 "int GetTradeskillLevel(int);" 
 [04] 14031EC2C "void AddPendingPointsToTradeskill(int, int);" 
 [05] 14031EBC8 "void ResetAllTradeskillPoints();" 
 [06] 14031EBC0 "void AddTradeskillPointsToPool(int);" 
 
[452] "TerritoryInteractorRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143CEB7E0 "const EntityId* TerritoryInteractorRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "bool IsSignedUpForImminentWar();" 
 
[453] "Light" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C878B0 "const EntityId* Light::GetCurrentBusId();" 
m_events:
 [00] 1405F6B80 "float GetProbeTODInfluence();" 
 [01] 1405F6B50 "float GetProbeAttenuationFalloff();" 
 [02] 1405F6B68 "float GetProbeFade();" 
 [03] 1405F6B2C "void SetProbeBoxLength(float);" 
 [04] 1405F6B14 "void SetProbeBoxHeight(float);" 
 [05] 1405F6B20 "float GetProbeBoxHeight();" 
 [06] 1405F6AFC "void SetProbeBoxProjected(bool);" 
 [07] 14050D274 "float GetPointAttenuationBulbSize();" 
 [08] 14050D22C "void SetProjectorNearPlane(float);" 
 [09] 14031EC5C "float GetPointMaxDistance();" 
 [10] 14031EC0C "bool GetAmbient();" 
 [11] 14031EBD8 "float GetSpecularMultiplier();" 
 [12] 1405F6B44 "void SetProbeAttenuationFalloff(float);" 
 [13] 14031EBFC "void SetDiffuseMultiplier(float);" 
 [14] 14075959C "float GetProbeBoxLength();" 
 [15] 14031EC2C "void Toggle();" 
 [16] 1404C7AA8 "void SetAreaHeight(float);" 
 [17] 14050D238 "float GetAreaFOV();" 
 [18] 14031EBD0 "void SetSpecularMultiplier(float);" 
 [19] 14031EBE0 "void SetAmbient(bool);" 
 [20] 1405F6B74 "void SetProbeTODInfluence(float);" 
 [21] 14031EC04 "float GetDiffuseMultiplier();" 
 [22] 14031EC54 "void SetPointMaxDistance(float);" 
 [23] 14031EBC0 "void SetState(int);" 
 [24] 14050D268 "void SetProjectorFOV(float);" 
 [25] 1407595A8 "void SetProbeBoxWidth(float);" 
 [26] 14031EBC8 "bool GetVisible();" 
 [27] 1405F6ACC "float GetProjectorNearPlane();" 
 [28] 14031EC1C "bool TurnOn();" 
 [29] 14031EC3C "void SetProbeAreaDimensions(const Vector3&);" 
 [30] 1405F6AF0 "unsigned int GetProbeSortPriority();" 
 [31] 14031EC24 "bool TurnOff();" 
 [32] 1405F6AE4 "void SetProbeSortPriority(unsigned int);" 
 [33] 14031EC34 "void SetVisible(bool);" 
 [34] 1404C7A84 "float GetAreaMaxDistance();" 
 [35] 1405F6AD8 "const Vector3 GetProbeAreaDimensions();" 
 [36] 14031EC68 "const Color GetColor();" 
 [37] 14031EBF4 "void SetColor(const Color&);" 
 [38] 14031EC70 "void SetAreaMaxDistance(float);" 
 [39] 14031EBE8 "void SetPointAttenuationBulbSize(float);" 
 [40] 1404C7A9C "float GetAreaWidth();" 
 [41] 14050D250 "float GetProjectorMaxDistance();" 
 [42] 1404C7A90 "void SetAreaWidth(float);" 
 [43] 1404C7AB4 "float GetAreaHeight();" 
 [44] 14031EC48 "float GetProjectorAttenuationBulbSize();" 
 [45] 1405F6B5C "void SetProbeFade(float);" 
 [46] 1404C7AC0 "void SetAreaFOV(float);" 
 [47] 14050D244 "void SetProjectorMaxDistance(float);" 
 [48] 14050D25C "void SetProjectorAttenuationBulbSize(float);" 
 [49] 14050D220 "float GetProjectorFOV();" 
 [50] 1405F6B08 "bool GetProbeBoxProjected();" 
 [51] 1405F6B38 "float GetProbeBoxWidth();" 
m_virtualProperties:
 [00]
  1405F6B50 "float ProbeAttenuationFalloff();" 
  1405F6B50 "float ProbeAttenuationFalloff(EntityId);" 
 [01]
  14075959C "float ProbeBoxLength();" 
  14075959C "float ProbeBoxLength(EntityId);" 
 [02]
  1405F6B38 "float ProbeBoxWidth();" 
  1405F6B38 "float ProbeBoxWidth(EntityId);" 
 [03]
  1405F6B08 "bool ProbeBoxProjected();" 
  1405F6B08 "bool ProbeBoxProjected(EntityId);" 
 [04]
  14031EC5C "float PointMaxDistance();" 
  14031EC5C "float PointMaxDistance(EntityId);" 
 [05]
  14050D220 "float ProjectorFOV();" 
  14050D220 "float ProjectorFOV(EntityId);" 
 [06]
  14031EC68 "const Color Color();" 
  14031EC68 "const Color Color(EntityId);" 
 [07]
  1404C7A9C "float AreaWidth();" 
  1404C7A9C "float AreaWidth(EntityId);" 
 [08]
  14031EC04 "float DiffuseMultiplier();" 
  14031EC04 "float DiffuseMultiplier(EntityId);" 
 [09]
  14031EBC8 "bool Visible();" 
  14031EBC8 "bool Visible(EntityId);" 
 [10]
  14050D274 "float PointAttenuationBulbSize();" 
  14050D274 "float PointAttenuationBulbSize(EntityId);" 
 [11]
  1405F6AF0 "unsigned int ProbeSortPriority();" 
  1405F6AF0 "unsigned int ProbeSortPriority(EntityId);" 
 [12]
  1404C7A84 "float AreaMaxDistance();" 
  1404C7A84 "float AreaMaxDistance(EntityId);" 
 [13]
  14031EC0C "bool Ambient();" 
  14031EC0C "bool Ambient(EntityId);" 
 [14]
  1405F6B80 "float ProbeTODInfluence();" 
  1405F6B80 "float ProbeTODInfluence(EntityId);" 
 [15]
  14050D238 "float AreaFOV();" 
  14050D238 "float AreaFOV(EntityId);" 
 [16]
  14031EBD8 "float SpecularMultiplier();" 
  14031EBD8 "float SpecularMultiplier(EntityId);" 
 [17]
  1404C7AB4 "float AreaHeight();" 
  1404C7AB4 "float AreaHeight(EntityId);" 
 [18]
  1405F6B68 "float ProbeFade();" 
  1405F6B68 "float ProbeFade(EntityId);" 
 [19]
  14050D250 "float ProjectorMaxDistance();" 
  14050D250 "float ProjectorMaxDistance(EntityId);" 
 [20]
  14031EC48 "float ProjectorAttenuationBulbSize();" 
  14031EC48 "float ProjectorAttenuationBulbSize(EntityId);" 
 [21]
  1405F6AD8 "const Vector3 ProbeAreaDimensions();" 
  1405F6AD8 "const Vector3 ProbeAreaDimensions(EntityId);" 
 [22]
  1405F6ACC "float ProjectorNearPlane();" 
  1405F6ACC "float ProjectorNearPlane(EntityId);" 
 [23]
  1405F6B20 "float ProbeBoxHeight();" 
  1405F6B20 "float ProbeBoxHeight(EntityId);" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF7578E6398
 
[454] "BuilderRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A2F00 "const EntityId* BuilderRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "bool IsStructureInValidLocation();" 
 [01] 14031EBD0 "bool IsBlueprintKnown(const Crc32&);" 
 [02] 14031EBC0 "void RequestUseBlueprint(const Crc32&);" 
 [03] 14031EC34 "const AZStd::vector<ItemDescriptor, allocator>& GetIngredientDetailsForBlueprint(const Crc32&);" 
 [04] 14031EBD8 "bool IsStatusReasonFlagOn(unsigned int);" 
 [05] 14031EC24 "void RequestCancelPlacingStructure();" 
 [06] 14031EBC8 "unsigned int CanBuildHere();" 
 [07] 14031EC2C "void EnablePlacementGrid(bool);" 
 [08] 14031EBE0 "int GetRequiredLevelForBlueprint(const Crc32&);" 
 [09] 14031EBF4 "bool IsBuildingCamp();" 
 
[455] "UiGatheringComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A09C0 "BehaviorEBusHandler* UiGatheringComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiGatheringComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3760 "const EntityId* UiGatheringComponentNotificationsBus::GetCurrentBusId();" 
 
[456] "PlayerComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A00D0 "BehaviorEBusHandler* PlayerComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PlayerComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3380 "const EntityId* PlayerComponentNotificationsBus::GetCurrentBusId();" 
 
[457] "PhysicsSystemEventBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 141C3D950 "BehaviorEBusHandler* PhysicsSystemEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PhysicsSystemEventBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[458] "SpawnerComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3CEF0 "BehaviorEBusHandler* SpawnerComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void SpawnerComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87D00 "const EntityId* SpawnerComponentNotificationBus::GetCurrentBusId();" 
 
[459] "LargeToastRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3110 "const EntityId* LargeToastRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "int GetMessageLinesCount();" 
 [01] 14031EC24 "int GetBindingsCount(int);" 
 [02] 14031EC1C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetMessageText(int);" 
 [03] 14031EC2C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetBindingParam(int, int, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 
[460] "LoreReaderRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A3170 "const EntityId* LoreReaderRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "void LoreReaderClosed();" 
 
[461] "PlayerComponentRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A33B0 "const EntityId* PlayerComponentRequestsBus::GetCurrentBusId();" 
m_events:
 [00] 1404C7AC0 "bool DoesCharacterMeetTradeRequirements();" 
 [01] 14050D250 "const StaticRewardMilestoneData& GetRewardMilestoneData(Crc32);" 
 [02] 14031EBD0 "const PlayerIdentification& GetPlayerIdentification();" 
 [03] 14050D22C "const GuildRankData GetGuildRankData();" 
 [04] 14050D244 "const AZStd::vector<Crc32, allocator>& GetRewardMilestoneIds();" 
 [05] 14031EC68 "bool IsLocalPlayer();" 
 [06] 14031EC5C "EntityId GetGlobalStorageEntityId();" 
 [07] 14031EC3C "const PlayerIconData& GetPlayerIconData();" 
 
[462] "ItemDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 1405F6AF0 "AZStd::vector<Crc32, allocator> GetValidPerksForPerkBucket(const Crc32&);" 
 [01] 1405F6AE4 "float GetPerkChance(Crc32, unsigned int, bool);" 
 [02] 14031EC3C "const Crc32 GetDisplayPerkIdFromResource(Crc32);" 
 [03] 14075959C "const StaticHousingItemData& GetHousingItemData(const Crc32&);" 
 [04] 1405F6ACC "const StaticResourceData& GetResourceData(Crc32);" 
 [05] 14050D22C "bool IsPerkCompatibleWithItemClass(Crc32, Crc32);" 
 [06] 14031EC48 "const AZStd::vector<Crc32, allocator>& GetGemPerkIds();" 
 [07] 1404C7A9C "unsigned char GetColorIndex(Crc32);" 
 [08] 14031EBD0 "int GetTierNumber(Crc32);" 
 [09] 14031EC04 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetIconPath(Crc32);" 
 [10] 1407595A8 "const AZStd::vector<Crc32, allocator>& GetHousingItemIds();" 
 [11] 14031EBFC "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetEquipSlots(Crc32);" 
 [12] 14031EC0C "const StaticConsumableData& GetConsumableData(Crc32);" 
 [13] 14031EC68 "int GetCatSection(Crc32);" 
 [14] 14031EC70 "const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait GetFilteredCategoryList(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [15] 14031EBD8 "const StaticItemData& GetItemData(Crc32);" 
 [16] 14031EC34 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetJsonString(Crc32);" 
 [17] 14031EBF4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetAmmoType(Crc32);" 
 [18] 14031EC5C "int GetBaseGearScore(Crc32);" 
 [19] 14031EC2C "bool GetBlueprintIsDeployable(Crc32);" 
 [20] 14050D25C "const StaticPerkData& GetStaticPerkData(Crc32);" 
 [21] 14031EBE8 "int GetBlueprintCurrencyCost(Crc32);" 
 [22] 14031EBC8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetWeaponGatheringType(Crc32);" 
 [23] 14031EC54 "const AZStd::vector<Crc32, allocator>& GetIngredientCategories(Crc32);" 
 [24] 14031EC24 "bool IsRepairable(Crc32);" 
 [25] 1404C7A90 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetDisplayName(Crc32);" 
 [26] 14050D220 "const AZStd::vector<Crc32, allocator>& GetPerksForItemClass(Crc32);" 
 [27] 14031EBC0 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetRepairRecipe(Crc32);" 
 [28] 1404C7AB4 "Crc32 GetItemIdForDyeColorIndex(unsigned char);" 
 [29] 14031EC1C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetCraftingRecipe(Crc32);" 
 [30] 1405F6AFC "bool IsEquippable(Crc32);" 
 [31] 14050D268 "const AZStd::vector<Crc32, allocator>& GetNonGemPerkIds();" 
 [32] 1405F6B08 "bool IsSalvageable(Crc32);" 
 [33] 1404C7AA8 "Color GetDyeColor(unsigned char);" 
 [34] 1405F6B14 "bool CanSalvageResources(Crc32);" 
 [35] 1404C7A84 "const AZStd::vector<const StaticItemData*, allocator> GetFilteredItemList(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [36] 14031EBE0 "const StaticWeaponData& GetWeaponData(Crc32);" 
 [37] 14050D274 "void GetArmorAudioData(Crc32, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, ArmorAudioData&);" 
 [38] 1404C7AC0 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetTooltipLayoutValue(Crc32, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [39] 14050D238 "AZStd::vector<Crc32, allocator> GetItemIdsByClass(AZ::u64);" 
 [40] 14050D244 "AZStd::vector<Crc32, allocator> GetCompatiblePerkResourceIds(Crc32);" 
 [41] 1405F6AD8 "int GetPerkBucketType(Crc32, unsigned int);" 
 [42] 1405F6B20 "float GetBaseDamage(Crc32);" 
 [43] 1405F6B2C "float GetBaseBlockingAbsorption(Crc32);" 
 [44] 14050D250 "bool CanHavePerks(Crc32);" 
 
[463] "CurrencyConversionRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A2FC0 "const EntityId* CurrencyConversionRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC68 "const Crc32& GetExchangeId(const Crc32&, const Crc32&);" 
 [01] 14031EC34 "AZStd::vector<ItemConversionDataScript, allocator> GetConversionList();" 
 [02] 14031EBC8 "void RequestCurrencyConversion(const Crc32&, unsigned int);" 
 [03] 14031EBF4 "const StaticCurrencyExchangeData& GetCurrencyExchangeData(const Crc32&);" 
 [04] 14031EC2C "int GetPrice(const ItemDescriptor&, bool);" 
 
[464] "ForceVolumeRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87730 "const EntityId* ForceVolumeRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD8 "float GetAirResistance();" 
 [01] 14031EC34 "void SetForceMassDependent(bool);" 
 [02] 14031EBC0 "void SetForceMode(int);" 
 [03] 14031EBC8 "bool GetForceMassDependent();" 
 [04] 14031EC1C "int GetForceMode();" 
 [05] 14031EBF4 "void SetForceMagnitude(float);" 
 [06] 14031EBD0 "void SetAirResistance(float);" 
 [07] 14031EC68 "float GetForceMagnitude();" 
 [08] 14031EBFC "void SetForceDirection(const Vector3&);" 
 [09] 14031EBE0 "void SetAirDensity(float);" 
 [10] 14031EC04 "const Vector3& GetForceDirection();" 
 [11] 14031EC0C "float GetAirDensity();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0xFFFFFFFFFFFFFFFF
 
[465] "StereoRendererRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "bool IsRenderingToHMD();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[466] "AchievementDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "const AchievementData& GetAchievementData(const Crc32&);" 
 
[467] "RecipeDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC70 "const AZStd::vector<Crc32, allocator>& GetRecipeDisplayIngredients(Crc32);" 
 [01] 14050D274 "const AZStd::vector<Crc32, allocator>& GetIngredientCategoryItemIds(Crc32);" 
 [02] 14031EBD0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetCraftingRecipesForTradeskillLevel(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, int);" 
 [03] 14031EC0C "AZStd::vector<UiSalvageData, allocator> GetSalvageDataFromLootTable(const ItemDescriptor&);" 
 [04] 14031EBE8 "const AZStd::vector<Crc32, allocator>& GetIngredientCategoryIds();" 
 [05] 14031EC68 "UiRecipeCategoryData GetCraftingCategoryData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [06] 14031EC5C "AZ::u64 GetRepairGoldQuantity(int, int);" 
 [07] 14031EBF4 "const RecipeData& GetCraftingRecipeDataByResult(const Crc32&);" 
 [08] 14031EC34 "const RecipeData& GetCraftingRecipeData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [09] 14031EBFC "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetAdditionalFilterText(Crc32);" 
 [10] 14031EC54 "unsigned int GetRepairDustQuantity(const ItemContainerSlot&, bool);" 
 [11] 14031EBC8 "const RecipeData& GetCraftingRecipeDataById(const Crc32&);" 
 [12] 14031EBC0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetRecipes();" 
 [13] 14031EC04 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetCraftingRecipesForTradeskill(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [14] 14031EC2C "RecipeData GetRepairRecipeData(const ItemDescriptor&);" 
 [15] 14031EC1C "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetRecipesByCategory(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [16] 14031EBD8 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetRelatedRecipes(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [17] 1404C7A9C "Crc32 GetRecipeIdByAchievementId(Crc32);" 
 [18] 14031EC24 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetRecipesByIngredients(const AZStd::vector<AZStd::basic_string<char, AZStd::char_trait, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [19] 14031EBE0 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char>, allocator>, allocator> GetStationsFromCraftingRecipe(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [20] 1404C7A90 "unsigned int GetPerkCost(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [21] 1404C7A84 "bool IsRecipeProcedural(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[468] "CraftingCategoryDataManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "CraftingCategoryData GetCategoryData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EBC0 "CraftingCategoryData GetCategoryDataById(const Crc32&);" 
 
[469] "AudioEnvironmentComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141C87370 "const EntityId* AudioEnvironmentComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC1C "bool SetEnvironmentAmount(const char*, float);" 
 [01] 14031EBC0 "void SetAmount(float);" 
 [02] 14031EC24 "bool SetAndCacheEnvironmentAmount(const char*, float);" 
 [03] 14031EC2C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetCachedEnvironmentName();" 
 [04] 14031EC34 "float GetCachedEnvironmentAmount();" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[470] "GeneratorScreenRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 14499F680 "BehaviorEBusHandler* GeneratorScreenRequestBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GeneratorScreenRequestBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[471] "SandComponentRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 14183C520 "const EntityId* SandComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBD0 "void UpdateSnow();" 
 [01] 14031EC04 "SandOptions GetSandOptions();" 
 [02] 14031EBC0 "void Enable();" 
 [03] 14031EC2C "bool IsEnabled();" 
 [04] 14031EC24 "void Toggle();" 
 [05] 14031EBC8 "float GetRadius();" 
 [06] 14031EBF4 "void SetSandAmount(float);" 
 [07] 14031EC34 "void SetRadius(float);" 
 [08] 14031EC68 "float GetSandAmount();" 
 [09] 14031EBFC "void SetSandOptions(SandOptions);" 
 [10] 14031EC1C "void Disable();" 
m_virtualProperties:
 [00]
  14031EBC8 "float Radius();" 
  14031EBC8 "float Radius(EntityId);" 
 [01]
  14031EC68 "float SandAmount();" 
  14031EC68 "float SandAmount(EntityId);" 
 [02]
  14031EC04 "SandOptions SandOptions();" 
  14031EC04 "SandOptions SandOptions(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[472] "UiGatherableComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A07B0 "BehaviorEBusHandler* UiGatherableComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiGatherableComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3730 "const EntityId* UiGatherableComponentNotificationsBus::GetCurrentBusId();" 
 
[473] "UiMarkerBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 143E5BBC0 "const EntityId* UiMarkerBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC0 "SimpleMarkerComponent& GetSimpleMarker();" 
 [01] 14031EC24 "void Initialize(EntityId);" 
 [02] 14031EC1C "UiMarkerComponent& GetMarker();" 
 
[474] "AmbientAudioSystemBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC24 "void SetSpeakerXYRtpcNames(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [01] 14031EC14 "EntityId GetEntityAmbientAudioManagerId();" 
 
[475] "StaminaComponentNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0440 "BehaviorEBusHandler* StaminaComponentNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void StaminaComponentNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3440 "const EntityId* StaminaComponentNotificationBus::GetCurrentBusId();" 
 
[476] "UiInteractOptionAdditionalInfoRequestsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0A70 "BehaviorEBusHandler* UiInteractOptionAdditionalInfoRequestsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void UiInteractOptionAdditionalInfoRequestsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3790 "const EntityId* UiInteractOptionAdditionalInfoRequestsBus::GetCurrentBusId();" 
 
[477] "ObjectiveNotificationBus" 
BehaviorParameter: m_name: "ObjectiveInstanceId", m_traits: 0
m_createHandler:
 14499FE10 "BehaviorEBusHandler* ObjectiveNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ObjectiveNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3200 "const ObjectiveInstanceId* ObjectiveNotificationBus::GetCurrentBusId();" 
 
[478] "ObjectiveTaskNotificationBus" 
BehaviorParameter: m_name: "ObjectiveTaskInstanceId", m_traits: 0
m_createHandler:
 14499FEC0 "BehaviorEBusHandler* ObjectiveTaskNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ObjectiveTaskNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3260 "const ObjectiveTaskInstanceId* ObjectiveTaskNotificationBus::GetCurrentBusId();" 
 
[479] "ScriptComponentRequestBus" 
BehaviorParameter: m_name: "ScriptComponentId", m_traits: 0
m_getCurrentId:
 14063E520 "const ScriptComponentId* ScriptComponentRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC14 "void CallFunction(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 
[480] "ObjectiveTaskRequestBus" 
BehaviorParameter: m_name: "ObjectiveTaskInstanceId", m_traits: 0
m_getCurrentId:
 1449A3290 "const ObjectiveTaskInstanceId* ObjectiveTaskRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14050D274 "float GetRefreshDescriptionInterval();" 
 [01] 14031EBD8 "const any& GetUIData(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EBD0 "float GetProgressPercent();" 
 [03] 14031EC04 "int GetTarget();" 
 [04] 14031EBFC "int GetState();" 
 [05] 14031EC5C "bool GetHideProgress();" 
 [06] 1404C7A84 "ObjectiveInstanceId GetObjectiveInstanceId();" 
 [07] 14031EC68 "int GetProgress();" 
 [08] 14031EBC8 "const char* GetJournalSlice();" 
 [09] 14031EC34 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetDescription();" 
 [10] 14031EBE0 "bool GetIsHidden();" 
 [11] 14031EC70 "const TaskData& GetObjectiveTaskData();" 
 [12] 14031EC2C "const AZStd::vector<ObjectiveTaskInstanceId, allocator>& GetTasks();" 
 [13] 14031EBF4 "const char* GetHUDSlice();" 
 [14] 14031EBE8 "bool ContainsConsecutiveTasks();" 
 [15] 14031EC54 "bool GetHideChildren();" 
 [16] 1404C7A90 "void RequestPublishPoiLocations();" 
 
[481] "ObjectiveInteractorRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A31D0 "const EntityId* ObjectiveInteractorRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14050D274 "const AZStd::vector<MissionDestinationData, allocator>& GetClaimDestinations();" 
 [01] 14031EC04 "void RequestPurchaseRankIncrease(const Crc32&);" 
 [02] 14031EBC8 "void RequestMissionCompletion(ObjectiveInstanceId);" 
 [03] 14031EC68 "Vector2 GetCurrentProviderPosition();" 
 [04] 14031EBFC "void RequestPurchaseItem(const Crc32&, unsigned int);" 
 [05] 14031EBC0 "Duration GetTimeTillNextProviderUpdate();" 
 [06] 14031EBF4 "bool CanCompleteMission(ObjectiveInstanceId);" 
 [07] 14031EC1C "bool HasValidProviderData();" 
 [08] 14031EC34 "void RequestMissionSelectionById(Crc32);" 
 [09] 14031EC24 "AZStd::vector<Crc32, allocator>& GetCurrentMissionCategories();" 
 [10] 14031EC0C "bool RequestCommunityGoalSelection(Crc32, Crc32);" 
 [11] 14031EBE8 "const AZStd::vector<MissionDestinationData, allocator>& GetOutpostDestinations();" 
 [12] 14031EC2C "const AZStd::vector<ObjectiveCreationParams, allocator>& GetCurrentMissions();" 
 [13] 14031EC70 "void UpdateLandmarkDataAvailability();" 
 [14] 14031EBD0 "int GetSecondsToNextSeed();" 
 [15] 14031EBD8 "const AZStd::vector<ObjectiveCreationParams, allocator>& GetCurrentCommunityGoals();" 
 [16] 14031EBE0 "const AZStd::vector<ObjectiveCreationParams, allocator>& GetCurrentPvpMissions();" 
 [17] 14031EC54 "void RequestPvpMissionSelection(Crc32);" 
 [18] 14031EC5C "unsigned char CanSelectPvpMission(Crc32);" 
 
[482] "ObjectiveInteractorNotificationBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_createHandler:
 14499FC00 "BehaviorEBusHandler* ObjectiveInteractorNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ObjectiveInteractorNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
 
[483] "GritEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F730 "BehaviorEBusHandler* GritEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void GritEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3020 "const EntityId* GritEventBus::GetCurrentBusId();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF757C742D4
 
[484] "ReactionEventBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0390 "BehaviorEBusHandler* ReactionEventBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ReactionEventBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3410 "const EntityId* ReactionEventBus::GetCurrentBusId();" 
m_attributes:
 ("const char*" 8D3AD28A-3470-5118-AAA8-58E8353E0B65), VT: 145420B90, V: 0x7FF757AA0C90
 
[485] "AITargetSelectionNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 14499F100 "BehaviorEBusHandler* AITargetSelectionNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void AITargetSelectionNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A2E40 "const EntityId* AITargetSelectionNotificationBus::GetCurrentBusId();" 
 
[486] "BuildableRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A2ED0 "const EntityId* BuildableRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "void SetBuildableName(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>&);" 
 [01] 14031EBE8 "bool IsComplete();" 
 [02] 14031EC1C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetBuildableDisplayName();" 
 [03] 14031EC68 "int GetNextTier();" 
 [04] 14031EBF4 "int GetCurrentTier();" 
 [05] 14031EC24 "const Crc32& GetBuildableId();" 
 [06] 14031EBC0 "bool CanBePickedUp();" 
 [07] 14031EC2C "const Crc32& GetUpgradeBlueprintId();" 
 
[487] "UiImageBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 141680090 "const EntityId* UiImageBus::GetCurrentBusId();" 
m_events:
 [00] 1405F6B14 "void ClearUVOverrides();" 
 [01] 1405F6B08 "void SetUVOverrides(float, float, float, float);" 
 [02] 1405F6AFC "unsigned int GetSpriteSheetCellIndexFromAlias(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [03] 1405F6AF0 "void SetSpriteSheetCellAlias(unsigned int, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [04] 14050D274 "int GetImageType();" 
 [05] 14031EC54 "void SetIsRenderTargetSRGB(bool);" 
 [06] 14031EC5C "int GetSpriteType();" 
 [07] 1404C7AA8 "void SetFillAmount(float);" 
 [08] 14031EC0C "bool GetIsRenderTargetSRGB();" 
 [09] 1404C7AC0 "void SetRadialFillStartAngle(float);" 
 [10] 14031EBE8 "void SetSpriteType(int);" 
 [11] 14050D244 "void SetCornerFillOrigin(int);" 
 [12] 14031EBE0 "void SetRenderTargetName(AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [13] 14031EBC0 "Color GetColor();" 
 [14] 1404C7AB4 "float GetRadialFillStartAngle();" 
 [15] 14031EBF4 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetSpritePathname();" 
 [16] 1404C7A90 "void SetFillType(int);" 
 [17] 14031EC1C "void SetColor(const Color&);" 
 [18] 14031EC68 "void SetSpritePathname(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [19] 14031EC24 "float GetAlpha();" 
 [20] 14050D238 "int GetCornerFillOrigin();" 
 [21] 14050D25C "void SetEdgeFillOrigin(int);" 
 [22] 14031EC04 "bool SetSpritePathnameIfExists(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [23] 14031EBD8 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetRenderTargetName();" 
 [24] 14031EBD0 "void UnloadTexture();" 
 [25] 14031EC2C "void SetAlpha(float);" 
 [26] 14031EC70 "void SetImageType(int);" 
 [27] 14031EBFC "void SetSpritePathnamePool(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, unsigned int);" 
 [28] 14031EC3C "const unsigned int GetSpriteSheetCellIndex();" 
 [29] 14050D22C "void SetFillCenter(bool);" 
 [30] 1405F6ACC "void SetSpriteSheetCellIndex(unsigned int);" 
 [31] 1404C7A84 "int GetFillType();" 
 [32] 1404C7A9C "float GetFillAmount();" 
 [33] 14050D250 "int GetEdgeFillOrigin();" 
 [34] 14031EC48 "bool GetFillClockwise();" 
 [35] 14050D268 "void SetFillClockwise(bool);" 
 [36] 14050D220 "bool GetFillCenter();" 
 [37] 1405F6AE4 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetSpriteSheetCellAlias(unsigned int);" 
m_virtualProperties:
 [00]
  14031EBC0 "Color Color();" 
  14031EBC0 "Color Color(EntityId);" 
 [01]
  1404C7A9C "float FillAmount();" 
  1404C7A9C "float FillAmount(EntityId);" 
 [02]
  1404C7AB4 "float RadialFillStartAngle();" 
  1404C7AB4 "float RadialFillStartAngle(EntityId);" 
 [03]
  14031EC24 "float Alpha();" 
  14031EC24 "float Alpha(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
 
[488] "TerritoryDetectorServiceRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A34A0 "const EntityId* TerritoryDetectorServiceRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EBC8 "bool DoesTerritoryBelongToGuild(unsigned short, const GuildId&);" 
 [01] 14031EC24 "bool AreRaidsAtWarOnCurrentTerritory(const RaidId&, const RaidId&);" 
 [02] 14031EBC0 "bool IsTerritoryWarCombatEnabled();" 
 [03] 14031EC34 "unsigned short GetDetectedTerritoryId();" 
 [04] 14031EC68 "void GetDetectedTerritoryGovernanceData(GovernanceTaxData&);" 
 
[489] "PeriodicRewardsDataManagerRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC1C "const PeriodicRewardsData& GetPeriodicRewardData(int);" 
 [01] 14031EBC0 "const AZStd::vector<AZStd::vector<PeriodicRewardsData, allocato GetPeriodicRewardSlots(int);" 
 
[490] "PeriodicRewardsClientNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 1449A0020 "BehaviorEBusHandler* PeriodicRewardsClientNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void PeriodicRewardsClientNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 1449A3320 "const EntityId* PeriodicRewardsClientNotificationBus::GetCurrentBusId();" 
 
[491] "CampSkinDataManagerRequestBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EBC0 "void GetAllCampSkinIds(AZStd::vector<Crc32, allocator>&);" 
 [01] 14031EC24 "const StaticCampSkinData& GetCampSkinDataByKey(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [02] 14031EC1C "const StaticCampSkinData& GetCampSkinDataById(Crc32);" 
 
[492] "CampingClientRequestBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1449A2F30 "const EntityId* CampingClientRequestBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC2C "Crc32 GetCurrentCampSkinId();" 
 [01] 14031EBC0 "void RequestPlaceCamp();" 
 [02] 14031EC1C "void RequestDemolishCamp();" 
 [03] 14031EC24 "void RequestSetCampSkinId(Crc32);" 
 
[493] "LyShineManagerNotificationBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 143EA5BD0 "BehaviorEBusHandler* LyShineManagerNotificationBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void LyShineManagerNotificationBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 143EA87E0 "const EntityId* LyShineManagerNotificationBus::GetCurrentBusId();" 
 
[494] "ShapeComponentNotificationsBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_createHandler:
 141C3CA20 "BehaviorEBusHandler* ShapeComponentNotificationsBus::CreateHandler();" 
m_destroyHandler:
 1403DDA20 "void ShapeComponentNotificationsBus::DestroyHandler(BehaviorEBusHandler*);" 
m_getCurrentId:
 141C87BE0 "const EntityId* ShapeComponentNotificationsBus::GetCurrentBusId();" 
 
[495] "LyShineManagerBus" 
BehaviorParameter: m_name: "BusIdType", m_traits: 4
m_events:
 [00] 14031EC34 "unsigned int CreateSpriteCachePool(unsigned int);" 
 [01] 1405F6BEC "bool CanvasSupportsMultithreading(EntityId);" 
 [02] 14031EC2C "void ReloadCanvas(EntityId);" 
 [03] 14031EC0C "void DeregisterScreen(EntityId);" 
 [04] 1404C7AA8 "bool IsKeybindBound(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [05] 14031EBC0 "void EnableMouse(bool);" 
 [06] 1405F6BB0 "void RemoveMouseOwner(EntityId);" 
 [07] 1405F6BE0 "void ResetMouse();" 
 [08] 1405F6BA4 "void AddMouseOwner(EntityId);" 
 [09] 14050D25C "void InitializeDebugFeatures(bool);" 
 [10] 14050D274 "AZStd::vector<AZStd::basic_string<char, AZStd::char_traits<char GetActionInMapByKey(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [11] 1405F6ACC "void SetState(Crc32);" 
 [12] 1405F6AF0 "void ToggleState(Crc32);" 
 [13] 1404C7AB4 "void AddActionMapOverrider(EntityId, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [14] 1405F6AE4 "void ExitState(Crc32);" 
 [15] 1405F6BF8 "void InvalidateLayout(EntityId);" 
 [16] 1404C7A90 "bool IsActionActivatedOnHold(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [17] 1404C7A84 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetKeybindWithoutHold(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [18] 14031EBE8 "void OnAction(EntityId, EntityId, AZStd::basic_string<char, AZStd::char_traits<char>, allocator>);" 
 [19] 14050D220 "void TryHideById(EntityId);" 
 [20] 1404C7AC0 "void RemoveActionMapOverrider(EntityId, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [21] 14050D238 "Vector3 ProjectToScreen(const Vector3&, bool, bool);" 
 [22] 14050D268 "void TryShowById(EntityId);" 
 [23] 1405F6AFC "bool IsInState(Crc32);" 
 [24] 14031EC3C "void EnableWorldHitUIAction(bool);" 
 [25] 14031EC54 "void DeregisterAllScreens();" 
 [26] 14075959C "void ProfileBegin(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [27] 1405F6BD4 "void SetIsKeybinding(bool);" 
 [28] 1405F6B20 "Crc32 GetCurrentState();" 
 [29] 14031EC70 "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetKeybind(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [30] 1405F6B2C "void TransitionOutComplete();" 
 [31] 14050D22C "void QueueState(Crc32);" 
 [32] 1404C7A9C "AZStd::basic_string<char, AZStd::char_traits<char>, allocator> GetActionInputName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [33] 1405F6B08 "bool IsInLevel(int);" 
 [34] 1405F6B74 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetServerMOTD();" 
 [35] 1405F6AD8 "bool IsWorldHitUIActionAllowed();" 
 [36] 1405F6B14 "int GetCurrentLevel();" 
 [37] 1407595A8 "void ProfileEnd(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [38] 1405F6B44 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetCryLevelName();" 
 [39] 1405F6B98 "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetGlobalAnnouncementMessage();" 
 [40] 1405F6B50 "void SetWorldName(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [41] 1405F6B5C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetWorldName();" 
 [42] 1405F6B68 "void SetServerMOTD(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [43] 1405F6B80 "void SetGlobalAnnouncement(const AZStd::basic_string<char, AZStd::char_traits<char>, alloc, const AZStd::basic_string<char, AZStd::char_traits<char>, alloc);" 
 [44] 1405F6B8C "const AZStd::basic_string<char, AZStd::char_traits<char>, alloc GetGlobalAnnouncementTitle();" 
 
[496] "UiTooltipDisplayBus" 
BehaviorParameter: m_name: "EntityId", m_traits: 0
m_getCurrentId:
 1416807E0 "const EntityId* UiTooltipDisplayBus::GetCurrentBusId();" 
m_events:
 [00] 14031EC0C "void SetDisplayTime(float);" 
 [01] 14031EBE0 "float GetDisplayTime();" 
 [02] 14031EBD8 "void SetDelayTime(float);" 
 [03] 14031EC04 "void SetTextEntity(EntityId);" 
 [04] 14031EBD0 "float GetDelayTime();" 
 [05] 14031EBC0 "bool GetAutoPosition();" 
 [06] 14031EC1C "void SetAutoPosition(bool);" 
 [07] 14031EBFC "EntityId GetTextEntity();" 
 [08] 14031EC24 "int GetAutoPositionMode();" 
 [09] 14031EBC8 "void SetOffset(const Vector2&);" 
 [10] 14031EC34 "const Vector2& GetOffset();" 
 [11] 14031EC2C "void SetAutoPositionMode(int);" 
 [12] 14031EBF4 "bool GetAutoSize();" 
 [13] 14031EC68 "void SetAutoSize(bool);" 
m_virtualProperties:
 [00]
  14031EBE0 "float DisplayTime();" 
  14031EBE0 "float DisplayTime(EntityId);" 
 [01]
  14031EBD0 "float DelayTime();" 
  14031EBD0 "float DelayTime(EntityId);" 
m_attributes:
 ("Unknown" F5A99F35-EB21-560A-9FD3-9F4B9D060745), VT: 145420890, V: 0x4
